{"mappings":"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","sources":["<anon>","src/main.ts","src/vec2.ts","src/vec4.ts","src/rect.ts","src/mat3.ts","src/mat4.ts","node_modules/.pnpm/@parcel+runtime-js@2.9.1_@parcel+core@2.9.1/node_modules/@parcel/runtime-js/lib/bundles/runtime-4192d13f7c058f1b.js"],"sourcesContent":["import {loadFromDataUri as $X9A9e$loadFromDataUri} from \"asyl\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nlet $485e585505f5c80a$var$m = null;\nclass $485e585505f5c80a$export$2e2bcd8739ae039 {\n    /**\n\t * Binds the specified Asyl module to the class.\n\t */ static bind(module) {\n        $485e585505f5c80a$var$m = module;\n    }\n    /**\n\t * Allocates a new vector with the specified coordinates.\n\t */ static alloc(x = 0, y = 0) {\n        return new $485e585505f5c80a$export$2e2bcd8739ae039($485e585505f5c80a$var$m.vec2_alloc2f(x, y));\n    }\n    /**\n\t * Constructs the vector with the specified coordinates.\n\t */ constructor(addr){\n        this.addr = addr;\n        this.data = $485e585505f5c80a$var$m.mapFloat32Array(addr, 2);\n    }\n    /**\n\t * Destroys the instance.\n\t */ dtor() {\n        $485e585505f5c80a$var$m.vec2_dtor(this.addr);\n    }\n    /**\n\t * Returns a new vector with the same coordinates.\n\t */ clone() {\n        return new $485e585505f5c80a$export$2e2bcd8739ae039($485e585505f5c80a$var$m.vec2_clone(this.addr));\n    }\n    set(x, y = null) {\n        if (y === null) $485e585505f5c80a$var$m.vec2_set1v(this.addr, x.addr);\n        else $485e585505f5c80a$var$m.vec2_set2f(this.addr, x, y);\n        return this;\n    }\n    /**\n\t * Sets the X-coordinate of the vector.\n\t */ setX(x) {\n        this.data[0] = x;\n        return this;\n    }\n    /**\n\t * Sets the Y-coordinate of the vector.\n\t */ setY(y) {\n        this.data[1] = y;\n        return this;\n    }\n    /**\n\t * Returns the value of the X-coordinate.\n\t */ x() {\n        return this.data[0];\n    }\n    /**\n\t * Returns the value of the Y-coordinate.\n\t */ y() {\n        return this.data[1];\n    }\n    /**\n\t * Sets the coordinates of the vector to zero.\n\t */ zero() {\n        $485e585505f5c80a$var$m.vec2_zero(this.addr);\n        return this;\n    }\n    /**\n\t * Returns true if the vector coordinates are zero.\n\t */ iszero() {\n        return $485e585505f5c80a$var$m.vec2_iszero(this.addr);\n    }\n    equals(x, y = null) {\n        if (y === null) return $485e585505f5c80a$var$m.vec2_equals1v(this.addr, x.addr);\n        return $485e585505f5c80a$var$m.vec2_equals2f(this.addr, x, y);\n    }\n    almost(x, y = null, epsilon = null) {\n        if (epsilon === null) return $485e585505f5c80a$var$m.vec2_almost1v(this.addr, x.addr, y);\n        return $485e585505f5c80a$var$m.vec2_almost2f(this.addr, x, y, epsilon);\n    }\n    /**\n\t * Negates the vector, that is changing the sign of each component in the vector.\n\t */ neg() {\n        $485e585505f5c80a$var$m.vec2_neg(this.addr);\n        return this;\n    }\n    /**\n\t * Inverts the vector by changing each component to its reciprocal.\n\t */ inv() {\n        $485e585505f5c80a$var$m.vec2_inv(this.addr);\n        return this;\n    }\n    /**\n\t * Changes the components of the vector to their absolute value.\n\t */ abs() {\n        $485e585505f5c80a$var$m.vec2_abs(this.addr);\n        return this;\n    }\n    translate(dx, dy = null) {\n        if (dy === null) $485e585505f5c80a$var$m.vec2_translate1v(this.addr, dx.addr);\n        else $485e585505f5c80a$var$m.vec2_translate2f(this.addr, dx, dy);\n        return this;\n    }\n    /**\n\t * Rotates the vector by the specified angle (in radians) using the specified (optional) origin point.\n\t */ rotate(angle, cx = 0, cy = 0) {\n        $485e585505f5c80a$var$m.vec2_rotate3f(this.addr, angle, cx, cy);\n        return this;\n    }\n    add(dx, dy = null) {\n        if (dy === null) $485e585505f5c80a$var$m.vec2_add1v(this.addr, dx.addr);\n        else $485e585505f5c80a$var$m.vec2_add2f(this.addr, dx, dy);\n        return this;\n    }\n    sub(dx, dy = null) {\n        if (dy === null) $485e585505f5c80a$var$m.vec2_sub1v(this.addr, dx.addr);\n        else $485e585505f5c80a$var$m.vec2_sub2f(this.addr, dx, dy);\n        return this;\n    }\n    scale(fx, fy = null) {\n        if (fy === null) {\n            if (fx instanceof $485e585505f5c80a$export$2e2bcd8739ae039) $485e585505f5c80a$var$m.vec2_scale1v(this.addr, fx.addr);\n            else $485e585505f5c80a$var$m.vec2_scale1f(this.addr, fx);\n        } else $485e585505f5c80a$var$m.vec2_scale2f(this.addr, fx, fy);\n        return this;\n    }\n    /**\n\t * Performs `floor` on the components of the vector.\n\t */ floor() {\n        $485e585505f5c80a$var$m.vec2_floor(this.addr);\n        return this;\n    }\n    /**\n\t * Performs `ceil` on the components of the vector.\n\t */ ceil() {\n        $485e585505f5c80a$var$m.vec2_ceil(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the vector components to their integer parts.\n\t */ trunc() {\n        $485e585505f5c80a$var$m.vec2_trunc(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the vector components to their fractional parts.\n\t */ fract() {\n        $485e585505f5c80a$var$m.vec2_fract(this.addr);\n        return this;\n    }\n    dot(x, y = null) {\n        if (y === null) return $485e585505f5c80a$var$m.vec2_dot1v(this.addr, x.addr);\n        return $485e585505f5c80a$var$m.vec2_dot2f(this.addr, x, y);\n    }\n    /**\n\t * Returns the squared magnitude of the vector.\n\t */ mag2() {\n        return $485e585505f5c80a$var$m.vec2_mag2(this.addr);\n    }\n    /**\n\t * Returns the magnitude of the vector.\n\t */ mag() {\n        return $485e585505f5c80a$var$m.vec2_mag(this.addr);\n    }\n    /**\n\t * Normalizes the vector by dividing each component by the vector magnitude to obtain a unit vector.\n\t */ unit() {\n        $485e585505f5c80a$var$m.vec2_unit(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its major-axis, that is the component with the maximum absolute value.\n\t */ major() {\n        $485e585505f5c80a$var$m.vec2_major(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its minor-axis, that is the component with the minimum absolute value.\n\t */ minor() {\n        $485e585505f5c80a$var$m.vec2_minor(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its sign-vector representation.\n\t */ sign() {\n        $485e585505f5c80a$var$m.vec2_sign(this.addr);\n        return this;\n    }\n    /**\n\t * Returns the string representation of the coordinates of the vector.\n\t */ toString() {\n        return `(${this.x()}, ${this.y()})`;\n    }\n}\n\n\nlet $baf50d9434a9dd81$var$m = null;\nclass $baf50d9434a9dd81$export$2e2bcd8739ae039 {\n    /**\n\t * Binds the specified Asyl module to the class.\n\t */ static bind(module) {\n        $baf50d9434a9dd81$var$m = module;\n    }\n    /**\n\t * Allocates a new vector with the specified coordinates.\n\t */ static alloc(x = 0, y = 0, z = 0, w = 0) {\n        return new $baf50d9434a9dd81$export$2e2bcd8739ae039($baf50d9434a9dd81$var$m.vec4_alloc4f(x, y, z, w));\n    }\n    /**\n\t * Constructs the vector with the specified coordinates.\n\t */ constructor(addr){\n        this.addr = addr;\n        this.data = $baf50d9434a9dd81$var$m.mapFloat32Array(addr, 4);\n    }\n    /**\n\t * Destroys the instance.\n\t */ dtor() {\n        $baf50d9434a9dd81$var$m.vec4_dtor(this.addr);\n    }\n    /**\n\t * Returns a new vector with the same coordinates.\n\t */ clone() {\n        return new $baf50d9434a9dd81$export$2e2bcd8739ae039($baf50d9434a9dd81$var$m.vec4_clone(this.addr));\n    }\n    set(x, y = null, z = null, w = null) {\n        if (y === null) {\n            $baf50d9434a9dd81$var$m.vec4_set1v(this.addr, x.addr);\n            return this;\n        }\n        $baf50d9434a9dd81$var$m.vec4_set4f(this.addr, x, y, z, w);\n        return this;\n    }\n    /**\n\t * Sets the X-coordinate of the vector.\n\t */ setX(x) {\n        this.data[0] = x;\n        return this;\n    }\n    /**\n\t * Sets the Y-coordinate of the vector.\n\t */ setY(y) {\n        this.data[1] = y;\n        return this;\n    }\n    /**\n\t * Sets the Z-coordinate of the vector.\n\t */ setZ(z) {\n        this.data[2] = z;\n        return this;\n    }\n    /**\n\t * Sets the W-coordinate of the vector.\n\t */ setW(w) {\n        this.data[3] = w;\n        return this;\n    }\n    /**\n\t * Returns the value of the X-coordinate.\n\t */ x() {\n        return this.data[0];\n    }\n    /**\n\t * Returns the value of the Y-coordinate.\n\t */ y() {\n        return this.data[1];\n    }\n    /**\n\t * Returns the value of the Z-coordinate.\n\t */ z() {\n        return this.data[2];\n    }\n    /**\n\t * Returns the value of the W-coordinate.\n\t */ w() {\n        return this.data[3];\n    }\n    /**\n\t * Sets the coordinates of the vector to zero.\n\t */ zero() {\n        $baf50d9434a9dd81$var$m.vec4_zero(this.addr);\n        return this;\n    }\n    /**\n\t * Returns true if the vector coordinates are zero.\n\t */ iszero() {\n        return $baf50d9434a9dd81$var$m.vec4_iszero(this.addr);\n    }\n    equals(x, y = null, z = null, w = null) {\n        if (y === null) return $baf50d9434a9dd81$var$m.vec4_equals1v(this.addr, x.addr);\n        if (z === null) return $baf50d9434a9dd81$var$m.vec4_equals2f(this.addr, x, y);\n        return $baf50d9434a9dd81$var$m.vec4_equals4f(this.addr, x, y, z, w);\n    }\n    almost(x, y = null, z = null, w = null, epsilon = null) {\n        if (z === null) return $baf50d9434a9dd81$var$m.vec4_almost1v(this.addr, x.addr, y);\n        if (w === null) return $baf50d9434a9dd81$var$m.vec4_almost2f(this.addr, x, y, epsilon);\n        return $baf50d9434a9dd81$var$m.vec4_almost4f(this.addr, x, y, z, w, epsilon);\n    }\n    /**\n\t * Negates the vector, that is changing the sign of each component in the vector.\n\t */ neg() {\n        $baf50d9434a9dd81$var$m.vec4_neg(this.addr);\n        return this;\n    }\n    /**\n\t * Inverts the vector by changing each component to its reciprocal.\n\t */ inv() {\n        $baf50d9434a9dd81$var$m.vec4_inv(this.addr);\n        return this;\n    }\n    /**\n\t * Changes the components of the vector to their absolute value.\n\t */ abs() {\n        $baf50d9434a9dd81$var$m.vec4_abs(this.addr);\n        return this;\n    }\n    translate(dx, dy = null, dz = null, dw = null) {\n        if (dy === null) {\n            $baf50d9434a9dd81$var$m.vec4_translate1v(this.addr, dx.addr);\n            return this;\n        }\n        if (dz === null) {\n            $baf50d9434a9dd81$var$m.vec4_translate2f(this.addr, dx, dy);\n            return this;\n        }\n        $baf50d9434a9dd81$var$m.vec4_translate4f(this.addr, dx, dy, dz, dw);\n        return this;\n    }\n    add(dx, dy = null, dz = null, dw = null) {\n        if (dy === null) {\n            $baf50d9434a9dd81$var$m.vec4_add1v(this.addr, dx.addr);\n            return this;\n        }\n        if (dz === null) {\n            $baf50d9434a9dd81$var$m.vec4_add2f(this.addr, dx, dy);\n            return this;\n        }\n        $baf50d9434a9dd81$var$m.vec4_add4f(this.addr, dx, dy, dz, dw);\n        return this;\n    }\n    sub(dx, dy = null, dz = null, dw = null) {\n        if (dy === null) {\n            $baf50d9434a9dd81$var$m.vec4_sub1v(this.addr, dx.addr);\n            return this;\n        }\n        if (dz === null) {\n            $baf50d9434a9dd81$var$m.vec4_sub2f(this.addr, dx, dy);\n            return this;\n        }\n        $baf50d9434a9dd81$var$m.vec4_sub4f(this.addr, dx, dy, dz, dw);\n        return this;\n    }\n    scale(fx, fy = null, fz = null, fw = null) {\n        if (fy === null) {\n            if (fx instanceof $baf50d9434a9dd81$export$2e2bcd8739ae039) $baf50d9434a9dd81$var$m.vec4_scale1v(this.addr, fx.addr);\n            else $baf50d9434a9dd81$var$m.vec4_scale1f(this.addr, fx);\n            return this;\n        }\n        if (fz === null) {\n            $baf50d9434a9dd81$var$m.vec4_scale2f(this.addr, fx, fy);\n            return this;\n        }\n        $baf50d9434a9dd81$var$m.vec4_scale4f(this.addr, fx, fy, fz, fw);\n        return this;\n    }\n    /**\n\t * Performs `floor` on the components of the vector.\n\t */ floor() {\n        $baf50d9434a9dd81$var$m.vec4_floor(this.addr);\n        return this;\n    }\n    /**\n\t * Performs `ceil` on the components of the vector.\n\t */ ceil() {\n        $baf50d9434a9dd81$var$m.vec4_ceil(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the vector components to their integer parts.\n\t */ trunc() {\n        $baf50d9434a9dd81$var$m.vec4_trunc(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the vector components to their fractional parts.\n\t */ fract() {\n        $baf50d9434a9dd81$var$m.vec4_fract(this.addr);\n        return this;\n    }\n    dot(x, y = null, z = null, w = null) {\n        if (y === null) return $baf50d9434a9dd81$var$m.vec4_dot1v(this.addr, x.addr);\n        if (z === null) return $baf50d9434a9dd81$var$m.vec4_dot2f(this.addr, x, y);\n        return $baf50d9434a9dd81$var$m.vec4_dot4f(this.addr, x, y, z, w);\n    }\n    /**\n\t * Returns the squared magnitude of the vector.\n\t */ mag2() {\n        return $baf50d9434a9dd81$var$m.vec4_mag2(this.addr);\n    }\n    /**\n\t * Returns the magnitude of the vector.\n\t */ mag() {\n        return $baf50d9434a9dd81$var$m.vec4_mag(this.addr);\n    }\n    /**\n\t * Normalizes the vector by dividing each component by the vector magnitude to obtain a unit vector.\n\t */ unit() {\n        $baf50d9434a9dd81$var$m.vec4_unit(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its major-axis, that is the component with the maximum absolute value.\n\t */ major() {\n        $baf50d9434a9dd81$var$m.vec4_major(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its minor-axis, that is the component with the minimum absolute value.\n\t */ minor() {\n        $baf50d9434a9dd81$var$m.vec4_minor(this.addr);\n        return this;\n    }\n    /**\n\t * Sets the vector to its sign-vector representation.\n\t */ sign() {\n        $baf50d9434a9dd81$var$m.vec4_sign(this.addr);\n        return this;\n    }\n    /**\n\t * Returns the string representation of the coordinates of the vector.\n\t */ toString() {\n        return `(${this.x()}, ${this.y()}, ${this.z()}, ${this.w()})`;\n    }\n}\n\n\n\nlet $8d9a8566653c0099$var$m = null;\nclass $8d9a8566653c0099$export$2e2bcd8739ae039 {\n    /**\n\t * Binds the specified Asyl module to the class.\n\t */ static bind(module) {\n        $8d9a8566653c0099$var$m = module;\n    }\n    static alloc(x1 = null, y1 = null, x2 = false, y2 = null) {\n        if (x1 === null) return new $8d9a8566653c0099$export$2e2bcd8739ae039($8d9a8566653c0099$var$m.rect_alloc4f(0, 0, 0, 0));\n        if (y2 === null) return new $8d9a8566653c0099$export$2e2bcd8739ae039($8d9a8566653c0099$var$m.rect_alloc2f(x1, y1, x2));\n        return new $8d9a8566653c0099$export$2e2bcd8739ae039($8d9a8566653c0099$var$m.rect_alloc4f(x1, y1, x2, y2));\n    }\n    /**\n\t * Constructs the rectangle object.\n\t */ constructor(addr){\n        this.addr = addr;\n        this.data = $8d9a8566653c0099$var$m.mapFloat32Array(addr, 6);\n    }\n    /**\n\t * Destroys the instance.\n\t */ dtor() {\n        $8d9a8566653c0099$var$m.rect_dtor(this.addr);\n    }\n    /**\n\t * Returns a clone of the rectangle.\n\t */ clone() {\n        return new $8d9a8566653c0099$export$2e2bcd8739ae039($8d9a8566653c0099$var$m.rect_clone(this.addr));\n    }\n    /**\n\t * Sets all coordinates of the rectangle to zero.\n\t */ zero() {\n        $8d9a8566653c0099$var$m.rect_zero(this.addr);\n        return this;\n    }\n    /**\n\t * Sets all coordinates of the rectangle to `null` for subsequent use with `extend`.\n\t */ reset() {\n        $8d9a8566653c0099$var$m.rect_reset(this.addr);\n        return this;\n    }\n    extend(x, y = null) {\n        if (y === null) $8d9a8566653c0099$var$m.rect_extend1v(this.addr, x.addr);\n        else $8d9a8566653c0099$var$m.rect_extend2f(this.addr, x, y);\n        return this;\n    }\n    translate(dx, dy = null) {\n        if (dy === null) $8d9a8566653c0099$var$m.rect_translate1v(this.addr, dx.addr);\n        else $8d9a8566653c0099$var$m.rect_translate2f(this.addr, dx, dy);\n        return this;\n    }\n    /**\n\t * Moves the center of the rectangle to the specified position.\t \n\t * @param normalized - When `true` the parameters `x` and `y` are treated as normalized ranging from 0 to 1 (inclusive).\n\t * !centerAt (x: number, y: number, normalized?: false) : Rect;\n\t */ center(x, y, normalized = false) {\n        $8d9a8566653c0099$var$m.rect_center(this.addr, x, y, normalized);\n        return this;\n    }\n    set(x1, y1 = null, x2, y2) {\n        if (y1 === null) $8d9a8566653c0099$var$m.rect_set1r(this.addr, x1.addr);\n        else $8d9a8566653c0099$var$m.rect_set4f(this.addr, x1, y1, x2, y2);\n        return this;\n    }\n    equals(x1, y1 = null, x2, y2) {\n        if (y1 === null) return $8d9a8566653c0099$var$m.rect_equals1r(this.addr, x1.addr);\n        return $8d9a8566653c0099$var$m.rect_equals4f(this.addr, x1, y1, x2, y2);\n    }\n    contains(x1, y1 = 0, x2 = 0, y2 = null) {\n        if (x1 instanceof $8d9a8566653c0099$export$2e2bcd8739ae039) return $8d9a8566653c0099$var$m.rect_contains1r(this.addr, x1.addr);\n        if (x1 instanceof (0, $485e585505f5c80a$export$2e2bcd8739ae039)) return $8d9a8566653c0099$var$m.rect_contains1v(this.addr, x1.addr, x2);\n        if (y2 === null) return $8d9a8566653c0099$var$m.rect_contains2f(this.addr, x1, y1, x2);\n        return $8d9a8566653c0099$var$m.rect_contains4f(this.addr, x1, y1, x2, y2);\n    }\n    union(x1, y1 = null, x2, y2) {\n        if (y1 === null) $8d9a8566653c0099$var$m.rect_union1r(this.addr, x1.addr);\n        else $8d9a8566653c0099$var$m.rect_union4f(this.addr, x1, y1, x2, y2);\n        return this;\n    }\n    intersects(x1, y1 = null, x2, y2) {\n        if (y1 === null) $8d9a8566653c0099$var$m.rect_intersects1r(this.addr, x1.addr);\n        else $8d9a8566653c0099$var$m.rect_intersects4f(this.addr, x1, y1, x2, y2);\n        return this;\n    }\n    intersection(x1, y1 = null, x2, y2) {\n        if (y1 === null) return $8d9a8566653c0099$var$m.rect_intersection1r(this.addr, x1.addr);\n        return $8d9a8566653c0099$var$m.rect_intersection4f(this.addr, x1, y1, x2, y2);\n    }\n    /**\n\t * Resizes the rectangle to the given size using its center or top-left corner as reference.\n\t * @param topLeft - When `true` reference will be top-left corner, set to `false` to use the center.\n\t * @param normalized - When `true` the `width` and `height` will be treated as normalized values ranging from 0 to 1 (inclusive).\n\t */ resize(width, height, topLeft = false, normalized = false) {\n        $8d9a8566653c0099$var$m.rect_resize(this.addr, width, height, topLeft, normalized);\n        return this;\n    }\n    /**\n\t * Resizes the rectangle using the specified deltas, relative to its center or top-left corner.\n\t * @param topLeft - When `true` reference will be top-left corner, set to `false` to use the center.\n\t */ resizeBy(dWidth, dHeight, topLeft = false) {\n        $8d9a8566653c0099$var$m.rect_resizeBy(this.addr, dWidth, dHeight, topLeft);\n        return this;\n    }\n    /**\n\t * Returns the value of the X1 coordinate.\n\t */ x1() {\n        return this.data[0];\n    }\n    /**\n\t * Returns the value of the Y1 coordinate.\n\t */ y1() {\n        return this.data[1];\n    }\n    /**\n\t * Returns the value of the X2 coordinate.\n\t */ x2() {\n        return this.data[2];\n    }\n    /**\n\t * Returns the value of the Y2 coordinate.\n\t */ y2() {\n        return this.data[3];\n    }\n    /**\n\t * Returns the value of the center X coordinate.\n\t */ cx() {\n        return this.data[4];\n    }\n    /**\n\t * Returns the value of the center Y coordinate.\n\t */ cy() {\n        return this.data[5];\n    }\n    /**\n\t * Returns the width of the rectangle.\n\t */ width() {\n        return $8d9a8566653c0099$var$m.rect_width(this.addr);\n    }\n    /**\n\t * Returns the height of the rectangle.\t \n\t */ height() {\n        return $8d9a8566653c0099$var$m.rect_height(this.addr);\n    }\n    /**\n\t * Returns `true` if the rectangle is a right rectangle, that is: x1 < x2 and y1 < y2.\n\t */ isRight() {\n        return $8d9a8566653c0099$var$m.rect_isRight(this.addr);\n    }\n    /**\n\t * Returns the area of the rectangle.\n\t * @param strict - Indicates if the area is returned only if the rectangle is a right rectangle.\n\t */ area(strict) {\n        return $8d9a8566653c0099$var$m.rect_area(this.addr, strict);\n    }\n    /**\n\t * Performs `floor` on the coordinates of the rectangle.\n\t */ floor() {\n        $8d9a8566653c0099$var$m.rect_floor(this.addr);\n        return this;\n    }\n    /**\n\t * Performs `ceil` on the coordinates of the rectangle.\n\t */ ceil() {\n        $8d9a8566653c0099$var$m.rect_ceil(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the rectangle coordinates to their integer parts.\n\t */ trunc() {\n        $8d9a8566653c0099$var$m.rect_trunc(this.addr);\n        return this;\n    }\n    /**\n\t * Truncates the rectangle coordinates to their fractional parts.\n\t */ fract() {\n        $8d9a8566653c0099$var$m.rect_fract(this.addr);\n        return this;\n    }\n    /**\n\t * Returns the string representation of the rectangle.\n\t */ toString() {\n        return `(${this.x1()}, ${this.y1()}, ${this.x2()}, ${this.y2()})`;\n    }\n}\n\n\nlet $f4e62a7eed23d321$var$m = null;\nclass $f4e62a7eed23d321$export$2e2bcd8739ae039 {\n    /**\n\t * Binds the specified Asyl module to the class.\n\t */ static bind(module) {\n        $f4e62a7eed23d321$var$m = module;\n    }\n    /**\n\t * Allocates a new matrix.\n\t */ static alloc() {\n        return new $f4e62a7eed23d321$export$2e2bcd8739ae039($f4e62a7eed23d321$var$m.mat3_alloc());\n    }\n    /**\n\t * Constructs the matrix object.\n\t */ constructor(addr){\n        this.addr = addr;\n        this.data = $f4e62a7eed23d321$var$m.mapFloat32Array(addr, 9);\n    }\n    /**\n\t * Destroys the instance.\n\t */ dtor() {\n        $f4e62a7eed23d321$var$m.mat3_dtor(this.addr);\n    }\n    /**\n\t * Returns a clone of the matrix.\n\t */ clone() {\n        return new $f4e62a7eed23d321$export$2e2bcd8739ae039($f4e62a7eed23d321$var$m.mat3_clone(this.addr));\n    }\n    /**\n\t * Sets all components of the matrix to the given value.\n\t */ fill(value) {\n        $f4e62a7eed23d321$var$m.mat3_fill1f(this.addr, value);\n        return this;\n    }\n    set(value, a0 = null, a1 = null, a2 = null) {\n        if (value instanceof $f4e62a7eed23d321$export$2e2bcd8739ae039) {\n            $f4e62a7eed23d321$var$m.mat3_set1m(this.addr, value.addr);\n            return this;\n        }\n        if (a0 === null) {\n            $f4e62a7eed23d321$var$m.mat3_set1f(this.addr, value);\n            return this;\n        }\n        $f4e62a7eed23d321$var$m.mat3_set1i3f(this.addr, value, a0, a1, a2);\n        return this;\n    }\n    /**\n\t * Sets a column of the matrix.\n\t */ col(col, a0, a1, a2) {\n        $f4e62a7eed23d321$var$m.mat3_col1i3f(this.addr, col, a0, a1, a2);\n        return this;\n    }\n    /**\n\t * Sets a row of the matrix.\n\t */ row(row, a0, a1, a2) {\n        $f4e62a7eed23d321$var$m.mat3_row1i3f(this.addr, row, a0, a1, a2);\n        return this;\n    }\n    /**\n\t * Sets all components of the matrix to zero, and the diagonal to ones.\n\t */ identity() {\n        $f4e62a7eed23d321$var$m.mat3_identity(this.addr);\n        return this;\n    }\n    scale(sx, sy = null) {\n        if (sy === null) $f4e62a7eed23d321$var$m.mat3_scale1f(this.addr, sx);\n        else $f4e62a7eed23d321$var$m.mat3_scale2f(this.addr, sx, sy);\n        return this;\n    }\n    /**\n\t * Transposes the matrix.\n\t */ transpose() {\n        $f4e62a7eed23d321$var$m.mat3_transpose(this.addr);\n        return this;\n    }\n    /**\n\t * Returns the determinant of the matrix.\n\t */ det() {\n        return $f4e62a7eed23d321$var$m.mat3_det(this.addr);\n    }\n    /**\n\t * Appends the given matrix by using matrix multiplication.\n\t */ append(matrix) {\n        $f4e62a7eed23d321$var$m.mat3_append1m(this.addr, matrix.addr);\n        return this;\n    }\n    /**\n\t * Appends a translation matrix constructed with the specified deltas.\n\t */ translate(dx, dy) {\n        $f4e62a7eed23d321$var$m.mat3_translate2f(this.addr, dx, dy);\n        return this;\n    }\n    /**\n\t * Appends a rotation matrix constructed for the specified angle (in radians).\n\t */ rotate(angle) {\n        $f4e62a7eed23d321$var$m.mat3_rotate1f(this.addr, angle);\n        return this;\n    }\n    /**\n\t * Returns the string representation of the matrix.\n\t */ toString() {\n        return \"[\" + Array.from(this.data).join(\", \") + \"]\";\n    }\n}\n\n\nlet $3514beae8516eb55$var$m = null;\nclass $3514beae8516eb55$export$2e2bcd8739ae039 {\n    /**\n\t * Binds the specified Asyl module to the class.\n\t */ static bind(module) {\n        $3514beae8516eb55$var$m = module;\n    }\n    /**\n\t * Allocates a new matrix.\n\t */ static alloc() {\n        return new $3514beae8516eb55$export$2e2bcd8739ae039($3514beae8516eb55$var$m.mat4_alloc());\n    }\n    /**\n\t * Constructs the matrix object.\n\t */ constructor(addr){\n        this.addr = addr;\n        this.data = $3514beae8516eb55$var$m.mapFloat32Array(addr, 16);\n    }\n    /**\n\t * Destroys the instance.\n\t */ dtor() {\n        $3514beae8516eb55$var$m.mat4_dtor(this.addr);\n    }\n    /**\n\t * Returns a clone of the matrix.\n\t */ clone() {\n        return new $3514beae8516eb55$export$2e2bcd8739ae039($3514beae8516eb55$var$m.mat4_clone(this.addr));\n    }\n    /**\n\t * Sets all components of the matrix to the given value.\n\t */ fill(value) {\n        $3514beae8516eb55$var$m.mat4_fill1f(this.addr, value);\n        return this;\n    }\n    set(value, a0 = null, a1 = null, a2 = null, a3 = null) {\n        if (value instanceof $3514beae8516eb55$export$2e2bcd8739ae039) {\n            $3514beae8516eb55$var$m.mat4_set1m(this.addr, value.addr);\n            return this;\n        }\n        if (a0 === null) {\n            $3514beae8516eb55$var$m.mat4_set1f(this.addr, value);\n            return this;\n        }\n        $3514beae8516eb55$var$m.mat4_set1i4f(this.addr, value, a0, a1, a2, a3);\n        return this;\n    }\n    /**\n\t * Sets a column of the matrix.\n\t */ col(col, a0, a1, a2, a3) {\n        $3514beae8516eb55$var$m.mat4_col1i4f(this.addr, col, a0, a1, a2, a3);\n        return this;\n    }\n    /**\n\t * Sets a row of the matrix.\n\t */ row(row, a0, a1, a2, a3) {\n        $3514beae8516eb55$var$m.mat4_row1i4f(this.addr, row, a0, a1, a2, a3);\n        return this;\n    }\n    /**\n\t * Sets all components of the matrix to zero, and the diagonal to ones.\n\t */ identity() {\n        $3514beae8516eb55$var$m.mat4_identity(this.addr);\n        return this;\n    }\n    scale(sx, sy = null, sz = null) {\n        if (sy === null) $3514beae8516eb55$var$m.mat4_scale1f(this.addr, sx);\n        else $3514beae8516eb55$var$m.mat4_scale3f(this.addr, sx, sy, sz);\n        return this;\n    }\n    /**\n\t * Transposes the matrix.\n\t */ transpose() {\n        $3514beae8516eb55$var$m.mat4_transpose(this.addr);\n        return this;\n    }\n    /**\n\t * Returns the determinant of the matrix.\n\t */ det() {\n        return $3514beae8516eb55$var$m.mat4_det(this.addr);\n    }\n    /**\n\t * Appends the given matrix by using matrix multiplication.\n\t */ append(matrix) {\n        $3514beae8516eb55$var$m.mat4_append1m(this.addr, matrix.addr);\n        return this;\n    }\n    /**\n\t * Appends a translation matrix constructed with the specified deltas.\n\t */ translate(dx, dy, dz) {\n        $3514beae8516eb55$var$m.mat4_translate3f(this.addr, dx, dy, dz);\n        return this;\n    }\n    /**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the X-axis.\n\t */ rotateX(angle) {\n        $3514beae8516eb55$var$m.mat4_rotateX(this.addr, angle);\n        return this;\n    }\n    /**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the Y-axis.\n\t */ rotateY(angle) {\n        $3514beae8516eb55$var$m.mat4_rotateY(this.addr, angle);\n        return this;\n    }\n    /**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the Z-axis.\n\t */ rotateZ(angle) {\n        $3514beae8516eb55$var$m.mat4_rotateZ(this.addr, angle);\n        return this;\n    }\n    /**\n\t * Returns the string representation of the matrix.\n\t */ toString() {\n        return \"[\" + Array.from(this.data).join(\", \") + \"]\";\n    }\n}\n\n\nvar $3b9d45a30e932e6f$exports = {};\n$3b9d45a30e932e6f$exports = \"data:application/wasm;base64,AGFzbQEAAAABjQIoYAAAYAN%2Ff38Bf2ADf35%2FAX5gAX8Bf2AEf35%2FfwF%2FYAR%2Ff39%2FAX9gAnx8AX9gAX8AYAN%2FfHwAYAJ%2FfwBgA398fAF%2FYAJ%2FfwF%2FYAR%2FfHx8AX9gA39%2FfAF%2FYAR%2FfHx8AGACf3wAYAN%2FfHwBfGACf38BfGABfwF8YAR8fHx8AX9gBX98fHx8AGAFf3x8fHwBf2AGf3x8fHx8AX9gBX98fHx8AXxgAAF%2FYAV%2Ff3x8fABgAX8BfWAGf398fHx8AGADfHx%2FAX9gBX98fH9%2FAGAEf3x8fwBgA39%2FfwBgAn19AX1gAnx8AXxgBX9%2Ff39%2FAX9gBX9%2Ff39%2FAGACfH8BfGACfH8Bf2ABfAF8YAN8fH8BfAJmAxZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxCGZkX2Nsb3NlAAMWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQdmZF9zZWVrAAQWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQhmZF93cml0ZQAFA54DnAMABgcDCAkHAwoLDA0HBwcICQ4ICQgJDwgJBwcHBxAREhIHBwcHEwcDFAkHAxUKCxYMDQcHBxQICRQICRQICRQIDwkHBwcHFxAREhIHBwcHGAcDCQ8PGRkHDwcaCQgPCBgHAwkPDxsbBw8HGgkODw8PDhMUHB0HAwcHCAkICR4JFQsVCwwNFAkVCxULHhISAxEHBwcHAwEDAwkYCwcAGAcAGAMLAwsHCQkHCQkLCwELAQkHHx8JHx8DAwcHCQELAyAgISEAAwQFAQEDAwICARgAAwEFAwsBIh8jAAsBAQMBCwsLASQhJSYmIiQnAAAGAwcDCAkHAwoLDA0HBwcICQ4ICQgJDwgJBwcHBxAREhIHBwcHEwcDFAkHAxUKCxYMDQcHBxQICRQICRQICRQIDwkHBwcHFxAREhIHBwcHGAcDCQ8PGRkHDwcaCQgPCBgHAwkPDxsbBw8HGgkODw8PDhMUHB0HAwcHCAkICR4JFQsVCwwNFAkVCxULHhISAxEHBwcHAwMDGAAYABgLAwsHCQkHCQkLAQsBCR8fCR8fBAUBcAEGBgUEAQMCAgYaBH8BQcC4BAt%2FAEHUMQt%2FAEHQMQt%2FAEGUNAsHthezAQZtZW1vcnkCABhfX2N4YV91bmV4cGVjdGVkX2hhbmRsZXIDARdfX2N4YV90ZXJtaW5hdGVfaGFuZGxlcgMCEV9fY3hhX25ld19oYW5kbGVyAwMMdmVjMl9hbGxvYzJmAPABBV9abndtAPEBCXZlYzJfZHRvcgDyAQp2ZWMyX2Nsb25lAPMBCnZlYzJfc2V0MmYA9AEKdmVjMl9zZXQxdgD1AQl2ZWMyX3plcm8A9gELdmVjMl9pc3plcm8A9wENdmVjMl9lcXVhbHMyZgD4AQ12ZWMyX2VxdWFsczF2APkBDXZlYzJfYWxtb3N0MmYA%2BgENdmVjMl9hbG1vc3QxdgD7AQh2ZWMyX25lZwD8AQh2ZWMyX2ludgD9AQh2ZWMyX2FicwD%2BARB2ZWMyX3RyYW5zbGF0ZTJmAP8BEHZlYzJfdHJhbnNsYXRlMXYAgAINdmVjMl9yb3RhdGUzZgCBAgp2ZWMyX2FkZDJmAIICCnZlYzJfYWRkMXYAgwIKdmVjMl9zdWIyZgCEAgp2ZWMyX3N1YjF2AIUCDHZlYzJfc2NhbGUxZgCGAgx2ZWMyX3NjYWxlMmYAhwIMdmVjMl9zY2FsZTF2AIgCCnZlYzJfZmxvb3IAiQIJdmVjMl9jZWlsAIoCCnZlYzJfdHJ1bmMAiwIKdmVjMl9mcmFjdACMAgp2ZWMyX2RvdDJmAI0CCnZlYzJfZG90MXYAjgIJdmVjMl9tYWcyAI8CCHZlYzJfbWFnAJACCXZlYzJfdW5pdACRAgp2ZWMyX21ham9yAJICCnZlYzJfbWlub3IAkwIJdmVjMl9zaWduAJQCDHZlYzRfYWxsb2M0ZgCVAgl2ZWM0X2R0b3IAlgIKdmVjNF9jbG9uZQCXAgp2ZWM0X3NldDRmAJgCCnZlYzRfc2V0MXYAmQIJdmVjNF96ZXJvAJoCC3ZlYzRfaXN6ZXJvAJsCDXZlYzRfZXF1YWxzNGYAnAINdmVjNF9lcXVhbHMyZgCdAg12ZWM0X2VxdWFsczF2AJ4CDXZlYzRfYWxtb3N0NGYAnwINdmVjNF9hbG1vc3QyZgCgAg12ZWM0X2FsbW9zdDF2AKECCHZlYzRfbmVnAKICCHZlYzRfaW52AKMCCHZlYzRfYWJzAKQCEHZlYzRfdHJhbnNsYXRlNGYApQIQdmVjNF90cmFuc2xhdGUyZgCmAhB2ZWM0X3RyYW5zbGF0ZTF2AKcCCnZlYzRfYWRkNGYAqAIKdmVjNF9hZGQyZgCpAgp2ZWM0X2FkZDF2AKoCCnZlYzRfc3ViNGYAqwIKdmVjNF9zdWIyZgCsAgp2ZWM0X3N1YjF2AK0CDHZlYzRfc2NhbGU0ZgCuAgx2ZWM0X3NjYWxlMmYArwIMdmVjNF9zY2FsZTFmALACDHZlYzRfc2NhbGUxdgCxAgp2ZWM0X2Zsb29yALICCXZlYzRfY2VpbACzAgp2ZWM0X3RydW5jALQCCnZlYzRfZnJhY3QAtQIKdmVjNF9kb3Q0ZgC2Agp2ZWM0X2RvdDJmALcCCnZlYzRfZG90MXYAuAIJdmVjNF9tYWcyALkCCHZlYzRfbWFnALoCCXZlYzRfdW5pdAC7Agp2ZWM0X21ham9yALwCCnZlYzRfbWlub3IAvQIJdmVjNF9zaWduAL4CCm1hdDNfYWxsb2MAvwIJbWF0M19kdG9yAMACCm1hdDNfY2xvbmUAwQIKbWF0M19zZXQxbQDCAgttYXQzX2ZpbGwxZgDDAgptYXQzX3NldDFmAMQCDG1hdDNfY29sMWkzZgDFAgxtYXQzX3JvdzFpM2YAxgINbWF0M19pZGVudGl0eQDHAgxtYXQzX3NjYWxlMWYAyAIObWF0M190cmFuc3Bvc2UAyQIIbWF0M19kZXQAygINbWF0M19hcHBlbmQxbQDLAhBtYXQzX3RyYW5zbGF0ZTJmAMwCDW1hdDNfcm90YXRlMWYAzQIMbWF0M19zY2FsZTJmAM4CCm1hdDRfYWxsb2MAzwIJbWF0NF9kdG9yANACCm1hdDRfY2xvbmUA0QIKbWF0NF9zZXQxbQDSAgttYXQ0X2ZpbGwxZgDTAgptYXQ0X3NldDFmANQCDG1hdDRfY29sMWk0ZgDVAgxtYXQ0X3JvdzFpNGYA1gINbWF0NF9pZGVudGl0eQDXAgxtYXQ0X3NjYWxlMWYA2AIObWF0NF90cmFuc3Bvc2UA2QIIbWF0NF9kZXQA2gINbWF0NF9hcHBlbmQxbQDbAhBtYXQ0X3RyYW5zbGF0ZTNmANwCDG1hdDRfcm90YXRlWADdAgxtYXQ0X3JvdGF0ZVkA3gIMbWF0NF9yb3RhdGVaAN8CDG1hdDRfc2NhbGUzZgDgAgxyZWN0X2FsbG9jNGYA4QIKcmVjdF9zZXQ0ZgDiAgxyZWN0X2FsbG9jMmYA4wILcmVjdF9yZXNpemUA5AIJcmVjdF9kdG9yAOUCCnJlY3RfY2xvbmUA5gIJcmVjdF96ZXJvAOcCCnJlY3RfcmVzZXQA6AINcmVjdF9leHRlbmQyZgDpAg1yZWN0X2V4dGVuZDF2AOoCEHJlY3RfdHJhbnNsYXRlMmYA6wIQcmVjdF90cmFuc2xhdGUxdgDsAgtyZWN0X2NlbnRlcgDtAgpyZWN0X3NldDFyAO4CDXJlY3RfZXF1YWxzNGYA7wINcmVjdF9lcXVhbHMxcgDwAg9yZWN0X2NvbnRhaW5zNGYA8QIPcmVjdF9jb250YWluczFyAPICD3JlY3RfY29udGFpbnMyZgDzAg9yZWN0X2NvbnRhaW5zMXYA9AIMcmVjdF91bmlvbjRmAPUCDHJlY3RfdW5pb24xcgD2AhFyZWN0X2ludGVyc2VjdHM0ZgD3AhFyZWN0X2ludGVyc2VjdHMxcgD4AhNyZWN0X2ludGVyc2VjdGlvbjRmAPkCE3JlY3RfaW50ZXJzZWN0aW9uMXIA%2BgINcmVjdF9yZXNpemVCeQD7AgpyZWN0X3dpZHRoAPwCC3JlY3RfaGVpZ2h0AP0CDHJlY3RfaXNSaWdodAD%2BAglyZWN0X2FyZWEA%2FwIKcmVjdF9mbG9vcgCAAwlyZWN0X2NlaWwAgQMKcmVjdF90cnVuYwCCAwpyZWN0X2ZyYWN0AIMDGV9aU3QxNHNldF91bmV4cGVjdGVkUEZ2dkUAhAMYX1pTdDEzc2V0X3Rlcm1pbmF0ZVBGdnZFAIUDGl9aU3QxNXNldF9uZXdfaGFuZGxlclBGdnZFAIYDFV9aU3QxNGdldF91bmV4cGVjdGVkdgCHAxFfWlN0MTB1bmV4cGVjdGVkdgCIAxRfWlN0MTNnZXRfdGVybWluYXRldgCJAw9fWlN0OXRlcm1pbmF0ZXYAigMWX1pTdDE1Z2V0X25ld19oYW5kbGVydgCLAxNfWm53bVJLU3Q5bm90aHJvd190AIwDBV9abmFtAI0DE19abmFtUktTdDlub3Rocm93X3QAjgMGX1pkbFB2AI8DFF9aZGxQdlJLU3Q5bm90aHJvd190AJADB19aZGxQdm0AkQMGX1pkYVB2AJIDFF9aZGFQdlJLU3Q5bm90aHJvd190AJMDB19aZGFQdm0AlAMUX1pud21TdDExYWxpZ25fdmFsX3QAlQMiX1pud21TdDExYWxpZ25fdmFsX3RSS1N0OW5vdGhyb3dfdACWAxRfWm5hbVN0MTFhbGlnbl92YWxfdACXAyJfWm5hbVN0MTFhbGlnbl92YWxfdFJLU3Q5bm90aHJvd190AJgDFV9aZGxQdlN0MTFhbGlnbl92YWxfdACZAyNfWmRsUHZTdDExYWxpZ25fdmFsX3RSS1N0OW5vdGhyb3dfdACaAxZfWmRsUHZtU3QxMWFsaWduX3ZhbF90AJsDFV9aZGFQdlN0MTFhbGlnbl92YWxfdACcAyNfWmRhUHZTdDExYWxpZ25fdmFsX3RSS1N0OW5vdGhyb3dfdACdAxZfWmRhUHZtU3QxMWFsaWduX3ZhbF90AJ4DCAEDCRABAEEBCwWiAcYBzQHLAc8BDAECCqiYA5wDZQACQAJAAkBBuDhBAEEB%2FkgCAA4CAAECC0GACEEAQdAp%2FAgAAEHQMUEAQfwA%2FAgBAEHMMkEAQewF%2FAsAQbg4QQL%2BFwIAQbg4QX%2F%2BAAIAGgwBC0G4OEEBQn%2F%2BAQIAGgv8CQD8CQELHgEBf0EIEKSBgIAAIgIgAbY4AgQgAiAAtjgCACACCwoAIAAQvIGAgAALHAEBfiAAKQIAIQFBCBCkgYCAACIAIAE3AwAgAAsSACAAIAK2OAIEIAAgAbY4AgALDAAgACABKQIANwIACwkAIABCADcCAAsnAQF%2FQQAhAQJAIAAqAgBDAAAAAFwNACAAKgIEQwAAAABbIQELIAELHAACQCAAKgIAuyABYQ0AQQAPCyAAKgIEuyACYQsgAAJAIAAqAgAgASoCAFsNAEEADwsgACoCBCABKgIEWwssAQF%2FQQAhBAJAIAAqAgC7IAGhmSADY0UNACAAKgIEuyACoZkgA2MhBAsgBAsyAQF%2FQQAhAwJAIAAqAgAgASoCAJOLuyACY0UNACAAKgIEIAEqAgSTi7sgAmMhAwsgAwsYACAAIAAqAgCMOAIAIAAgACoCBIw4AgQLIgAgAEMAAIA%2FIAAqAgCVOAIAIABDAACAPyAAKgIElTgCBAsYACAAIAAqAgCLOAIAIAAgACoCBIs4AgQLIAAgACAAKgIAuyABoLY4AgAgACAAKgIEuyACoLY4AgQLIgAgACABKgIAIAAqAgCSOAIAIAAgASoCBCAAKgIEkjgCBAtaAgF9A3wgACoCACEEIAEQ6oGAgAAhBSAAIAAqAgS7IAOhtrsiBiABEOmBgIAAIgGiIAUgBLsgAqG2uyIHoqEgA6C2OAIEIAAgByABoiAFIAaioCACoLY4AgALIAAgACAAKgIAuyABoLY4AgAgACAAKgIEuyACoLY4AgQLIgAgACABKgIAIAAqAgCSOAIAIAAgASoCBCAAKgIEkjgCBAsgACAAIAAqAgC7IAGhtjgCACAAIAAqAgS7IAKhtjgCBAsiACAAIAAqAgAgASoCAJM4AgAgACAAKgIEIAEqAgSTOAIECyAAIAAgACoCALsgAaK2OAIAIAAgACoCBLsgAaK2OAIECyAAIAAgACoCALsgAaK2OAIAIAAgACoCBLsgAqK2OAIECyIAIAAgASoCACAAKgIAlDgCACAAIAEqAgQgACoCBJQ4AgQLGAAgACAAKgIAjjgCACAAIAAqAgSOOAIECxgAIAAgACoCAI04AgAgACAAKgIEjTgCBAtiAgF9AX8CQAJAIAAqAgAiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAKyOAIAAkACQCAAKgIEIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACACsjgCBAtoAgF9AX8CQAJAIAAqAgAiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAEgArKTOAIAAkACQCAAKgIEIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACABIAKykzgCBAsVACAAKgIAuyABoiAAKgIEuyACoqALGgAgACoCACABKgIAlCAAKgIEIAEqAgSUkrsLGgEBfSAAKgIAIgEgAZQgACoCBCIBIAGUkrsLGwEBfSAAKgIAIgEgAZQgACoCBCIBIAGUkrufC1wCAn0BfAJAAkAgACoCACIBQwAAAABcDQAgACoCBEMAAAAAWw0BCyAARAAAAAAAAPA%2FIAEgAZQgACoCBCICIAKUkrufoyIDIAK7orY4AgQgACADIAG7orY4AgALCxoAIAAgACoCAIsgACoCBIteQQJ0akEANgIACxoAIAAgACoCAIsgACoCBItdQQJ0akEANgIAC1oBAX0gAEMAAIC%2FQwAAgD8gACoCACIBQwAAAABdG0MAAAAAIAFDAAAAAFwbOAIAIABDAACAv0MAAIA%2FIAAqAgQiAUMAAAAAXRtDAAAAACABQwAAAABcGzgCBAsuAQF%2FQRAQpIGAgAAiBCADtjgCDCAEIAK2OAIIIAQgAbY4AgQgBCAAtjgCACAECwoAIAAQvIGAgAALKgECfiAAKQIAIQEgACkCCCECQRAQpIGAgAAiACACNwMIIAAgATcDACAACyIAIAAgBLY4AgwgACADtjgCCCAAIAK2OAIEIAAgAbY4AgALFgAgACABKQIANwIAIAAgASkCCDcCCAsTACAAQgA3AgAgAEEIakIANwIAC0EBAX9BACEBAkAgACoCAEMAAAAAXA0AIAAqAgRDAAAAAFwNACAAKgIIQwAAAABcDQAgACoCDEMAAAAAWyEBCyABCzkBAX9BACEFAkAgACoCALsgAWINACAAKgIEuyACYg0AIAAqAgi7IANiDQAgACoCDLsgBGEhBQsgBQscAAJAIAAqAgC7IAFhDQBBAA8LIAAqAgS7IAJhC0EBAX9BACECAkAgACoCACABKgIAXA0AIAAqAgQgASoCBFwNACAAKgIIIAEqAghcDQAgACoCDCABKgIMWyECCyACC0wBAX9BACEGAkAgACoCALsgAaGZIAVlRQ0AIAAqAgS7IAKhmSAFZUUNACAAKgIIuyADoZkgBWVFDQAgACoCDLsgBKGZIAVlIQYLIAYLLAEBf0EAIQQCQCAAKgIAuyABoZkgA2VFDQAgACoCBLsgAqGZIANlIQQLIAQLWAEBf0EAIQMCQCAAKgIAIAEqAgCTi7sgAmVFDQAgACoCBCABKgIEk4u7IAJlRQ0AIAAqAgggASoCCJOLuyACZUUNACAAKgIMIAEqAgyTi7sgAmUhAwsgAwsuACAAIAAqAgCMOAIAIAAgACoCBIw4AgQgACAAKgIIjDgCCCAAIAAqAgyMOAIMC0IAIABDAACAPyAAKgIAlTgCACAAQwAAgD8gACoCBJU4AgQgAEMAAIA%2FIAAqAgiVOAIIIABDAACAPyAAKgIMlTgCDAsuACAAIAAqAgCLOAIAIAAgACoCBIs4AgQgACAAKgIIizgCCCAAIAAqAgyLOAIMCz4AIAAgACoCALsgAaC2OAIAIAAgACoCBLsgAqC2OAIEIAAgACoCCLsgA6C2OAIIIAAgACoCDLsgBKC2OAIMCyAAIAAgACoCALsgAaC2OAIAIAAgACoCBLsgAqC2OAIEC0IAIAAgASoCACAAKgIAkjgCACAAIAEqAgQgACoCBJI4AgQgACABKgIIIAAqAgiSOAIIIAAgASoCDCAAKgIMkjgCDAs%2BACAAIAAqAgC7IAGgtjgCACAAIAAqAgS7IAKgtjgCBCAAIAAqAgi7IAOgtjgCCCAAIAAqAgy7IASgtjgCDAsgACAAIAAqAgC7IAGgtjgCACAAIAAqAgS7IAKgtjgCBAtCACAAIAEqAgAgACoCAJI4AgAgACABKgIEIAAqAgSSOAIEIAAgASoCCCAAKgIIkjgCCCAAIAEqAgwgACoCDJI4AgwLPgAgACAAKgIAuyABobY4AgAgACAAKgIEuyACobY4AgQgACAAKgIIuyADobY4AgggACAAKgIMuyAEobY4AgwLIAAgACAAKgIAuyABobY4AgAgACAAKgIEuyACobY4AgQLQgAgACAAKgIAIAEqAgCTOAIAIAAgACoCBCABKgIEkzgCBCAAIAAqAgggASoCCJM4AgggACAAKgIMIAEqAgyTOAIMCz4AIAAgACoCALsgAaK2OAIAIAAgACoCBLsgAqK2OAIEIAAgACoCCLsgA6K2OAIIIAAgACoCDLsgBKK2OAIMCyAAIAAgACoCALsgAaK2OAIAIAAgACoCBLsgAqK2OAIECz4AIAAgACoCALsgAaK2OAIAIAAgACoCBLsgAaK2OAIEIAAgACoCCLsgAaK2OAIIIAAgACoCDLsgAaK2OAIMC0IAIAAgASoCACAAKgIAlDgCACAAIAEqAgQgACoCBJQ4AgQgACABKgIIIAAqAgiUOAIIIAAgASoCDCAAKgIMlDgCDAsuACAAIAAqAgCOOAIAIAAgACoCBI44AgQgACAAKgIIjjgCCCAAIAAqAgyOOAIMCy4AIAAgACoCAI04AgAgACAAKgIEjTgCBCAAIAAqAgiNOAIIIAAgACoCDI04AgwLvgECAX0BfwJAAkAgACoCACIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgArI4AgACQAJAIAAqAgQiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAKyOAIEAkACQCAAKgIIIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACACsjgCCAJAAkAgACoCDCIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgArI4AgwLygECAX0BfwJAAkAgACoCACIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgASACspM4AgACQAJAIAAqAgQiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAEgArKTOAIEAkACQCAAKgIIIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACABIAKykzgCCAJAAkAgACoCDCIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgASACspM4AgwLKQAgACoCDLsgBKIgACoCCLsgA6IgACoCALsgAaIgACoCBLsgAqKgoKALFQAgACoCALsgAaIgACoCBLsgAqKgCzIAIAAqAgwgASoCDJQgACoCCCABKgIIlCAAKgIAIAEqAgCUIAAqAgQgASoCBJSSkpK7CzABAX0gACoCDCIBIAGUIAAqAggiASABlCAAKgIAIgEgAZQgACoCBCIBIAGUkpKSuwsxAQF9IAAqAgwiASABlCAAKgIIIgEgAZQgACoCACIBIAGUIAAqAgQiASABlJKSkrufC6QBAgR9AXwCQAJAIAAqAgAiAUMAAAAAXA0AIAAqAgRDAAAAAFwNACAAKgIIQwAAAABcDQAgACoCDEMAAAAAWw0BCyAARAAAAAAAAPA%2FIAAqAgwiAiAClCAAKgIIIgMgA5QgASABlCAAKgIEIgQgBJSSkpK7n6MiBSACu6K2OAIMIAAgBSADu6K2OAIIIAAgBSAEu6K2OAIEIAAgBSABu6K2OAIACwuqAQIBfwR9IABBDGohASAAKgIMiyECIAAqAgiLIQMCQAJAIAAqAgCLIgQgACoCBIsiBV5FDQAgBCADXkUNACAEIAJeRQ0AIABCADcCBAwBCwJAIAUgBF5FDQAgBSADXkUNACAFIAJeRQ0AIABBADYCCCAAQQA2AgAMAQsgAEIANwIAIAEgAEEIaiIAIAMgAl4bIAAgAyAFXhsgACADIAReGyEBCyABQQA2AgALqgECAX8EfSAAQQxqIQEgACoCDIshAiAAKgIIiyEDAkACQCAAKgIAiyIEIAAqAgSLIgVdRQ0AIAQgA11FDQAgBCACXUUNACAAQgA3AgQMAQsCQCAFIARdRQ0AIAUgA11FDQAgBSACXUUNACAAQQA2AgggAEEANgIADAELIABCADcCACABIABBCGoiACADIAJdGyAAIAMgBV0bIAAgAyAEXRshAQsgAUEANgIAC7ABAQF9IABDAACAv0MAAIA%2FIAAqAgAiAUMAAAAAXRtDAAAAACABQwAAAABcGzgCACAAQwAAgL9DAACAPyAAKgIEIgFDAAAAAF0bQwAAAAAgAUMAAAAAXBs4AgQgAEMAAIC%2FQwAAgD8gACoCCCIBQwAAAABdG0MAAAAAIAFDAAAAAFwbOAIIIABDAACAv0MAAIA%2FIAAqAgwiAUMAAAAAXRtDAAAAACABQwAAAABcGzgCDAs9AQF%2FQSQQpIGAgAAiAEIANwMAIABBIGpBADYCACAAQRhqQgA3AwAgAEEQakIANwMAIABBCGpCADcDACAACwoAIAAQvIGAgAALWAEBf0EkEKSBgIAAIgFBIGogAEEgaigCADYCACABQRhqIABBGGopAgA3AgAgAUEQaiAAQRBqKQIANwIAIAFBCGogAEEIaikCADcCACABIAApAgA3AgAgAQtMACAAIAEpAgA3AgAgAEEgaiABQSBqKAIANgIAIABBGGogAUEYaikCADcCACAAQRBqIAFBEGopAgA3AgAgAEEIaiABQQhqKQIANwIACygCAX0BfyABtiECQQAhAwNAIAAgA2ogAjgCACADQQRqIgNBJEcNAAsLLAIBfQF%2FIAG2IQJBfCEDA0AgACACOAIAIABBEGohACADQQRqIgNBBUkNAAsLLAACQCABQQJLDQAgACABQQxsaiIBIAS2OAIIIAEgA7Y4AgQgASACtjgCAAsLLAACQCABQQJLDQAgACABQQJ0aiIBIAS2OAIYIAEgA7Y4AgwgASACtjgCAAsLWAEBfyAAQgA3AgAgAEEgakEANgIAIABBGGpCADcCACAAQRBqQgA3AgAgAEEIakIANwIAQXwhAQNAIABBgICA%2FAM2AgAgAEEQaiEAIAFBBGoiAUEFSQ0ACwsrAQJ%2FQQAhAgNAIAAgAmoiAyADKgIAuyABorY4AgAgAkEEaiICQSRHDQALC%2BUBAQV%2FQQAhAUEAQgA3AuSygIAAQQBCADcC3LKAgABBAEIANwLUsoCAAEEAQgA3AsyygIAAQQBBADYC7LKAgABBzLKAgAAhAiAAIQMDQCADIQRBACEFA0AgAiAFaiAEKgIAOAIAIARBDGohBCAFQQRqIgVBDEcNAAsgA0EEaiEDIAJBDGohAiABQQFqIgFBA0cNAAsgAEEgakEAKALssoCAADYCACAAQRhqQQApAuSygIAANwIAIABBEGpBACkC3LKAgAA3AgAgAEEIakEAKQLUsoCAADcCACAAQQApAsyygIAANwIAC1cBBX0gACoCCCAAKgIMIgEgACoCHCIClCAAKgIYIgMgACoCECIElJOUIAAqAgAgBCAAKgIgIgWUIAIgACoCFCIElJOUIAEgBZQgAyAElJMgACoCBJSTkgulBAIEfwN9QQAgAEEIaiICKQIANwLUsoCAAEEAIAApAgA3AsyygIAAQQAgAEEgaiIDKAIANgLssoCAAEEAIABBGGoiBCkCADcC5LKAgABBACAAQRBqIgUpAgA3AtyygIAAIAAgASoCCEEAKgLksoCAAJQgASoCAEEAKgLMsoCAAJQgASoCBEEAKgLYsoCAAJSSkjgCACAAIAEqAghBACoC6LKAgACUIAEqAgBBACoC0LKAgACUIAEqAgRBACoC3LKAgACUkpI4AgQgAiABKgIIQQAqAuyygIAAlCABKgIAQQAqAtSygIAAlCABKgIEQQAqAuCygIAAlJKSOAIAIAAgASoCFEEAKgLksoCAAJQgASoCDEEAKgLMsoCAACIGlCABKgIQQQAqAtiygIAAlJKSOAIMIAUgASoCFEEAKgLosoCAAJQgASoCDEEAKgLQsoCAACIHlCABKgIQQQAqAtyygIAAlJKSOAIAIAAgASoCFEEAKgLssoCAAJQgASoCDEEAKgLUsoCAACIIlCABKgIQQQAqAuCygIAAlJKSOAIUIAQgASoCIEEAKgLksoCAAJQgBiABKgIYlCABKgIcQQAqAtiygIAAlJKSOAIAIAAgASoCIEEAKgLosoCAAJQgByABKgIYlCABKgIcQQAqAtyygIAAlJKSOAIcIAMgASoCIEEAKgLssoCAAJQgCCABKgIYlCABKgIcQQAqAuCygIAAlJKSOAIAC4ACAQJ%2FAkACQCABRAAAAAAAAAAAYg0AIAJEAAAAAAAAAABhDQELQQAgACkCADcCzLKAgABBACAAQQhqKQIANwLUsoCAAEEAIABBGGoiAykCADcC5LKAgABBACAAQSBqIgQoAgA2AuyygIAAQQAgAEEQaikCADcC3LKAgAAgAyABQQAqAsyygIAAu6JBACoC2LKAgAC7IAKioEEAKgLksoCAALugtjgCACAAIAFBACoC0LKAgAC7okEAKgLcsoCAALsgAqKgQQAqAuiygIAAu6C2OAIcIAQgAUEAKgLUsoCAALuiQQAqAuCygIAAuyACoqBBACoC7LKAgAC7oLY4AgALC8gBAgJ%2FAn0CQCABRAAAAAAAAAAAYQ0AQQBCADcCiLOAgABBAEIANwKAs4CAAEEAQgA3AviygIAAQQBCADcC8LKAgABBAEEANgKQs4CAAEF8IQJB8LKAgAAhAwNAIANBgICA%2FAM2AgAgA0EQaiEDIAJBBGoiAkEFSQ0AC0EAIAEQ6YGAgAC2IgQ4AoCzgIAAQQAgARDqgYCAALYiBTgC%2FLKAgABBACAEOALwsoCAAEEAIAWMOAL0soCAACAAQfCygIAAEN6AgIAACwuwAQECfwJAAkAgAUQAAAAAAADwP2INACACRAAAAAAAAPA%2FYQ0BC0EAQgA3AoizgIAAQQBCADcCgLOAgABBAEIANwL4soCAAEEAQgA3AvCygIAAQQBBADYCkLOAgABBfCEDQfCygIAAIQQDQCAEQYCAgPwDNgIAIARBEGohBCADQQRqIgNBBUkNAAtBACACtjgCgLOAgABBACABtjgC8LKAgAAgAEHwsoCAABDegICAAAsLXAEBf0HAABCkgYCAACIAQgA3AwAgAEE4akIANwMAIABBMGpCADcDACAAQShqQgA3AwAgAEEgakIANwMAIABBGGpCADcDACAAQRBqQgA3AwAgAEEIakIANwMAIAALCgAgABC8gYCAAAuJAQEBf0HAABCkgYCAACIBQThqIABBOGopAgA3AgAgAUEwaiAAQTBqKQIANwIAIAFBKGogAEEoaikCADcCACABQSBqIABBIGopAgA3AgAgAUEYaiAAQRhqKQIANwIAIAFBEGogAEEQaikCADcCACABQQhqIABBCGopAgA3AgAgASAAKQIANwIAIAELfAAgACABKQIANwIAIABBOGogAUE4aikCADcCACAAQTBqIAFBMGopAgA3AgAgAEEoaiABQShqKQIANwIAIABBIGogAUEgaikCADcCACAAQRhqIAFBGGopAgA3AgAgAEEQaiABQRBqKQIANwIAIABBCGogAUEIaikCADcCAAspAgF9AX8gAbYhAkEAIQMDQCAAIANqIAI4AgAgA0EEaiIDQcAARw0ACwssAgF9AX8gAbYhAkF7IQMDQCAAIAI4AgAgAEEUaiEAIANBBWoiA0ELSQ0ACws0AAJAIAFBA0sNACAAIAFBBHRqIgEgBbY4AgwgASAEtjgCCCABIAO2OAIEIAEgArY4AgALCzQAAkAgAUEDSw0AIAAgAUECdGoiASAFtjgCMCABIAS2OAIgIAEgA7Y4AhAgASACtjgCAAsLdgEBfyAAQgA3AgAgAEE4akIANwIAIABBMGpCADcCACAAQShqQgA3AgAgAEEgakIANwIAIABBGGpCADcCACAAQRBqQgA3AgAgAEEIakIANwIAQXshAQNAIABBgICA%2FAM2AgAgAEEUaiEAIAFBBWoiAUELSQ0ACwssAQJ%2FQQAhAgNAIAAgAmoiAyADKgIAuyABorY4AgAgAkEEaiICQcAARw0ACwu5AgEFf0EAIQFBAEIANwLMs4CAAEEAQgA3AsSzgIAAQQBCADcCvLOAgABBAEIANwK0s4CAAEEAQgA3AqyzgIAAQQBCADcCpLOAgABBAEIANwKcs4CAAEEAQgA3ApSzgIAAQZSzgIAAIQIgACEDA0BBACEEIAMhBQNAIAIgBGogBSoCADgCACAFQRBqIQUgBEEEaiIEQRBHDQALIAJBEGohAiADQQRqIQMgAUEBaiIBQQRHDQALIABBOGpBACkCzLOAgAA3AgAgAEEwakEAKQLEs4CAADcCACAAQShqQQApAryzgIAANwIAIABBIGpBACkCtLOAgAA3AgAgAEEYakEAKQKss4CAADcCACAAQRBqQQApAqSzgIAANwIAIABBCGpBACkCnLOAgAA3AgAgAEEAKQKUs4CAADcCAAvhAQEOfSAAKgIgIAAqAjQiASAAKgIIIgIgACoCHCIDlCAAKgIMIgQgACoCGCIFlJMiBpQgACoCBCIHIAUgACoCPCIIlCADIAAqAjgiCZSTIgqUIAIgCJQgBCAJlJMiCyAAKgIUIgyUk5KUIAAqAgAgASAFIAAqAiwiDZQgAyAAKgIoIgWUkyIOlCAMIAUgCJQgDSAJlJMiCJQgCiAAKgIkIgOUk5KUIAEgAiANlCAEIAWUkyIClCAHIAiUIAsgA5STkiAAKgIQlJOSIAAqAjAgAyAGlCAHIA6UIAIgDJSTkpSTC5UJAgd%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%2FLOAgABBAEIANwL0s4CAAEEAQgA3AuyzgIAAQQBCADcC5LOAgABBAEIANwLcs4CAAEEAQgA3AtSzgIAAQXshAkHUs4CAACEDA0AgA0GAgID8AzYCACADQRRqIQMgAkEFaiICQQtJDQALQQAgARDpgYCAALYiBDgC%2FLOAgABBACABEOqBgIAAtiIFOALss4CAAEEAIAQ4AuizgIAAQQAgBYw4AvizgIAAIABB1LOAgAAQ7oCAgAALC%2BkBAgJ%2FAn0CQCABRAAAAAAAAAAAYQ0AQQBCADcCjLSAgABBAEIANwKEtICAAEEAQgA3AvyzgIAAQQBCADcC9LOAgABBAEIANwLss4CAAEEAQgA3AuSzgIAAQQBCADcC3LOAgABBAEIANwLUs4CAAEF7IQJB1LOAgAAhAwNAIANBgICA%2FAM2AgAgA0EUaiEDIAJBBWoiAkELSQ0AC0EAIAEQ6YGAgAC2IgQ4AvyzgIAAQQAgARDqgYCAALYiBTgC9LOAgABBACAEOALUs4CAAEEAIAWMOALcs4CAACAAQdSzgIAAEO6AgIAACwvpAQICfwJ9AkAgAUQAAAAAAAAAAGENAEEAQgA3Aoy0gIAAQQBCADcChLSAgABBAEIANwL8s4CAAEEAQgA3AvSzgIAAQQBCADcC7LOAgABBAEIANwLks4CAAEEAQgA3AtyzgIAAQQBCADcC1LOAgABBeyECQdSzgIAAIQMDQCADQYCAgPwDNgIAIANBFGohAyACQQVqIgJBC0kNAAtBACABEOmBgIAAtiIEOALos4CAAEEAIAEQ6oGAgAC2IgU4AtizgIAAQQAgBDgC1LOAgABBACAFjDgC5LOAgAAgAEHUs4CAABDugICAAAsL6wEBAn8CQAJAIAFEAAAAAAAA8D9iDQAgAkQAAAAAAADwP2INACADRAAAAAAAAPA%2FYQ0BC0EAQgA3Aoy0gIAAQQBCADcChLSAgABBAEIANwL8s4CAAEEAQgA3AvSzgIAAQQBCADcC7LOAgABBAEIANwLks4CAAEEAQgA3AtyzgIAAQQBCADcC1LOAgABBeyEEQdSzgIAAIQUDQCAFQYCAgPwDNgIAIAVBFGohBSAEQQVqIgRBC0kNAAtBACADtjgC%2FLOAgABBACACtjgC6LOAgABBACABtjgC1LOAgAAgAEHUs4CAABDugICAAAsLdwEDf0EYEKSBgIAAIgRCADcDACAEQRBqIgVCADcDACAEQQhqIgZCADcDACAEIAG2OAIEIAQgALY4AgAgBCABIAOgRAAAAAAAAOA%2ForY4AhQgBSAAIAKgRAAAAAAAAOA%2ForY4AgAgBCADtjgCDCAGIAK2OAIAIAQLTAAgACAEtjgCDCAAIAO2OAIIIAAgArY4AgQgACABtjgCACAAIAIgBKBEAAAAAAAA4D%2BitjgCFCAAIAEgA6BEAAAAAAAA4D%2BitjgCEAuQAQEBf0EYEKSBgIAAIgNCADcCACADQRBqQgA3AgAgA0EIakIANwIAAkAgAg0AIANEAAAAAAAAAAAgAUQAAAAAAADgP6IiAaG2OAIEIANEAAAAAAAAAAAgAEQAAAAAAADgP6IiAKG2OAIACyADIAFEAAAAAAAAAACgtjgCDCADIABEAAAAAAAAAACgtjgCCCADC6kBAQF8AkAgBEUNACAAKgIMIAAqAgSTuyACoiECIAAqAgggACoCAJO7IAGiIQELAkACQCADRQ0AIAAgASAAKgIAu6C2OAIIIAIgACoCBLugIQEMAQsgACAAKgIQuyIFIAFEAAAAAAAA4D%2BiIgGhtjgCACAAIAEgBaC2OAIIIAAgACoCFLsiASACRAAAAAAAAOA%2FoiICobY4AgQgAiABoCEBCyAAIAG2OAIMCwoAIAAQvIGAgAALlQECBH0CfyAAKgIIIQEgACoCDCECIAAqAgAhAyAAKgIEIQRBGBCkgYCAACIAQgA3AwAgAEEIaiIFQgA3AwAgAEEQaiIGQgA3AwAgACAEOAIEIAAgAzgCACAAIAI4AgwgBSABOAIAIAAgBLsgArugRAAAAAAAAOA%2ForY4AhQgBiADuyABu6BEAAAAAAAA4D%2BitjgCACAACx0AIABCADcCACAAQRBqQgA3AgAgAEEIakIANwIACzIAIABCgICA%2FIeAgMD%2FADcCECAAQoCAgPyHgIDA%2FwA3AgAgAEKAgID8h4CAwP8ANwIIC9gBAQF8AkACQCAAKgIAuyIDRP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYQ0AIAMgAWRFDQELIAAgAbY4AgALAkACQCAAKgIEuyIDRP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYQ0AIAMgAmRFDQELIAAgArY4AgQLAkACQCAAKgIIuyIDRP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYQ0AIAMgAWNFDQELIAAgAbY4AggLAkACQCAAKgIMuyIBRP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYQ0AIAEgAmNFDQELIAAgArY4AgwLIAAgACoCACAAKgIIkkMAAAA%2FlDgCECAAIAAqAgQgACoCDJJDAAAAP5Q4AhQL3AEBA30gASoCBCECAkACQCAAKgIAIgMgASoCACIEXg0AIAO7RP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYg0BCyAAIAQ4AgALAkACQCAAKgIEIgMgAl4NACADu0T%2F%2F%2F%2F%2F%2F%2F%2Fvf2INAQsgACACOAIECwJAAkAgACoCCCIDIARdDQAgA7tE%2F%2F%2F%2F%2F%2F%2F%2F739iDQELIAAgBDgCCAsCQAJAIAAqAgwiBCACXQ0AIAS7RP%2F%2F%2F%2F%2F%2F%2F%2B9%2FYg0BCyAAIAI4AgwLIAAgACoCACAAKgIIkkMAAAA%2FlDgCECAAIAAqAgQgACoCDJJDAAAAP5Q4AhQLXAAgACAAKgIAuyABoLY4AgAgACAAKgIEuyACoLY4AgQgACAAKgIIuyABoLY4AgggACAAKgIMuyACoLY4AgwgACAAKgIQuyABoLY4AhAgACAAKgIUuyACoLY4AhQLXAECfSAAIAEqAgAiAiAAKgIAkjgCACAAIAEqAgQiAyAAKgIEkjgCBCAAIAIgACoCCJI4AgggACADIAAqAgySOAIMIAAgAiAAKgIQkjgCECAAIAMgACoCFJI4AhQLpAECAX0CfAJAIANFDQAgAiAAKgIMIAAqAgQiBJO7oiAEu6AhAiABIAAqAgggACoCACIEk7uiIAS7oCEBCyAAIAEgACoCELsiBaEiASAAKgIAu6C2OAIAIAAgAiAAKgIUuyIGoSICIAAqAgS7oLY4AgQgACABIAAqAgi7oLY4AgggACACIAAqAgy7oLY4AgwgACACIAagtjgCFCAAIAEgBaC2OAIQC2IBBH0gACABKgIMIgI4AgwgACABKgIIIgM4AgggACABKgIEIgQ4AgQgACABKgIAIgU4AgAgACAEuyACu6BEAAAAAAAA4D%2BitjgCFCAAIAW7IAO7oEQAAAAAAADgP6K2OAIQCzkBAX9BACEFAkAgACoCALsgAWINACAAKgIIuyADYg0AIAAqAgS7IAJiDQAgACoCDLsgBGEhBQsgBQtBAQF%2FQQAhAgJAIAAqAgAgASoCAFwNACAAKgIIIAEqAghcDQAgACoCBCABKgIEXA0AIAAqAgwgASoCDFshAgsgAgtZAQF%2FQQAhBQJAIAAqAgC7IAEQxYGAgAAgAWINACAAKgIEuyACEMWBgIAAIAJiDQAgACoCCLsgAxDEgYCAACADYg0AIAAqAgy7IAQQxIGAgAAgBGEhBQsgBQt9AwF%2FAXwCfUEAIQICQCAAKgIAuyABKgIAuyIDEMWBgIAAIANiDQAgASoCDCEEIAEqAgghBSAAKgIEuyABKgIEuyIDEMWBgIAAIANiDQAgACoCCLsgBbsiAxDEgYCAACADYg0AIAAqAgy7IAS7IgMQxIGAgAAgA2EhAgsgAgtIAQF%2FQQAhBAJAIAAqAgC7IAOhIAFlRQ0AIAAqAgi7IAOgIAFmRQ0AIAAqAgS7IAOhIAJlRQ0AIAAqAgy7IAOgIAJmIQQLIAQLVgIBfwF8QQAhAwJAIAAqAgC7IAKhIAEqAgC7IgRlRQ0AIAAqAgi7IAKgIARmRQ0AIAAqAgS7IAKhIAEqAgS7IgRlRQ0AIAAqAgy7IAKgIARmIQMLIAMLUgAgACAAKgIAuyABEMSBgIAAtjgCACAAIAAqAgS7IAIQxIGAgAC2OAIEIAAgACoCCLsgAxDFgYCAALY4AgggACAAKgIMuyAEEMWBgIAAtjgCDAtWACAAIAAqAgAgASoCABDCgYCAADgCACAAIAAqAgQgASoCBBDCgYCAADgCBCAAIAAqAgggASoCCBDDgYCAADgCCCAAIAAqAgwgASoCDBDDgYCAADgCDAt7AQF9IAAqAgghBSAAKgIAuyABEMWBgIAAIQEgBbsgAxDEgYCAACEDIAAqAgwhBSAAKgIEuyACEMWBgIAAIQIgBbsgBBDEgYCAACACoUQAAAAAAAAAABDFgYCAACADIAGhRAAAAAAAAAAAEMWBgIAAokQAAAAAAAAAAGQLfwEDfSAAKgIAIAEqAgAQw4GAgAAhAiAAKgIIIAEqAggQwoGAgAAhAyAAKgIEIAEqAgQQw4GAgAAhBCAAKgIMIAEqAgwQwoGAgAC7IAS7oUQAAAAAAAAAABDFgYCAACADuyACu6FEAAAAAAAAAAAQxYGAgACiRAAAAAAAAAAAZAuRAQEEfSAAIAAqAgC7IAEQxYGAgAC2IgU4AgAgACAAKgIEuyACEMWBgIAAtiIGOAIEIAAgACoCCLsgAxDEgYCAALYiBzgCCCAAIAAqAgy7IAQQxIGAgAC2Igg4AgwgCCAGk7tEAAAAAAAAAAAQxYGAgAAgByAFk7tEAAAAAAAAAAAQxYGAgACiRAAAAAAAAAAAZAuVAQEEfSAAIAAqAgAgASoCABDDgYCAACICOAIAIAAgACoCBCABKgIEEMOBgIAAIgM4AgQgACAAKgIIIAEqAggQwoGAgAAiBDgCCCAAIAAqAgwgASoCDBDCgYCAACIFOAIMIAUgA5O7RAAAAAAAAAAAEMWBgIAAIAQgApO7RAAAAAAAAAAAEMWBgIAAokQAAAAAAAAAAGQLjgEBAXwCQAJAIANFDQAgACAAKgIIuyABoLY4AgggAEEMaiEDIAAqAgy7IQEMAQsgACAAKgIAuyABRAAAAAAAAOA%2FoiIEobY4AgAgACAAKgIEuyACRAAAAAAAAOA%2FoiIBobY4AgQgACAEIAAqAgi7oLY4AgggAEEMaiEDIAAqAgy7IQILIAMgASACoLY4AgALDgAgACoCCCAAKgIAk7sLDgAgACoCDCAAKgIEk7sLKAEBf0EAIQECQCAAKgIAIAAqAghfRQ0AIAAqAgQgACoCDF8hAQsgAQtlAQN9AkACQCABRQ0AQwAAAAAhAiAAKgIAIgMgACoCCCIEX0UNASAAKgIEIAAqAgxfRQ0BIAQgA5MgACoCDCAAKgIEk5S7DwsgACoCDCAAKgIEkyAAKgIIIAAqAgCTlCECCyACuwtEACAAIAAqAgCOOAIAIAAgACoCBI44AgQgACAAKgIIjjgCCCAAIAAqAgyOOAIMIAAgACoCEI44AhAgACAAKgIUjjgCFAtEACAAIAAqAgCNOAIAIAAgACoCBI04AgQgACAAKgIIjTgCCCAAIAAqAgyNOAIMIAAgACoCEI04AhAgACAAKgIUjTgCFAuaAgIBfQF%2FAkACQCAAKgIAIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACACsjgCAAJAAkAgACoCBCIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgArI4AgQCQAJAIAAqAggiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAKyOAIIAkACQCAAKgIMIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACACsjgCDAJAAkAgACoCECIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgArI4AhACQAJAIAAqAhQiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAKyOAIUC6wCAgF9AX8CQAJAIAAqAgAiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAEgArKTOAIAAkACQCAAKgIEIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACABIAKykzgCBAJAAkAgACoCCCIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgASACspM4AggCQAJAIAAqAgwiAYtDAAAAT11FDQAgAaghAgwBC0GAgICAeCECCyAAIAEgArKTOAIMAkACQCAAKgIQIgGLQwAAAE9dRQ0AIAGoIQIMAQtBgICAgHghAgsgACABIAKykzgCEAJAAkAgACoCFCIBi0MAAABPXUUNACABqCECDAELQYCAgIB4IQILIAAgASACspM4AhQLmQEBEX8jgICAgAAhAUEQIQIgASACayEDIAMkgICAgAAgAyAANgIMIAMoAgwhBEEAIQUgBCEGIAUhByAGIAdGIQhBASEJIAggCXEhCgJAIApFDQBBgYCAgAAhCyADIAs2AgwLIAMoAgwhDEHUsYCAACENQQQhDiANIAwgDhCYgYCAACEPQRAhECADIBBqIREgESSAgICAACAPDwtgAQh%2FI4CAgIAAIQNBECEEIAMgBGshBSAFIAA2AgwgBSABNgIIIAUgAjYCBCAFKAIMIQYgBigCACEHIAUgBzYCACAFKAIIIQggBSgCDCEJIAkgCDYCACAFKAIAIQogCg8LmQEBEX8jgICAgAAhAUEQIQIgASACayEDIAMkgICAgAAgAyAANgIMIAMoAgwhBEEAIQUgBCEGIAUhByAGIAdGIQhBASEJIAggCXEhCgJAIApFDQBBgoCAgAAhCyADIAs2AgwLIAMoAgwhDEHQsYCAACENQQQhDiANIAwgDhCYgYCAACEPQRAhECADIBBqIREgESSAgICAACAPDwtdAQl%2FI4CAgIAAIQFBECECIAEgAmshAyADJICAgIAAIAMgADYCDCADKAIMIQRBlLSAgAAhBUEEIQYgBSAEIAYQmIGAgAAhB0EQIQggAyAIaiEJIAkkgICAgAAgBw8LywEBFH8jgICAgAAhAkEQIQMgAiADayEEIAQkgICAgAAgBCAANgIMQQAhBSAFKAKYioCAACEGQYeJgIAAIQdBACEIIAYgByAIENCBgIAAGkEIIQkgBCAJaiEKIAohCyALIAE2AgBBACEMIAwoApiKgIAAIQ0gBCgCDCEOIAQoAgghDyANIA4gDxDYgYCAABpBCCEQIAQgEGohESARGkEAIRIgEigCmIqAgAAhE0GUioCAACEUQQAhFSATIBQgFRDQgYCAABoQxoGAgAAACx8BA39B1LGAgAAhAEECIQEgACABEJ2BgIAAIQIgAg8LNgEFfyOAgICAACECQRAhAyACIANrIQQgBCAANgIMIAQgATYCCCAEKAIMIQUgBSgCACEGIAYPC00BBn8jgICAgAAhAUEQIQIgASACayEDIAMkgICAgAAgAyAANgIMIAMoAgwhBCAEEYCAgIAAAEHNiICAACEFQQAhBiAFIAYQm4GAgAAACxUBAX8QnIGAgAAhACAAEJ6BgIAAAAsfAQN%2FQdCxgIAAIQBBAiEBIAAgARCdgYCAACECIAIPC00BBn8jgICAgAAhAUEQIQIgASACayEDIAMkgICAgAAgAyAANgIMIAMoAgwhBCAEEYCAgIAAAEGliICAACEFQQAhBiAFIAYQm4GAgAAACxUBAX8QoIGAgAAhACAAEKGBgIAAAAsfAQN%2FQZS0gIAAIQBBAiEBIAAgARCdgYCAACECIAIPC%2FIBARl%2FI4CAgIAAIQFBECECIAEgAmshAyADJICAgIAAIAMgADYCDCADKAIMIQQCQCAEDQBBASEFIAMgBTYCDAsCQANAIAMoAgwhBiAGELqBgIAAIQcgAyAHNgIIQQAhCCAHIQkgCCEKIAkgCkYhC0EBIQwgCyAMcSENIA1FDQEQo4GAgAAhDiADIA42AgQgAygCBCEPQQAhECAPIREgECESIBEgEkchE0EBIRQgEyAUcSEVAkACQCAVRQ0AIAMoAgQhFiAWEYCAgIAAAAwBCwwCCwwACwsgAygCCCEXQRAhGCADIBhqIRkgGSSAgICAACAXDwttAQl%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AghBACEFIAQgBTYCBCAEKAIMIQYgBhCkgYCAACEHIAQgBzYCBCAEKAIEIQhBECEJIAQgCWohCiAKJICAgIAAIAgPC00BB38jgICAgAAhAUEQIQIgASACayEDIAMkgICAgAAgAyAANgIMIAMoAgwhBCAEEKSBgIAAIQVBECEGIAMgBmohByAHJICAgIAAIAUPC20BCX8jgICAgAAhAkEQIQMgAiADayEEIAQkgICAgAAgBCAANgIMIAQgATYCCEEAIQUgBCAFNgIEIAQoAgwhBiAGEKaBgIAAIQcgBCAHNgIEIAQoAgQhCEEQIQkgBCAJaiEKIAokgICAgAAgCA8LSQEGfyOAgICAACEBQRAhAiABIAJrIQMgAySAgICAACADIAA2AgwgAygCDCEEIAQQvIGAgABBECEFIAMgBWohBiAGJICAgIAADwtQAQZ%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AgggBCgCDCEFIAUQqIGAgABBECEGIAQgBmohByAHJICAgIAADwtQAQZ%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AgggBCgCDCEFIAUQqIGAgABBECEGIAQgBmohByAHJICAgIAADwtJAQZ%2FI4CAgIAAIQFBECECIAEgAmshAyADJICAgIAAIAMgADYCDCADKAIMIQQgBBCogYCAAEEQIQUgAyAFaiEGIAYkgICAgAAPC1ABBn8jgICAgAAhAkEQIQMgAiADayEEIAQkgICAgAAgBCAANgIMIAQgATYCCCAEKAIMIQUgBRCrgYCAAEEQIQYgBCAGaiEHIAckgICAgAAPC1ABBn8jgICAgAAhAkEQIQMgAiADayEEIAQkgICAgAAgBCAANgIMIAQgATYCCCAEKAIMIQUgBRCrgYCAAEEQIQYgBCAGaiEHIAckgICAgAAPC7oCASJ%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AgggBCgCDCEFAkAgBQ0AQQEhBiAEIAY2AgwLIAQoAgghB0EEIQggByEJIAghCiAJIApJIQtBASEMIAsgDHEhDQJAIA1FDQBBBCEOIAQgDjYCCAsCQANAIAQoAgghDyAEKAIMIRAgDyAQEK%2BBgIAAIREgBCARNgIEQQAhEiARIRMgEiEUIBMgFEYhFUEBIRYgFSAWcSEXIBdFDQEQo4GAgAAhGCAEIBg2AgAgBCgCACEZQQAhGiAZIRsgGiEcIBsgHEchHUEBIR4gHSAecSEfAkACQCAfRQ0AIAQoAgAhICAgEYCAgIAAAAwBCwwCCwwACwsgBCgCBCEhQRAhIiAEICJqISMgIySAgICAACAhDwt%2FAQx%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AghBACEFIAQgBTYCBCAEKAIMIQYgBCgCCCEHQQQhCCAEIAhqIQkgCSEKIAogBiAHEL%2BBgIAAGiAEKAIEIQtBECEMIAQgDGohDSANJICAgIAAIAsPC30BCn8jgICAgAAhA0EQIQQgAyAEayEFIAUkgICAgAAgBSAANgIMIAUgATYCCCAFIAI2AgRBACEGIAUgBjYCACAFKAIMIQcgBSgCCCEIIAcgCBCugYCAACEJIAUgCTYCACAFKAIAIQpBECELIAUgC2ohDCAMJICAgIAAIAoPC10BCH8jgICAgAAhAkEQIQMgAiADayEEIAQkgICAgAAgBCAANgIMIAQgATYCCCAEKAIMIQUgBCgCCCEGIAUgBhCugYCAACEHQRAhCCAEIAhqIQkgCSSAgICAACAHDwt9AQp%2FI4CAgIAAIQNBECEEIAMgBGshBSAFJICAgIAAIAUgADYCDCAFIAE2AgggBSACNgIEQQAhBiAFIAY2AgAgBSgCDCEHIAUoAgghCCAHIAgQsYGAgAAhCSAFIAk2AgAgBSgCACEKQRAhCyAFIAtqIQwgDCSAgICAACAKDwtQAQZ%2FI4CAgIAAIQJBECEDIAIgA2shBCAEJICAgIAAIAQgADYCDCAEIAE2AgggBCgCDCEFIAUQtIGAgABBECEGIAQgBmohByAHJICAgIAADwtJAQZ%2FI4CAgIAAIQFBECECIAEgAmshAyADJICAgIAAIAMgADYCDCADKAIMIQQgBBC8gYCAAEEQIQUgAyAFaiEGIAYkgICAgAAPC2ABB38jgICAgAAhA0EQIQQgAyAEayEFIAUkgICAgAAgBSAANgIMIAUgATYCCCAFIAI2AgQgBSgCDCEGIAUoAgghByAGIAcQs4GAgABBECEIIAUgCGohCSAJJICAgIAADwtgAQd%2FI4CAgIAAIQNBECEEIAMgBGshBSAFJICAgIAAIAUgADYCDCAFIAE2AgggBSACNgIEIAUoAgwhBiAFKAIEIQcgBiAHELOBgIAAQRAhCCAFIAhqIQkgCSSAgICAAA8LWQEHfyOAgICAACECQRAhAyACIANrIQQgBCSAgICAACAEIAA2AgwgBCABNgIIIAQoAgwhBSAEKAIIIQYgBSAGELOBgIAAQRAhByAEIAdqIQggCCSAgICAAA8LYAEHfyOAgICAACEDQRAhBCADIARrIQUgBSSAgICAACAFIAA2AgwgBSABNgIIIAUgAjYCBCAFKAIMIQYgBSgCCCEHIAYgBxC3gYCAAEEQIQggBSAIaiEJIAkkgICAgAAPC2ABB38jgICAgAAhA0EQIQQgAyAEayEFIAUkgICAgAAgBSAANgIMIAUgATYCCCAFIAI2AgQgBSgCDCEGIAUoAgQhByAGIAcQt4GAgABBECEIIAUgCGohCSAJJICAgIAADwsKACAAELuBgIAAC4Y3AQt%2FI4CAgIAAQRBrIgEkgICAgAACQEEAKAKwtICAAA0AQQAQwYGAgABBwLiEgABrIgJB2QBJDQBBACEDAkBBACgC8LeAgAAiBA0AQQBCfzcC%2FLeAgABBAEKAgISAgIDAADcC9LeAgABBACABQQhqQXBxQdiq1aoFcyIENgLwt4CAAEEAQQA2AoS4gIAAQQBBADYC1LeAgAALQQAgAjYC3LeAgABBAEHAuISAADYC2LeAgABBAEHAuISAADYCqLSAgABBACAENgK8tICAAEEAQX82Ari0gIAAA0AgA0HUtICAAGogA0HItICAAGoiBDYCACAEIANBwLSAgABqIgU2AgAgA0HMtICAAGogBTYCACADQdy0gIAAaiADQdC0gIAAaiIFNgIAIAUgBDYCACADQeS0gIAAaiADQdi0gIAAaiIENgIAIAQgBTYCACADQeC0gIAAaiAENgIAIANBIGoiA0GAAkcNAAtBwLiEgABBeEHAuISAAGtBD3FBAEHAuISAAEEIakEPcRsiA2oiBEEEaiACQUhqIgUgA2siA0EBcjYCAEEAQQAoAoC4gIAANgK0tICAAEEAIAM2AqS0gIAAQQAgBDYCsLSAgABBwLiEgAAgBWpBODYCBAsCQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAEHsAUsNAAJAQQAoApi0gIAAIgZBECAAQRNqQXBxIABBC0kbIgJBA3YiBHYiA0EDcUUNACADQQFxIARyQQFzIgVBA3QiAEHItICAAGooAgAiBEEIaiEDAkACQCAEKAIIIgIgAEHAtICAAGoiAEcNAEEAIAZBfiAFd3E2Api0gIAADAELIAAgAjYCCCACIAA2AgwLIAQgBUEDdCIFQQNyNgIEIAQgBWoiBCAEKAIEQQFyNgIEDAwLIAJBACgCoLSAgAAiB00NAQJAIANFDQACQAJAIAMgBHRBAiAEdCIDQQAgA2tycSIDQQAgA2txQX9qIgMgA0EMdkEQcSIDdiIEQQV2QQhxIgUgA3IgBCAFdiIDQQJ2QQRxIgRyIAMgBHYiA0EBdkECcSIEciADIAR2IgNBAXZBAXEiBHIgAyAEdmoiBUEDdCIAQci0gIAAaigCACIEKAIIIgMgAEHAtICAAGoiAEcNAEEAIAZBfiAFd3EiBjYCmLSAgAAMAQsgACADNgIIIAMgADYCDAsgBEEIaiEDIAQgAkEDcjYCBCAEIAVBA3QiBWogBSACayIFNgIAIAQgAmoiACAFQQFyNgIEAkAgB0UNACAHQQN2IghBA3RBwLSAgABqIQJBACgCrLSAgAAhBAJAAkAgBkEBIAh0IghxDQBBACAGIAhyNgKYtICAACACIQgMAQsgAigCCCEICyAIIAQ2AgwgAiAENgIIIAQgAjYCDCAEIAg2AggLQQAgADYCrLSAgABBACAFNgKgtICAAAwMC0EAKAKctICAACIJRQ0BIAlBACAJa3FBf2oiAyADQQx2QRBxIgN2IgRBBXZBCHEiBSADciAEIAV2IgNBAnZBBHEiBHIgAyAEdiIDQQF2QQJxIgRyIAMgBHYiA0EBdkEBcSIEciADIAR2akECdEHItoCAAGooAgAiACgCBEF4cSACayEEIAAhBQJAA0ACQCAFKAIQIgMNACAFQRRqKAIAIgNFDQILIAMoAgRBeHEgAmsiBSAEIAUgBEkiBRshBCADIAAgBRshACADIQUMAAsLIAAoAhghCgJAIAAoAgwiCCAARg0AQQAoAqi0gIAAIAAoAggiA0saIAggAzYCCCADIAg2AgwMCwsCQCAAQRRqIgUoAgAiAw0AIAAoAhAiA0UNAyAAQRBqIQULA0AgBSELIAMiCEEUaiIFKAIAIgMNACAIQRBqIQUgCCgCECIDDQALIAtBADYCAAwKC0F%2FIQIgAEG%2Ff0sNACAAQRNqIgNBcHEhAkEAKAKctICAACIHRQ0AQQAhCwJAIAJBgAJJDQBBHyELIAJB%2F%2F%2F%2FB0sNACADQQh2IgMgA0GA%2Fj9qQRB2QQhxIgN0IgQgBEGA4B9qQRB2QQRxIgR0IgUgBUGAgA9qQRB2QQJxIgV0QQ92IAMgBHIgBXJrIgNBAXQgAiADQRVqdkEBcXJBHGohCwtBACACayEEAkACQAJAAkAgC0ECdEHItoCAAGooAgAiBQ0AQQAhA0EAIQgMAQtBACEDIAJBAEEZIAtBAXZrIAtBH0YbdCEAQQAhCANAAkAgBSgCBEF4cSACayIGIARPDQAgBiEEIAUhCCAGDQBBACEEIAUhCCAFIQMMAwsgAyAFQRRqKAIAIgYgBiAFIABBHXZBBHFqQRBqKAIAIgVGGyADIAYbIQMgAEEBdCEAIAUNAAsLAkAgAyAIcg0AQQAhCEECIAt0IgNBACADa3IgB3EiA0UNAyADQQAgA2txQX9qIgMgA0EMdkEQcSIDdiIFQQV2QQhxIgAgA3IgBSAAdiIDQQJ2QQRxIgVyIAMgBXYiA0EBdkECcSIFciADIAV2IgNBAXZBAXEiBXIgAyAFdmpBAnRByLaAgABqKAIAIQMLIANFDQELA0AgAygCBEF4cSACayIGIARJIQACQCADKAIQIgUNACADQRRqKAIAIQULIAYgBCAAGyEEIAMgCCAAGyEIIAUhAyAFDQALCyAIRQ0AIARBACgCoLSAgAAgAmtPDQAgCCgCGCELAkAgCCgCDCIAIAhGDQBBACgCqLSAgAAgCCgCCCIDSxogACADNgIIIAMgADYCDAwJCwJAIAhBFGoiBSgCACIDDQAgCCgCECIDRQ0DIAhBEGohBQsDQCAFIQYgAyIAQRRqIgUoAgAiAw0AIABBEGohBSAAKAIQIgMNAAsgBkEANgIADAgLAkBBACgCoLSAgAAiAyACSQ0AQQAoAqy0gIAAIQQCQAJAIAMgAmsiBUEQSQ0AIAQgAmoiACAFQQFyNgIEQQAgBTYCoLSAgABBACAANgKstICAACAEIANqIAU2AgAgBCACQQNyNgIEDAELIAQgA0EDcjYCBCAEIANqIgMgAygCBEEBcjYCBEEAQQA2Aqy0gIAAQQBBADYCoLSAgAALIARBCGohAwwKCwJAQQAoAqS0gIAAIgAgAk0NAEEAKAKwtICAACIDIAJqIgQgACACayIFQQFyNgIEQQAgBTYCpLSAgABBACAENgKwtICAACADIAJBA3I2AgQgA0EIaiEDDAoLAkACQEEAKALwt4CAAEUNAEEAKAL4t4CAACEEDAELQQBCfzcC%2FLeAgABBAEKAgISAgIDAADcC9LeAgABBACABQQxqQXBxQdiq1aoFczYC8LeAgABBAEEANgKEuICAAEEAQQA2AtS3gIAAQYCABCEEC0EAIQMCQCAEIAJBxwBqIgdqIgZBACAEayILcSIIIAJLDQBBAEEwNgKIuICAAAwKCwJAQQAoAtC3gIAAIgNFDQACQEEAKALIt4CAACIEIAhqIgUgBE0NACAFIANNDQELQQAhA0EAQTA2Aoi4gIAADAoLQQAtANS3gIAAQQRxDQQCQAJAAkBBACgCsLSAgAAiBEUNAEHYt4CAACEDA0ACQCADKAIAIgUgBEsNACAFIAMoAgRqIARLDQMLIAMoAggiAw0ACwtBABDBgYCAACIAQX9GDQUgCCEGAkBBACgC9LeAgAAiA0F%2FaiIEIABxRQ0AIAggAGsgBCAAakEAIANrcWohBgsgBiACTQ0FIAZB%2Fv%2F%2F%2FwdLDQUCQEEAKALQt4CAACIDRQ0AQQAoAsi3gIAAIgQgBmoiBSAETQ0GIAUgA0sNBgsgBhDBgYCAACIDIABHDQEMBwsgBiAAayALcSIGQf7%2F%2F%2F8HSw0EIAYQwYGAgAAiACADKAIAIAMoAgRqRg0DIAAhAwsCQCADQX9GDQAgAkHIAGogBk0NAAJAIAcgBmtBACgC%2BLeAgAAiBGpBACAEa3EiBEH%2B%2F%2F%2F%2FB00NACADIQAMBwsCQCAEEMGBgIAAQX9GDQAgBCAGaiEGIAMhAAwHC0EAIAZrEMGBgIAAGgwECyADIQAgA0F%2FRw0FDAMLQQAhCAwHC0EAIQAMBQsgAEF%2FRw0CC0EAQQAoAtS3gIAAQQRyNgLUt4CAAAsgCEH%2B%2F%2F%2F%2FB0sNASAIEMGBgIAAIQBBABDBgYCAACEDIABBf0YNASADQX9GDQEgACADTw0BIAMgAGsiBiACQThqTQ0BC0EAQQAoAsi3gIAAIAZqIgM2Asi3gIAAAkAgA0EAKALMt4CAAE0NAEEAIAM2Asy3gIAACwJAAkACQAJAQQAoArC0gIAAIgRFDQBB2LeAgAAhAwNAIAAgAygCACIFIAMoAgQiCGpGDQIgAygCCCIDDQAMAwsLAkACQEEAKAKotICAACIDRQ0AIAAgA08NAQtBACAANgKotICAAAtBACEDQQAgBjYC3LeAgABBACAANgLYt4CAAEEAQX82Ari0gIAAQQBBACgC8LeAgAA2Ary0gIAAQQBBADYC5LeAgAADQCADQdS0gIAAaiADQci0gIAAaiIENgIAIAQgA0HAtICAAGoiBTYCACADQcy0gIAAaiAFNgIAIANB3LSAgABqIANB0LSAgABqIgU2AgAgBSAENgIAIANB5LSAgABqIANB2LSAgABqIgQ2AgAgBCAFNgIAIANB4LSAgABqIAQ2AgAgA0EgaiIDQYACRw0ACyAAQXggAGtBD3FBACAAQQhqQQ9xGyIDaiIEIAZBSGoiBSADayIDQQFyNgIEQQBBACgCgLiAgAA2ArS0gIAAQQAgAzYCpLSAgABBACAENgKwtICAACAAIAVqQTg2AgQMAgsgAy0ADEEIcQ0AIAUgBEsNACAAIARNDQAgBEF4IARrQQ9xQQAgBEEIakEPcRsiBWoiAEEAKAKktICAACAGaiILIAVrIgVBAXI2AgQgAyAIIAZqNgIEQQBBACgCgLiAgAA2ArS0gIAAQQAgBTYCpLSAgABBACAANgKwtICAACAEIAtqQTg2AgQMAQsCQCAAQQAoAqi0gIAAIghPDQBBACAANgKotICAACAAIQgLIAAgBmohBUHYt4CAACEDAkACQAJAAkACQAJAAkADQCADKAIAIAVGDQEgAygCCCIDDQAMAgsLIAMtAAxBCHFFDQELQdi3gIAAIQMDQAJAIAMoAgAiBSAESw0AIAUgAygCBGoiBSAESw0DCyADKAIIIQMMAAsLIAMgADYCACADIAMoAgQgBmo2AgQgAEF4IABrQQ9xQQAgAEEIakEPcRtqIgsgAkEDcjYCBCAFQXggBWtBD3FBACAFQQhqQQ9xG2oiBiALIAJqIgJrIQUCQCAEIAZHDQBBACACNgKwtICAAEEAQQAoAqS0gIAAIAVqIgM2AqS0gIAAIAIgA0EBcjYCBAwDCwJAQQAoAqy0gIAAIAZHDQBBACACNgKstICAAEEAQQAoAqC0gIAAIAVqIgM2AqC0gIAAIAIgA0EBcjYCBCACIANqIAM2AgAMAwsCQCAGKAIEIgNBA3FBAUcNACADQXhxIQcCQAJAIANB%2FwFLDQAgBigCCCIEIANBA3YiCEEDdEHAtICAAGoiAEYaAkAgBigCDCIDIARHDQBBAEEAKAKYtICAAEF%2BIAh3cTYCmLSAgAAMAgsgAyAARhogAyAENgIIIAQgAzYCDAwBCyAGKAIYIQkCQAJAIAYoAgwiACAGRg0AIAggBigCCCIDSxogACADNgIIIAMgADYCDAwBCwJAIAZBFGoiAygCACIEDQAgBkEQaiIDKAIAIgQNAEEAIQAMAQsDQCADIQggBCIAQRRqIgMoAgAiBA0AIABBEGohAyAAKAIQIgQNAAsgCEEANgIACyAJRQ0AAkACQCAGKAIcIgRBAnRByLaAgABqIgMoAgAgBkcNACADIAA2AgAgAA0BQQBBACgCnLSAgABBfiAEd3E2Apy0gIAADAILIAlBEEEUIAkoAhAgBkYbaiAANgIAIABFDQELIAAgCTYCGAJAIAYoAhAiA0UNACAAIAM2AhAgAyAANgIYCyAGKAIUIgNFDQAgAEEUaiADNgIAIAMgADYCGAsgByAFaiEFIAYgB2ohBgsgBiAGKAIEQX5xNgIEIAIgBWogBTYCACACIAVBAXI2AgQCQCAFQf8BSw0AIAVBA3YiBEEDdEHAtICAAGohAwJAAkBBACgCmLSAgAAiBUEBIAR0IgRxDQBBACAFIARyNgKYtICAACADIQQMAQsgAygCCCEECyAEIAI2AgwgAyACNgIIIAIgAzYCDCACIAQ2AggMAwtBHyEDAkAgBUH%2F%2F%2F8HSw0AIAVBCHYiAyADQYD%2BP2pBEHZBCHEiA3QiBCAEQYDgH2pBEHZBBHEiBHQiACAAQYCAD2pBEHZBAnEiAHRBD3YgAyAEciAAcmsiA0EBdCAFIANBFWp2QQFxckEcaiEDCyACIAM2AhwgAkIANwIQIANBAnRByLaAgABqIQQCQEEAKAKctICAACIAQQEgA3QiCHENACAEIAI2AgBBACAAIAhyNgKctICAACACIAQ2AhggAiACNgIIIAIgAjYCDAwDCyAFQQBBGSADQQF2ayADQR9GG3QhAyAEKAIAIQADQCAAIgQoAgRBeHEgBUYNAiADQR12IQAgA0EBdCEDIAQgAEEEcWpBEGoiCCgCACIADQALIAggAjYCACACIAQ2AhggAiACNgIMIAIgAjYCCAwCCyAAQXggAGtBD3FBACAAQQhqQQ9xGyIDaiILIAZBSGoiCCADayIDQQFyNgIEIAAgCGpBODYCBCAEIAVBNyAFa0EPcUEAIAVBSWpBD3EbakFBaiIIIAggBEEQakkbIghBIzYCBEEAQQAoAoC4gIAANgK0tICAAEEAIAM2AqS0gIAAQQAgCzYCsLSAgAAgCEEQakEAKQLgt4CAADcCACAIQQApAti3gIAANwIIQQAgCEEIajYC4LeAgABBACAGNgLct4CAAEEAIAA2Ati3gIAAQQBBADYC5LeAgAAgCEEkaiEDA0AgA0EHNgIAIAUgA0EEaiIDSw0ACyAIIARGDQMgCCAIKAIEQX5xNgIEIAggCCAEayIGNgIAIAQgBkEBcjYCBAJAIAZB%2FwFLDQAgBkEDdiIFQQN0QcC0gIAAaiEDAkACQEEAKAKYtICAACIAQQEgBXQiBXENAEEAIAAgBXI2Api0gIAAIAMhBQwBCyADKAIIIQULIAUgBDYCDCADIAQ2AgggBCADNgIMIAQgBTYCCAwEC0EfIQMCQCAGQf%2F%2F%2FwdLDQAgBkEIdiIDIANBgP4%2FakEQdkEIcSIDdCIFIAVBgOAfakEQdkEEcSIFdCIAIABBgIAPakEQdkECcSIAdEEPdiADIAVyIAByayIDQQF0IAYgA0EVanZBAXFyQRxqIQMLIARCADcCECAEQRxqIAM2AgAgA0ECdEHItoCAAGohBQJAQQAoApy0gIAAIgBBASADdCIIcQ0AIAUgBDYCAEEAIAAgCHI2Apy0gIAAIARBGGogBTYCACAEIAQ2AgggBCAENgIMDAQLIAZBAEEZIANBAXZrIANBH0YbdCEDIAUoAgAhAANAIAAiBSgCBEF4cSAGRg0DIANBHXYhACADQQF0IQMgBSAAQQRxakEQaiIIKAIAIgANAAsgCCAENgIAIARBGGogBTYCACAEIAQ2AgwgBCAENgIIDAMLIAQoAggiAyACNgIMIAQgAjYCCCACQQA2AhggAiAENgIMIAIgAzYCCAsgC0EIaiEDDAULIAUoAggiAyAENgIMIAUgBDYCCCAEQRhqQQA2AgAgBCAFNgIMIAQgAzYCCAtBACgCpLSAgAAiAyACTQ0AQQAoArC0gIAAIgQgAmoiBSADIAJrIgNBAXI2AgRBACADNgKktICAAEEAIAU2ArC0gIAAIAQgAkEDcjYCBCAEQQhqIQMMAwtBACEDQQBBMDYCiLiAgAAMAgsCQCALRQ0AAkACQCAIIAgoAhwiBUECdEHItoCAAGoiAygCAEcNACADIAA2AgAgAA0BQQAgB0F%2BIAV3cSIHNgKctICAAAwCCyALQRBBFCALKAIQIAhGG2ogADYCACAARQ0BCyAAIAs2AhgCQCAIKAIQIgNFDQAgACADNgIQIAMgADYCGAsgCEEUaigCACIDRQ0AIABBFGogAzYCACADIAA2AhgLAkACQCAEQQ9LDQAgCCAEIAJqIgNBA3I2AgQgCCADaiIDIAMoAgRBAXI2AgQMAQsgCCACaiIAIARBAXI2AgQgCCACQQNyNgIEIAAgBGogBDYCAAJAIARB%2FwFLDQAgBEEDdiIEQQN0QcC0gIAAaiEDAkACQEEAKAKYtICAACIFQQEgBHQiBHENAEEAIAUgBHI2Api0gIAAIAMhBAwBCyADKAIIIQQLIAQgADYCDCADIAA2AgggACADNgIMIAAgBDYCCAwBC0EfIQMCQCAEQf%2F%2F%2FwdLDQAgBEEIdiIDIANBgP4%2FakEQdkEIcSIDdCIFIAVBgOAfakEQdkEEcSIFdCICIAJBgIAPakEQdkECcSICdEEPdiADIAVyIAJyayIDQQF0IAQgA0EVanZBAXFyQRxqIQMLIAAgAzYCHCAAQgA3AhAgA0ECdEHItoCAAGohBQJAIAdBASADdCICcQ0AIAUgADYCAEEAIAcgAnI2Apy0gIAAIAAgBTYCGCAAIAA2AgggACAANgIMDAELIARBAEEZIANBAXZrIANBH0YbdCEDIAUoAgAhAgJAA0AgAiIFKAIEQXhxIARGDQEgA0EddiECIANBAXQhAyAFIAJBBHFqQRBqIgYoAgAiAg0ACyAGIAA2AgAgACAFNgIYIAAgADYCDCAAIAA2AggMAQsgBSgCCCIDIAA2AgwgBSAANgIIIABBADYCGCAAIAU2AgwgACADNgIICyAIQQhqIQMMAQsCQCAKRQ0AAkACQCAAIAAoAhwiBUECdEHItoCAAGoiAygCAEcNACADIAg2AgAgCA0BQQAgCUF%2BIAV3cTYCnLSAgAAMAgsgCkEQQRQgCigCECAARhtqIAg2AgAgCEUNAQsgCCAKNgIYAkAgACgCECIDRQ0AIAggAzYCECADIAg2AhgLIABBFGooAgAiA0UNACAIQRRqIAM2AgAgAyAINgIYCwJAAkAgBEEPSw0AIAAgBCACaiIDQQNyNgIEIAAgA2oiAyADKAIEQQFyNgIEDAELIAAgAmoiBSAEQQFyNgIEIAAgAkEDcjYCBCAFIARqIAQ2AgACQCAHRQ0AIAdBA3YiCEEDdEHAtICAAGohAkEAKAKstICAACEDAkACQEEBIAh0IgggBnENAEEAIAggBnI2Api0gIAAIAIhCAwBCyACKAIIIQgLIAggAzYCDCACIAM2AgggAyACNgIMIAMgCDYCCAtBACAFNgKstICAAEEAIAQ2AqC0gIAACyAAQQhqIQMLIAFBEGokgICAgAAgAwsKACAAEL2BgIAAC%2FANAQd%2FAkAgAEUNACAAQXhqIgEgAEF8aigCACICQXhxIgBqIQMCQCACQQFxDQAgAkEDcUUNASABIAEoAgAiAmsiAUEAKAKotICAACIESQ0BIAIgAGohAAJAQQAoAqy0gIAAIAFGDQACQCACQf8BSw0AIAEoAggiBCACQQN2IgVBA3RBwLSAgABqIgZGGgJAIAEoAgwiAiAERw0AQQBBACgCmLSAgABBfiAFd3E2Api0gIAADAMLIAIgBkYaIAIgBDYCCCAEIAI2AgwMAgsgASgCGCEHAkACQCABKAIMIgYgAUYNACAEIAEoAggiAksaIAYgAjYCCCACIAY2AgwMAQsCQCABQRRqIgIoAgAiBA0AIAFBEGoiAigCACIEDQBBACEGDAELA0AgAiEFIAQiBkEUaiICKAIAIgQNACAGQRBqIQIgBigCECIEDQALIAVBADYCAAsgB0UNAQJAAkAgASgCHCIEQQJ0Qci2gIAAaiICKAIAIAFHDQAgAiAGNgIAIAYNAUEAQQAoApy0gIAAQX4gBHdxNgKctICAAAwDCyAHQRBBFCAHKAIQIAFGG2ogBjYCACAGRQ0CCyAGIAc2AhgCQCABKAIQIgJFDQAgBiACNgIQIAIgBjYCGAsgASgCFCICRQ0BIAZBFGogAjYCACACIAY2AhgMAQsgAygCBCICQQNxQQNHDQAgAyACQX5xNgIEQQAgADYCoLSAgAAgASAAaiAANgIAIAEgAEEBcjYCBA8LIAMgAU0NACADKAIEIgJBAXFFDQACQAJAIAJBAnENAAJAQQAoArC0gIAAIANHDQBBACABNgKwtICAAEEAQQAoAqS0gIAAIABqIgA2AqS0gIAAIAEgAEEBcjYCBCABQQAoAqy0gIAARw0DQQBBADYCoLSAgABBAEEANgKstICAAA8LAkBBACgCrLSAgAAgA0cNAEEAIAE2Aqy0gIAAQQBBACgCoLSAgAAgAGoiADYCoLSAgAAgASAAQQFyNgIEIAEgAGogADYCAA8LIAJBeHEgAGohAAJAAkAgAkH%2FAUsNACADKAIIIgQgAkEDdiIFQQN0QcC0gIAAaiIGRhoCQCADKAIMIgIgBEcNAEEAQQAoApi0gIAAQX4gBXdxNgKYtICAAAwCCyACIAZGGiACIAQ2AgggBCACNgIMDAELIAMoAhghBwJAAkAgAygCDCIGIANGDQBBACgCqLSAgAAgAygCCCICSxogBiACNgIIIAIgBjYCDAwBCwJAIANBFGoiAigCACIEDQAgA0EQaiICKAIAIgQNAEEAIQYMAQsDQCACIQUgBCIGQRRqIgIoAgAiBA0AIAZBEGohAiAGKAIQIgQNAAsgBUEANgIACyAHRQ0AAkACQCADKAIcIgRBAnRByLaAgABqIgIoAgAgA0cNACACIAY2AgAgBg0BQQBBACgCnLSAgABBfiAEd3E2Apy0gIAADAILIAdBEEEUIAcoAhAgA0YbaiAGNgIAIAZFDQELIAYgBzYCGAJAIAMoAhAiAkUNACAGIAI2AhAgAiAGNgIYCyADKAIUIgJFDQAgBkEUaiACNgIAIAIgBjYCGAsgASAAaiAANgIAIAEgAEEBcjYCBCABQQAoAqy0gIAARw0BQQAgADYCoLSAgAAPCyADIAJBfnE2AgQgASAAaiAANgIAIAEgAEEBcjYCBAsCQCAAQf8BSw0AIABBA3YiAkEDdEHAtICAAGohAAJAAkBBACgCmLSAgAAiBEEBIAJ0IgJxDQBBACAEIAJyNgKYtICAACAAIQIMAQsgACgCCCECCyACIAE2AgwgACABNgIIIAEgADYCDCABIAI2AggPC0EfIQICQCAAQf%2F%2F%2FwdLDQAgAEEIdiICIAJBgP4%2FakEQdkEIcSICdCIEIARBgOAfakEQdkEEcSIEdCIGIAZBgIAPakEQdkECcSIGdEEPdiACIARyIAZyayICQQF0IAAgAkEVanZBAXFyQRxqIQILIAFCADcCECABQRxqIAI2AgAgAkECdEHItoCAAGohBAJAAkBBACgCnLSAgAAiBkEBIAJ0IgNxDQAgBCABNgIAQQAgBiADcjYCnLSAgAAgAUEYaiAENgIAIAEgATYCCCABIAE2AgwMAQsgAEEAQRkgAkEBdmsgAkEfRht0IQIgBCgCACEGAkADQCAGIgQoAgRBeHEgAEYNASACQR12IQYgAkEBdCECIAQgBkEEcWpBEGoiAygCACIGDQALIAMgATYCACABQRhqIAQ2AgAgASABNgIMIAEgATYCCAwBCyAEKAIIIgAgATYCDCAEIAE2AgggAUEYakEANgIAIAEgBDYCDCABIAA2AggLQQBBACgCuLSAgABBf2oiAUF%2FIAEbNgK4tICAAAsLoA0BBn8gACABaiECAkACQCAAKAIEIgNBAXENACADQQNxRQ0BIAAoAgAiAyABaiEBAkACQEEAKAKstICAACAAIANrIgBGDQACQCADQf8BSw0AIAAoAggiBCADQQN2IgVBA3RBwLSAgABqIgZGGiAAKAIMIgMgBEcNAkEAQQAoApi0gIAAQX4gBXdxNgKYtICAAAwDCyAAKAIYIQcCQAJAIAAoAgwiBiAARg0AQQAoAqi0gIAAIAAoAggiA0saIAYgAzYCCCADIAY2AgwMAQsCQCAAQRRqIgMoAgAiBA0AIABBEGoiAygCACIEDQBBACEGDAELA0AgAyEFIAQiBkEUaiIDKAIAIgQNACAGQRBqIQMgBigCECIEDQALIAVBADYCAAsgB0UNAgJAAkAgACgCHCIEQQJ0Qci2gIAAaiIDKAIAIABHDQAgAyAGNgIAIAYNAUEAQQAoApy0gIAAQX4gBHdxNgKctICAAAwECyAHQRBBFCAHKAIQIABGG2ogBjYCACAGRQ0DCyAGIAc2AhgCQCAAKAIQIgNFDQAgBiADNgIQIAMgBjYCGAsgACgCFCIDRQ0CIAZBFGogAzYCACADIAY2AhgMAgsgAigCBCIDQQNxQQNHDQEgAiADQX5xNgIEQQAgATYCoLSAgAAgAiABNgIAIAAgAUEBcjYCBA8LIAMgBkYaIAMgBDYCCCAEIAM2AgwLAkACQCACKAIEIgNBAnENAAJAQQAoArC0gIAAIAJHDQBBACAANgKwtICAAEEAQQAoAqS0gIAAIAFqIgE2AqS0gIAAIAAgAUEBcjYCBCAAQQAoAqy0gIAARw0DQQBBADYCoLSAgABBAEEANgKstICAAA8LAkBBACgCrLSAgAAgAkcNAEEAIAA2Aqy0gIAAQQBBACgCoLSAgAAgAWoiATYCoLSAgAAgACABQQFyNgIEIAAgAWogATYCAA8LIANBeHEgAWohAQJAAkAgA0H%2FAUsNACACKAIIIgQgA0EDdiIFQQN0QcC0gIAAaiIGRhoCQCACKAIMIgMgBEcNAEEAQQAoApi0gIAAQX4gBXdxNgKYtICAAAwCCyADIAZGGiADIAQ2AgggBCADNgIMDAELIAIoAhghBwJAAkAgAigCDCIGIAJGDQBBACgCqLSAgAAgAigCCCIDSxogBiADNgIIIAMgBjYCDAwBCwJAIAJBFGoiBCgCACIDDQAgAkEQaiIEKAIAIgMNAEEAIQYMAQsDQCAEIQUgAyIGQRRqIgQoAgAiAw0AIAZBEGohBCAGKAIQIgMNAAsgBUEANgIACyAHRQ0AAkACQCACKAIcIgRBAnRByLaAgABqIgMoAgAgAkcNACADIAY2AgAgBg0BQQBBACgCnLSAgABBfiAEd3E2Apy0gIAADAILIAdBEEEUIAcoAhAgAkYbaiAGNgIAIAZFDQELIAYgBzYCGAJAIAIoAhAiA0UNACAGIAM2AhAgAyAGNgIYCyACKAIUIgNFDQAgBkEUaiADNgIAIAMgBjYCGAsgACABaiABNgIAIAAgAUEBcjYCBCAAQQAoAqy0gIAARw0BQQAgATYCoLSAgAAPCyACIANBfnE2AgQgACABaiABNgIAIAAgAUEBcjYCBAsCQCABQf8BSw0AIAFBA3YiA0EDdEHAtICAAGohAQJAAkBBACgCmLSAgAAiBEEBIAN0IgNxDQBBACAEIANyNgKYtICAACABIQMMAQsgASgCCCEDCyADIAA2AgwgASAANgIIIAAgATYCDCAAIAM2AggPC0EfIQMCQCABQf%2F%2F%2FwdLDQAgAUEIdiIDIANBgP4%2FakEQdkEIcSIDdCIEIARBgOAfakEQdkEEcSIEdCIGIAZBgIAPakEQdkECcSIGdEEPdiADIARyIAZyayIDQQF0IAEgA0EVanZBAXFyQRxqIQMLIABCADcCECAAQRxqIAM2AgAgA0ECdEHItoCAAGohBAJAQQAoApy0gIAAIgZBASADdCICcQ0AIAQgADYCAEEAIAYgAnI2Apy0gIAAIABBGGogBDYCACAAIAA2AgggACAANgIMDwsgAUEAQRkgA0EBdmsgA0EfRht0IQMgBCgCACEGAkADQCAGIgQoAgRBeHEgAUYNASADQR12IQYgA0EBdCEDIAQgBkEEcWpBEGoiAigCACIGDQALIAIgADYCACAAQRhqIAQ2AgAgACAANgIMIAAgADYCCA8LIAQoAggiASAANgIMIAQgADYCCCAAQRhqQQA2AgAgACAENgIMIAAgATYCCAsLegECfwJAAkACQCABQRBHDQAgAhC7gYCAACEBDAELQRwhAyABQQRJDQEgAUEDcQ0BIAFBAnYiBCAEQX9qcQ0BQTAhA0FAIAFrIAJJDQEgAUEQIAFBEEsbIAIQwIGAgAAhAQsCQCABDQBBMA8LIAAgATYCAEEAIQMLIAMLrQMBBX8CQAJAIABBECAAQRBLGyICIAJBf2pxDQAgAiEADAELQSAhAwNAIAMiAEEBdCEDIAAgAkkNAAsLAkBBQCAAayABSw0AQQBBMDYCiLiAgABBAA8LAkAgAEEQIAFBE2pBcHEgAUELSRsiAWpBDGoQu4GAgAAiAw0AQQAPCyADQXhqIQICQAJAIABBf2ogA3ENACACIQAMAQsgA0F8aiIEKAIAIgVBeHEgAyAAakF%2FakEAIABrcUF4aiIDQQAgACADIAJrQQ9LG2oiACACayIDayEGAkAgBUEDcQ0AIAAgBjYCBCAAIAIoAgAgA2o2AgAMAQsgACAGIAAoAgRBAXFyQQJyNgIEIAAgBmoiBiAGKAIEQQFyNgIEIAQgAyAEKAIAQQFxckECcjYCACACIANqIgYgBigCBEEBcjYCBCACIAMQvoGAgAALAkAgACgCBCIDQQNxRQ0AIANBeHEiAiABQRBqTQ0AIAAgASADQQFxckECcjYCBCAAIAFqIgMgAiABayIBQQNyNgIEIAAgAmoiAiACKAIEQQFyNgIEIAMgARC%2BgYCAAAsgAEEIagtOAAJAIAANAD8AQRB0DwsCQCAAQf%2F%2FA3ENACAAQX9MDQACQCAAQRB2QAAiAEF%2FRw0AQQBBMDYCiLiAgABBfw8LIABBEHQPCxDGgYCAAAALIgACQCAAIABcDQACQCABIAFbDQAgAA8LIAAgAZYhAQsgAQsiAAJAIAAgAFwNAAJAIAEgAVsNACAADwsgACABlyEBCyABCyIAAkAgACAAYg0AAkAgASABYQ0AIAAPCyAAIAGkIQELIAELIgACQCAAIABiDQACQCABIAFhDQAgAA8LIAAgAaUhAQsgAQsEAAAACw8AIAAQgICAgABB%2F%2F8DcQsVACAAIAEgAiADEIGAgIAAQf%2F%2FA3ELFQAgACABIAIgAxCCgICAAEH%2F%2FwNxC3EBAn8jgICAgABBEGsiAySAgICAAEF%2FIQQCQAJAIAJBf0oNAEEAQRw2Aoi4gIAADAELAkAgACABIAIgA0EMahDJgYCAACICRQ0AQQAgAjYCiLiAgABBfyEEDAELIAMoAgwhBAsgA0EQaiSAgICAACAEC8ECAQd%2FI4CAgIAAQRBrIgMkgICAgAAgAyACNgIMIAMgATYCCCADIAAoAhgiATYCACADIAAoAhQgAWsiATYCBEECIQQCQAJAIAEgAmoiBSAAKAI4IANBAhDKgYCAACIGRg0AIAMhAQNAAkAgBkF%2FSg0AQQAhBiAAQQA2AhggAEIANwMQIAAgACgCAEEgcjYCACAEQQJGDQMgAiABKAIEayEGDAMLIAEgBiABKAIEIgdLIghBA3RqIgkgCSgCACAGIAdBACAIG2siB2o2AgAgAUEMQQQgCBtqIgkgCSgCACAHazYCACAFIAZrIgUgACgCOCABQQhqIAEgCBsiASAEIAhrIgQQyoGAgAAiBkcNAAsLIAAgACgCKCIBNgIYIAAgATYCFCAAIAEgACgCLGo2AhAgAiEGCyADQRBqJICAgIAAIAYLIQACQCAAEMeBgIAAIgANAEEADwtBACAANgKIuICAAEF%2FCw0AIAAoAjgQzIGAgAALZAEBfyOAgICAAEEQayIDJICAgIAAAkACQCAAIAEgAkH%2FAXEgA0EIahDIgYCAACIARQ0AQQBBxgAgACAAQcwARhs2Aoi4gIAAQn8hAQwBCyADKQMIIQELIANBEGokgICAgAAgAQsRACAAKAI4IAEgAhDOgYCAAAs3AQF%2FI4CAgIAAQRBrIgMkgICAgAAgAyACNgIMIAAgASACENiBgIAAIQIgA0EQaiSAgICAACACCwgAQZS4gIAAC4MDAQN%2FAkAQ0YGAgAAoAgAiAEUNAANAAkAgACgCFCAAKAIYRg0AIABBAEEAIAAoAiARgYCAgAAAGgsCQCAAKAIEIgEgACgCCCICRg0AIAAgASACa6xBASAAKAIkEYKAgIAAABoLIAAoAjQiAA0ACwsCQEEAKAKYuICAACIARQ0AAkAgACgCFCAAKAIYRg0AIABBAEEAIAAoAiARgYCAgAAAGgsgACgCBCIBIAAoAggiAkYNACAAIAEgAmusQQEgACgCJBGCgICAAAAaCwJAQQAoApi4gIAAIgBFDQACQCAAKAIUIAAoAhhGDQAgAEEAQQAgACgCIBGBgICAAAAaCyAAKAIEIgEgACgCCCICRg0AIAAgASACa6xBASAAKAIkEYKAgIAAABoLAkBBACgCyLKAgAAiAEUNAAJAIAAoAhQgACgCGEYNACAAQQBBACAAKAIgEYGAgIAAABoLIAAoAgQiASAAKAIIIgJGDQAgACABIAJrrEEBIAAoAiQRgoCAgAAAGgsLXAEBfyAAIAAoAjwiAUF%2FaiABcjYCPAJAIAAoAgAiAUEIcUUNACAAIAFBIHI2AgBBfw8LIABCADcCBCAAIAAoAigiATYCGCAAIAE2AhQgACABIAAoAixqNgIQQQALhgIBBn8CQAJAIAIoAhAiAw0AQQAhBCACENOBgIAADQEgAigCECEDCwJAIAMgAigCFCIFayABTw0AIAIgACABIAIoAiARgYCAgAAADwtBACEGAkACQCACKAJAQQBODQAgASEDDAELQQAhBiAAIQRBACEDA0ACQCABIANHDQAgASEDDAILIANBAWohAyAEIAFqIQcgBEF%2FaiIIIQQgB0F%2Fai0AAEEKRw0ACyACIAAgASADa0EBaiIGIAIoAiARgYCAgAAAIgQgBkkNASADQX9qIQMgCCABakEBaiEAIAIoAhQhBQsgBSAAIAMQ3oGAgAAaIAIgAigCFCADajYCFCAGIANqIQQLIAQLoQIBB38gAiABbCEEAkACQCADKAIQIgUNAEEAIQUgAxDTgYCAAA0BIAMoAhAhBQsCQCAFIAMoAhQiBmsgBE8NACADIAAgBCADKAIgEYGAgIAAACEFDAELQQAhBwJAAkAgAygCQEEATg0AIAQhBQwBCyAAIARqIQhBACEHQQAhBQNAAkAgBCAFag0AIAQhBQwCCyAIIAVqIQkgBUF%2FaiIKIQUgCUF%2Fai0AAEEKRw0ACyADIAAgBCAKakEBaiIHIAMoAiARgYCAgAAAIgUgB0kNASAKQX9zIQUgCCAKakEBaiEAIAMoAhQhBgsgBiAAIAUQ3oGAgAAaIAMgAygCFCAFajYCFCAHIAVqIQULAkAgBSAERw0AIAJBACABGw8LIAUgAW4LVQEBfwJAQQAoArS4gIAAIgENAEGcuICAACEBQQBBnLiAgAA2ArS4gIAAC0EAIAAgAEHMAEsbQQF0QbCWgIAAai8BAEGcioCAAGogASgCFBDjgYCAAAskAQF%2FIAAQ4IGAgAAhAkF%2FQQAgAiAAQQEgAiABENWBgIAARxsLjAMBA38jgICAgABB0AFrIgMkgICAgAAgAyACNgLMASADQaABakEgakIANwMAIANBuAFqQgA3AwAgA0GwAWpCADcDACADQgA3A6gBIANCADcDoAEgAyACNgLIAQJAAkBBACABIANByAFqIANB0ABqIANBoAFqENmBgIAAQQBODQBBfyEADAELIAAoAgAhBAJAIAAoAjxBAEoNACAAIARBX3E2AgALAkACQAJAAkAgACgCLA0AIABB0AA2AiwgAEEANgIYIABCADcDECAAKAIoIQUgACADNgIoDAELQQAhBSAAKAIQDQELQX8hAiAAENOBgIAADQELIAAgASADQcgBaiADQdAAaiADQaABahDZgYCAACECCyAEQSBxIQECQCAFRQ0AIABBAEEAIAAoAiARgYCAgAAAGiAAQQA2AiwgACAFNgIoIABBADYCGCAAKAIUIQUgAEIANwMQIAJBfyAFGyECCyAAIAAoAgAiBSABcjYCAEF%2FIAIgBUEgcRshAAsgA0HQAWokgICAgAAgAAuVRgUcfwJ%2BAXwGfwF8I4CAgIAAQfAGayIFJICAgIAAIAVBxABqQQxqIQYgBUE3aiEHQX4gBUHQAGprIQggBUHEAGpBC2ohCSAFQdAAakEIciEKIAVB0ABqQQlyIQtBdiAFQcQAamshDCAFQcQAakEKaiENIAVBlANqIQ4gBUHwAGpBBHIhDyAFQZADaiEQIAVBOGohEUEAIRJBACETQQAhFAJAAkACQANAIAEhFSAUQf%2F%2F%2F%2F8HIBNrSg0BIBQgE2ohEwJAAkACQAJAAkAgFS0AACIURQ0AIBUhAQNAAkACQAJAIBRB%2FwFxIhRFDQAgFEElRw0CIAEhFANAIAFBAWotAABBJUcNAiAUQQFqIRQgAUECaiIBLQAAQSVGDQAMAgsLIAEhFAsgFCAVayIUQf%2F%2F%2F%2F8HIBNrIhZKDQgCQCAARQ0AIAAtAABBIHENACAVIBQgABDUgYCAABoLIBQNByABQQFqIRRBfyEXAkAgASwAASIYQVBqIhlBCUsNACABLQACQSRHDQAgAUEDaiEUIAEsAAMhGEEBIRIgGSEXC0EAIRoCQCAYQWBqIgFBH0sNAEEBIAF0IgFBidEEcUUNACAUQQFqIRlBACEaA0AgASAaciEaIBkiFCwAACIYQWBqIgFBIE8NASAUQQFqIRlBASABdCIBQYnRBHENAAsLAkAgGEEqRw0AAkACQCAULAABQVBqIgFBCUsNACAULQACQSRHDQAgBCABQQJ0akEKNgIAIBRBA2ohGSAULAABQQN0IANqQYB9aigCACEbQQEhEgwBCyASDQYgFEEBaiEZAkAgAA0AQQAhEkEAIRsMBgsgAiACKAIAIgFBBGo2AgAgASgCACEbQQAhEgsgG0F%2FSg0EQQAgG2shGyAaQYDAAHIhGgwEC0EAIRsCQCAYQVBqIgFBCU0NACAUIRkMBAtBACEbA0ACQCAbQcyZs%2BYASw0AQX8gG0EKbCIZIAFqIAFB%2F%2F%2F%2F%2FwcgGWtLGyEbIBQsAAEhASAUQQFqIhkhFCABQVBqIgFBCkkNASAbQQBIDQoMBQsgFCwAASEBQX8hGyAUQQFqIRQgAUFQaiIBQQpJDQAMCQsLIAFBAWoiAS0AACEUDAALCyAADQcCQCASDQBBACETDAgLAkACQCAEKAIEIgENAEEBIQEMAQsgA0EIaiABIAIQ2oGAgAACQCAEKAIIIgENAEECIQEMAQsgA0EQaiABIAIQ2oGAgAACQCAEKAIMIgENAEEDIQEMAQsgA0EYaiABIAIQ2oGAgAACQCAEKAIQIgENAEEEIQEMAQsgA0EgaiABIAIQ2oGAgAACQCAEKAIUIgENAEEFIQEMAQsgA0EoaiABIAIQ2oGAgAACQCAEKAIYIgENAEEGIQEMAQsgA0EwaiABIAIQ2oGAgAACQCAEKAIcIgENAEEHIQEMAQsgA0E4aiABIAIQ2oGAgAACQCAEKAIgIgENAEEIIQEMAQsgA0HAAGogASACENqBgIAAAkAgBCgCJCIBDQBBCSEBDAELIANByABqIAEgAhDagYCAAEEBIRMMCAsgAUECdCEBA0AgBCABaigCAA0CIAFBBGoiAUEoRw0AC0EBIRMMBwtBACEUQX8hGAJAAkAgGS0AAEEuRg0AIBkhAUEAIRwMAQsCQCAZLAABIhhBKkcNAAJAAkAgGSwAAkFQaiIBQQlLDQAgGS0AA0EkRw0AIAQgAUECdGpBCjYCACAZQQRqIQEgGSwAAkEDdCADakGAfWooAgAhGAwBCyASDQMgGUECaiEBAkAgAA0AQQAhGAwBCyACIAIoAgAiGUEEajYCACAZKAIAIRgLIBhBf3NBH3YhHAwBCyAZQQFqIQECQCAYQVBqIh1BCU0NAEEBIRxBACEYDAELQQAhGQNAQX8hGAJAIBlBzJmz5gBLDQBBfyAZQQpsIhkgHWogHUH%2F%2F%2F%2F%2FByAZa0sbIRgLQQEhHCAYIRkgAUEBaiIBLAAAQVBqIh1BCkkNAAsLA0AgFCEZIAEsAAAiFEGFf2pBRkkNASABQQFqIQEgFCAZQTpsakGPl4CAAGotAAAiFEF%2FakEISQ0ACwJAAkACQCAUQRtGDQAgFEUNAwJAIBdBAEgNACAEIBdBAnRqIBQ2AgAgBSADIBdBA3RqKQMANwM4DAILAkAgAA0AQQAhEwwKCyAFQThqIBQgAhDagYCAAAwCCyAXQX9KDQILQQAhFCAARQ0ECyAaQf%2F%2Fe3EiHSAaIBpBgMAAcRshHgJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAFBf2osAAAiFEFfcSAUIBRBD3FBA0YbIBQgGRsiH0G%2Ff2oOOBARDREQEBAREREREREREREREQwRERERAxEREREREREREBEIBRAQEBEFERERCQEEAhERChEAEREDEQtBACEXQYCIgIAAISAgBSkDOCEhDAULQQAhFAJAAkACQAJAAkACQAJAIBlB%2FwFxDggAAQIDBBsFBhsLIAUoAjggEzYCAAwaCyAFKAI4IBM2AgAMGQsgBSgCOCATrDcDAAwYCyAFKAI4IBM7AQAMFwsgBSgCOCATOgAADBYLIAUoAjggEzYCAAwVCyAFKAI4IBOsNwMADBQLIBhBCCAYQQhLGyEYIB5BCHIhHkH4ACEfC0EAIRdBgIiAgAAhIAJAIAUpAzgiIVBFDQAgESEVDAQLIB9BIHEhGSARIRUDQCAVQX9qIhUgIadBD3FBoJuAgABqLQAAIBlyOgAAICFCD1YhFCAhQgSIISEgFA0ACyAeQQhxRQ0DIB9BBHVBgIiAgABqISBBAiEXDAMLIBEhFQJAIAUpAzgiIVANACARIRUDQCAVQX9qIhUgIadBB3FBMHI6AAAgIUIHViEUICFCA4ghISAUDQALC0EAIRdBgIiAgAAhICAeQQhxRQ0CIBggESAVayIUQQFqIBggFEobIRgMAgsCQCAFKQM4IiFCf1UNACAFQgAgIX0iITcDOEEBIRdBgIiAgAAhIAwBCwJAIB5BgBBxRQ0AQQEhF0GBiICAACEgDAELQYKIgIAAQYCIgIAAIB5BAXEiFxshIAsCQAJAICFCgICAgBBaDQAgISEiIBEhFQwBCyARIRUDQCAVQX9qIhUgISAhQgqAIiJCCn59p0EwcjoAACAhQv%2F%2F%2F%2F%2BfAVYhFCAiISEgFA0ACwsgIqciFEUNAANAIBVBf2oiFSAUIBRBCm4iGUEKbGtBMHI6AAAgFEEJSyEaIBkhFCAaDQALCwJAIBxFDQAgGEEASA0QCyAeQf%2F%2Fe3EgHiAcGyEdAkAgBSkDOCIhQgBSDQBBACEaIBgNACARIRUgESEUDAsLIBggESAVayAhUGoiFCAYIBRKGyEaIBEhFAwKCyAFIAUpAzg8ADdBACEXQYCIgIAAISBBASEaIAchFSARIRQMCQtBACgCiLiAgAAQ1oGAgAAhFQwBCyAFKAI4IhRBgImAgAAgFBshFQtBACEXIBUgFUH%2F%2F%2F%2F%2FByAYIBhBAEgbEN2BgIAAIhpqIRRBgIiAgAAhICAYQX9KDQYgFC0AAEUNBgwLCyAFKAI4IRkgGA0BQQAhFAwCCyAFQQA2AgwgBSAFKQM4PgIIIAUgBUEIajYCOEF%2FIRggBUEIaiEZC0EAIRQgGSEVAkADQCAVKAIAIhZFDQECQCAFQQRqIBYQ5IGAgAAiFkEASCIaDQAgFiAYIBRrSw0AIBVBBGohFSAYIBYgFGoiFEsNAQwCCwsgGg0KCyAUQQBIDQgLAkAgHkGAwARxIhoNACAbIBRMDQAgBUHwAGpBICAbIBRrIhVBgAIgFUGAAkkiFhsQ34GAgAAaAkAgFg0AA0ACQCAALQAAQSBxDQAgBUHwAGpBgAIgABDUgYCAABoLIBVBgH5qIhVB%2FwFLDQALCyAALQAAQSBxDQAgBUHwAGogFSAAENSBgIAAGgsCQCAURQ0AQQAhFQNAIBkoAgAiFkUNASAFQQRqIBYQ5IGAgAAiFiAVaiIVIBRLDQECQCAALQAAQSBxDQAgBUEEaiAWIAAQ1IGAgAAaCyAZQQRqIRkgFSAUSQ0ACwsCQCAaQYDAAEcNACAbIBRMDQAgBUHwAGpBICAbIBRrIhVBgAIgFUGAAkkiFhsQ34GAgAAaAkAgFg0AA0ACQCAALQAAQSBxDQAgBUHwAGpBgAIgABDUgYCAABoLIBVBgH5qIhVB%2FwFLDQALCyAALQAAQSBxDQAgBUHwAGogFSAAENSBgIAAGgsgGyAUIBsgFEobIRQMBgsCQCAcRQ0AIBhBAEgNBwsgBSsDOCEjIAVBADYCbAJAAkAgI71Cf1UNACAjmiEjQQEhJEEAISVBioiAgAAhJgwBCwJAIB5BgBBxRQ0AQQEhJEEAISVBjYiAgAAhJgwBC0GQiICAAEGLiICAACAeQQFxIiQbISYgJEUhJQsCQCAjmUQAAAAAAADwf2MNACAkQQNqIRUCQCAeQYDAAHENACAbIBVMDQAgBUHwBGpBICAbIBVrIhRBgAIgFEGAAkkiFhsQ34GAgAAaAkAgFg0AA0ACQCAALQAAQSBxDQAgBUHwBGpBgAIgABDUgYCAABoLIBRBgH5qIhRB%2FwFLDQALCyAALQAAQSBxDQAgBUHwBGogFCAAENSBgIAAGgsCQCAAKAIAIhRBIHENACAmICQgABDUgYCAABogACgCACEUCwJAIBRBIHENAEGdiICAAEH2iICAACAfQSBxIhQbQaGIgIAAQfqIgIAAIBQbICMgI2IbQQMgABDUgYCAABoLAkAgHkGAwARxQYDAAEcNACAbIBVMDQAgBUHwBGpBICAbIBVrIhRBgAIgFEGAAkkiFhsQ34GAgAAaAkAgFg0AA0ACQCAALQAAQSBxDQAgBUHwBGpBgAIgABDUgYCAABoLIBRBgH5qIhRB%2FwFLDQALCyAALQAAQSBxDQAgBUHwBGogFCAAENSBgIAAGgsgGyAVIBsgFUobIRQMBgsCQAJAAkAgIyAFQewAahDmgYCAACIjICOgIiNEAAAAAAAAAABhDQAgBSAFKAJsIhRBf2o2AmwgH0EgciInQeEARw0BDAYLIB9BIHIiJ0HhAEYNBUEGIBggGEEASBshFyAFKAJsIRkMAQsgBSAUQWNqIhk2AmxBBiAYIBhBAEgbIRcgI0QAAAAAAACwQaIhIwsgBUHwAGogECAZQQBIIigbIiAhFQNAAkACQCAjRAAAAAAAAPBBYyAjRAAAAAAAAAAAZnFFDQAgI6shFAwBC0EAIRQLIBUgFDYCACAVQQRqIRUgIyAUuKFEAAAAAGXNzUGiIiNEAAAAAAAAAABiDQALAkACQCAZQQFODQAgFSEUICAhFgwBCyAgIRYDQCAZQR0gGUEdSRshGQJAIBVBfGoiFCAWSQ0AIBmtISJCACEhA0AgFCAUNQIAICKGICFC%2F%2F%2F%2F%2Fw%2BDfCIhICFCgJTr3AOAIiFCgJTr3AN%2BfT4CACAUQXxqIhQgFk8NAAsgIaciFEUNACAWQXxqIhYgFDYCAAsCQANAIBUiFCAWTQ0BIBRBfGoiFSgCAEUNAAsLIAUgBSgCbCAZayIZNgJsIBQhFSAZQQBKDQALCwJAIBlBf0oNACAXQRlqQQluQQFqISkDQEEAIBlrIhVBCSAVQQlJGyEYAkACQCAWIBRJDQAgFigCACEVDAELQYCU69wDIBh2IR1BfyAYdEF%2FcyEcQQAhGSAWIRUDQCAVIBUoAgAiGiAYdiAZajYCACAaIBxxIB1sIRkgFUEEaiIVIBRJDQALIBYoAgAhFSAZRQ0AIBQgGTYCACAUQQRqIRQLIAUgBSgCbCAYaiIZNgJsICAgFiAVRUECdGoiFiAnQeYARhsiFSApQQJ0aiAUIBQgFWtBAnUgKUobIRQgGUEASA0ACwtBACEaAkAgFiAUTw0AICAgFmtBAnVBCWwhGiAWKAIAIhlBCkkNAEEKIRUDQCAaQQFqIRogGSAVQQpsIhVPDQALCwJAIBdBACAaICdB5gBGG2sgF0EARyAnQecARiIccWsiFSAUICBrQQJ1QQlsQXdqTg0AIBVBgMgAaiIZQQltIhhBAnQgDyAOICgbaiIoQYBgaiEdQQohFQJAIBkgGEEJbGsiGEEHSg0AQQggGGsiKUEHcSEZQQohFQJAIBhBf2pBB0kNACApQXhxIRhBCiEVA0AgFUGAwtcvbCEVIBhBeGoiGA0ACwsgGUUNAANAIBVBCmwhFSAZQX9qIhkNAAsLIB1BBGohKQJAAkAgHSgCACIZIBkgFW4iJyAVbGsiGA0AICkgFEYNAQsCQAJAICdBAXENAEQAAAAAAABAQyEjIBVBgJTr3ANHDQEgHSAWTQ0BIB1BfGotAABBAXFFDQELRAEAAAAAAEBDISMLRAAAAAAAAOA%2FRAAAAAAAAPA%2FRAAAAAAAAPg%2FICkgFEYbRAAAAAAAAPg%2FIBggFUEBdiIpRhsgGCApSRshKgJAICUNACAmLQAAQS1HDQAgKpohKiAjmiEjCyAdIBkgGGsiGTYCACAjICqgICNhDQAgHSAZIBVqIhU2AgACQCAVQYCU69wDSQ0AIChB%2FF9qIRUDQCAVQQRqQQA2AgACQCAVIBZPDQAgFkF8aiIWQQA2AgALIBUgFSgCAEEBaiIZNgIAIBVBfGohFSAZQf%2BT69wDSw0ACyAVQQRqIR0LICAgFmtBAnVBCWwhGiAWKAIAIhlBCkkNAEEKIRUDQCAaQQFqIRogGSAVQQpsIhVPDQALCyAdQQRqIhUgFCAUIBVLGyEUCyAUICBrIRUCQANAIBUhGSAUIh0gFk0iGA0BIBlBfGohFSAdQXxqIhQoAgBFDQALCwJAAkAgHA0AIB5BCHEhJwwBCyAaQX9zQX8gF0EBIBcbIhQgGkogGkF7SnEiFRsgFGohF0F%2FQX4gFRsgH2ohHyAeQQhxIicNAEF3IRQCQCAYDQAgHUF8aigCACIYRQ0AQQAhFCAYQQpwDQBBCiEVQQAhFANAIBRBf2ohFCAYIBVBCmwiFXBFDQALCyAZQQJ1QQlsQXdqIRUCQCAfQV9xQcYARw0AQQAhJyAXIBUgFGoiFEEAIBRBAEobIhQgFyAUSBshFwwBC0EAIScgFyAVIBpqIBRqIhRBACAUQQBKGyIUIBcgFEgbIRcLIBdB%2Ff%2F%2F%2FwdB%2Fv%2F%2F%2FwcgFyAnciIlG0oNBiAXICVBAEdqQQFqISkCQAJAIB9BX3FBxgBHIigNACAaQf%2F%2F%2F%2F8HIClrSg0IIBpBACAaQQBKGyEUDAELIAYhGSAGIRUCQCAaIBpBH3UiFGogFHMiFEUNAANAIBVBf2oiFSAUIBRBCm4iGEEKbGtBMHI6AAAgGUF%2FaiEZIBRBCUshHCAYIRQgHA0ACwsCQCAGIBlrQQFKDQAgFSANIBlraiIVQTAgDCAZahDfgYCAABoLIBVBfmoiHCAfOgAAIBVBf2pBLUErIBpBAEgbOgAAIAYgHGsiFEH%2F%2F%2F%2F%2FByApa0oNBwsgFCApaiIUICRB%2F%2F%2F%2F%2FwdzSg0GIBQgJGohKQJAIB5BgMAEcSIeDQAgGyApTA0AIAVB8ARqQSAgGyApayIUQYACIBRBgAJJIhUbEN%2BBgIAAGgJAIBUNAANAAkAgAC0AAEEgcQ0AIAVB8ARqQYACIAAQ1IGAgAAaCyAUQYB%2BaiIUQf8BSw0ACwsgAC0AAEEgcQ0AIAVB8ARqIBQgABDUgYCAABoLAkAgAC0AAEEgcQ0AICYgJCAAENSBgIAAGgsCQCAeQYCABEcNACAbIClMDQAgBUHwBGpBMCAbIClrIhRBgAIgFEGAAkkiFRsQ34GAgAAaAkAgFQ0AA0ACQCAALQAAQSBxDQAgBUHwBGpBgAIgABDUgYCAABoLIBRBgH5qIhRB%2FwFLDQALCyAALQAAQSBxDQAgBUHwBGogFCAAENSBgIAAGgsCQAJAICgNACAgIBYgFiAgSxsiHCEYA0ACQAJAIBgoAgAiFA0AIAshFiALIRUMAQsgCyEWIAshFQNAIBVBf2oiFSAUIBRBCm4iGUEKbGtBMHI6AAAgFkF%2FaiEWIBRBCUshGiAZIRQgGg0ACwsCQAJAIBggHEYNACAVIAVB0ABqTQ0BIBUgBUHQAGpqIBZrIhVBMCAWIAVB0ABqaxDfgYCAABoMAQsgFSALRw0AIAVBMDoAWCAKIRULAkAgAC0AAEEgcQ0AIBUgCyAVayAAENSBgIAAGgsgGEEEaiIYICBNDQALAkAgJUUNACAALQAAQSBxDQBB%2FoiAgABBASAAENSBgIAAGgsCQAJAIBggHUkNACAXIRQMAQsCQCAXQQFODQAgFyEUDAELA0ACQAJAAkAgGCgCACIUDQAgCyEVIAshFgwBCyALIRYgCyEVA0AgFUF%2FaiIVIBQgFEEKbiIZQQpsa0EwcjoAACAWQX9qIRYgFEEJSyEaIBkhFCAaDQALIBUgBUHQAGpNDQELIBUgBUHQAGpqIBZrIhVBMCAWIAVB0ABqaxDfgYCAABoLAkAgAC0AAEEgcQ0AIBUgF0EJIBdBCUgbIAAQ1IGAgAAaCyAXQXdqIRQgGEEEaiIYIB1PDQEgF0EJSiEVIBQhFyAVDQALCyAAQTAgFEEJakEJQQAQ24GAgAAMAQsCQCAXQQBIDQAgHSAWQQRqIB0gFksbIR0gFiEYA0ACQAJAIBgoAgAiFEUNAEEAIRUDQCAFQdAAaiAVakEIaiAUIBRBCm4iGUEKbGtBMHI6AAAgFUF%2FaiEVIBRBCUshGiAZIRQgGg0ACyAVRQ0AIAVB0ABqIBVqQQlqIRQMAQsgBUEwOgBYIAohFAsCQAJAIBggFkYNACAUIAVB0ABqTQ0BIAVB0ABqQTAgFCAFQdAAamsQ34GAgAAaIAVB0ABqIRQMAQsCQCAALQAAQSBxDQAgFEEBIAAQ1IGAgAAaCyAUQQFqIRQCQCAnDQAgF0EBSA0BCyAALQAAQSBxDQBB%2FoiAgABBASAAENSBgIAAGgsgCyAUayEVAkAgAC0AAEEgcQ0AIBQgFSAXIBcgFUobIAAQ1IGAgAAaCyAXIBVrIRcgGEEEaiIYIB1PDQEgF0F%2FSg0ACwsgAEEwIBdBEmpBEkEAENuBgIAAIAAtAABBIHENACAcIAYgHGsgABDUgYCAABoLAkAgHkGAwABHDQAgGyApTA0AIAVB8ARqQSAgGyApayIUQYACIBRBgAJJIhUbEN%2BBgIAAGgJAIBUNAANAAkAgAC0AAEEgcQ0AIAVB8ARqQYACIAAQ1IGAgAAaCyAUQYB%2BaiIUQf8BSw0ACwsgAC0AAEEgcQ0AIAVB8ARqIBQgABDUgYCAABoLIBsgKSAbIClKGyEUDAQLQQAhF0GAiICAACEgIBEhFCAeIR0gGCEaCyAUIBVrIhggGiAaIBhIGyIcQf%2F%2F%2F%2F8HIBdrSg0EIBcgHGoiGSAbIBsgGUgbIhQgFkoNBAJAIB1BgMAEcSIdDQAgGSAbTg0AIAVB8ABqQSAgFCAZayIWQYACIBZBgAJJIh4bEN%2BBgIAAGgJAIB4NAANAAkAgAC0AAEEgcQ0AIAVB8ABqQYACIAAQ1IGAgAAaCyAWQYB%2BaiIWQf8BSw0ACwsgAC0AAEEgcQ0AIAVB8ABqIBYgABDUgYCAABoLAkAgAC0AAEEgcQ0AICAgFyAAENSBgIAAGgsCQCAdQYCABEcNACAZIBtODQAgBUHwAGpBMCAUIBlrIhZBgAIgFkGAAkkiFxsQ34GAgAAaAkAgFw0AA0ACQCAALQAAQSBxDQAgBUHwAGpBgAIgABDUgYCAABoLIBZBgH5qIhZB%2FwFLDQALCyAALQAAQSBxDQAgBUHwAGogFiAAENSBgIAAGgsCQCAYIBpODQAgBUHwAGpBMCAcIBhrIhZBgAIgFkGAAkkiGhsQ34GAgAAaAkAgGg0AA0ACQCAALQAAQSBxDQAgBUHwAGpBgAIgABDUgYCAABoLIBZBgH5qIhZB%2FwFLDQALCyAALQAAQSBxDQAgBUHwAGogFiAAENSBgIAAGgsCQCAALQAAQSBxDQAgFSAYIAAQ1IGAgAAaCyAdQYDAAEcNAyAZIBtODQMgBUHwAGpBICAUIBlrIhVBgAIgFUGAAkkiFhsQ34GAgAAaAkAgFg0AA0ACQCAALQAAQSBxDQAgBUHwAGpBgAIgABDUgYCAABoLIBVBgH5qIhVB%2FwFLDQALCyAALQAAQSBxDQMgBUHwAGogFSAAENSBgIAAGgwDC0EAQRw2Aoi4gIAADAQLICYgH0EadEEfdUEJcWohFwJAIBhBC0sNAAJAAkBBDCAYayIUQQdxIhUNAEQAAAAAAAAwQCEqDAELIBhBdGohFEQAAAAAAAAwQCEqA0AgFEEBaiEUICpEAAAAAAAAMECiISogFUF%2FaiIVDQALQQAgFGshFAsCQCAYQXtqQQdJDQADQCAqRAAAAAAAADBAokQAAAAAAAAwQKJEAAAAAAAAMECiRAAAAAAAADBAokQAAAAAAAAwQKJEAAAAAAAAMECiRAAAAAAAADBAokQAAAAAAAAwQKIhKiAUQXhqIhQNAAsLAkAgFy0AAEEtRw0AICogI5ogKqGgmiEjDAELICMgKqAgKqEhIwsCQAJAIAUoAmwiGkUNACAaIBpBH3UiFGogFHMhFEEAIRUDQCAFQcQAaiAVakELaiAUIBRBCm4iFkEKbGtBMHI6AAAgFUF%2FaiEVIBRBCUshGSAWIRQgGQ0ACyAVRQ0AIAVBxABqIBVqQQxqIRQMAQsgBUEwOgBPIAkhFAsgJEECciEcIB9BIHEhFiAUQX5qIh0gH0EPajoAACAUQX9qQS1BKyAaQQBIGzoAACAeQQhxIRkgBUHQAGohFQNAIBUhFAJAAkAgI5lEAAAAAAAA4EFjRQ0AICOqIRUMAQtBgICAgHghFQsgFCAVQaCbgIAAai0AACAWcjoAACAjIBW3oUQAAAAAAAAwQKIhIwJAIBRBAWoiFSAFQdAAamtBAUcNAAJAIBkNACAYQQBKDQAgI0QAAAAAAAAAAGENAQsgFEEuOgABIBRBAmohFQsgI0QAAAAAAAAAAGINAAtB%2Ff%2F%2F%2FwcgBiAdayIgIBxqIhRrIBhIDQIgGEECaiAVIAVB0ABqayIWIAggFWogGEgbIBYgGBsiGiAUaiEVAkAgHkGAwARxIhkNACAbIBVMDQAgBUHwBGpBICAbIBVrIhRBgAIgFEGAAkkiGBsQ34GAgAAaAkAgGA0AA0ACQCAALQAAQSBxDQAgBUHwBGpBgAIgABDUgYCAABoLIBRBgH5qIhRB%2FwFLDQALCyAALQAAQSBxDQAgBUHwBGogFCAAENSBgIAAGgsCQCAALQAAQSBxDQAgFyAcIAAQ1IGAgAAaCwJAIBlBgIAERw0AIBsgFUwNACAFQfAEakEwIBsgFWsiFEGAAiAUQYACSSIYGxDfgYCAABoCQCAYDQADQAJAIAAtAABBIHENACAFQfAEakGAAiAAENSBgIAAGgsgFEGAfmoiFEH%2FAUsNAAsLIAAtAABBIHENACAFQfAEaiAUIAAQ1IGAgAAaCwJAIAAtAABBIHENACAFQdAAaiAWIAAQ1IGAgAAaCwJAIBogFmsiFEEBSA0AIAVB8ARqQTAgFEGAAiAUQYACSSIWGxDfgYCAABoCQCAWDQADQAJAIAAtAABBIHENACAFQfAEakGAAiAAENSBgIAAGgsgFEGAfmoiFEH%2FAUsNAAsLIAAtAABBIHENACAFQfAEaiAUIAAQ1IGAgAAaCwJAIAAtAABBIHENACAdICAgABDUgYCAABoLAkAgGUGAwABHDQAgGyAVTA0AIAVB8ARqQSAgGyAVayIUQYACIBRBgAJJIhYbEN%2BBgIAAGgJAIBYNAANAAkAgAC0AAEEgcQ0AIAVB8ARqQYACIAAQ1IGAgAAaCyAUQYB%2BaiIUQf8BSw0ACwsgAC0AAEEgcQ0AIAVB8ARqIBQgABDUgYCAABoLIBsgFSAbIBVKGyEUCyAUQQBODQALC0EAQT02Aoi4gIAAC0F%2FIRMLIAVB8AZqJICAgIAAIBMLswQAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAUF3ag4SEQABBAIDBQYHCAkKCwwNDg8QEgsgAiACKAIAIgFBBGo2AgAgACABNAIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNAIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMADwsgAiACKAIAIgFBBGo2AgAgACABMgEANwMADwsgAiACKAIAIgFBBGo2AgAgACABMwEANwMADwsgAiACKAIAIgFBBGo2AgAgACABMAAANwMADwsgAiACKAIAIgFBBGo2AgAgACABMQAANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMADwsgAiACKAIAIgFBBGo2AgAgACABNAIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKwMAOQMADwsQ3IGAgAAACyACIAIoAgAiAUEEajYCACAAIAEoAgA2AgALC54BAQF%2FI4CAgIAAQYACayIFJICAgIAAAkAgAiADTA0AIARBgMAEcQ0AIAUgASACIANrIgJBgAIgAkGAAkkiBBsQ34GAgAAhAwJAIAQNAANAAkAgAC0AAEEgcQ0AIANBgAIgABDUgYCAABoLIAJBgH5qIgJB%2FwFLDQALCyAALQAAQSBxDQAgAyACIAAQ1IGAgAAaCyAFQYACaiSAgICAAAscAEGTiYCAAEHYsYCAABDXgYCAABoQxoGAgAAACxoBAX8gAEEAIAEQ4YGAgAAiAiAAayABIAIbC9cHAQR%2FAkACQAJAIAJBIEsNACABQQNxRQ0BIAJFDQEgACABLQAAOgAAIAJBf2ohAyAAQQFqIQQgAUEBaiIFQQNxRQ0CIANFDQIgACABLQABOgABIAJBfmohAyAAQQJqIQQgAUECaiIFQQNxRQ0CIANFDQIgACABLQACOgACIAJBfWohAyAAQQNqIQQgAUEDaiIFQQNxRQ0CIANFDQIgACABLQADOgADIAJBfGohAyAAQQRqIQQgAUEEaiEFDAILIAAgASAC%2FAoAACAADwsgAiEDIAAhBCABIQULAkACQCAEQQNxIgINAAJAAkAgA0EQSQ0AAkAgA0FwaiICQRBxDQAgBCAFKQIANwIAIAQgBSkCCDcCCCAEQRBqIQQgBUEQaiEFIAIhAwsgAkEQSQ0BA0AgBCAFKQIANwIAIARBCGogBUEIaikCADcCACAEQRBqIAVBEGopAgA3AgAgBEEYaiAFQRhqKQIANwIAIARBIGohBCAFQSBqIQUgA0FgaiIDQQ9LDQALCyADIQILAkAgAkEIcUUNACAEIAUpAgA3AgAgBUEIaiEFIARBCGohBAsCQCACQQRxRQ0AIAQgBSgCADYCACAFQQRqIQUgBEEEaiEECwJAIAJBAnFFDQAgBCAFLwAAOwAAIARBAmohBCAFQQJqIQULIAJBAXFFDQEgBCAFLQAAOgAAIAAPCwJAAkACQAJAAkAgA0EgSQ0AAkACQCACQX9qDgMDAAEHCyAEIAUoAgA7AAAgBCAFQQJqKAEANgICIAQgBUEGaikBADcCBkEOIQEgBUEOaigBACEGQRIhAkEOIQMMAwsgBCAFKAIAOgAAIAQgBUEBaigAADYCASAEIAVBBWopAAA3AgVBDSEBIAVBDWooAAAhBkEPIQNBESECDAILAkAgA0EQcUUNACAEIAUtAAA6AAAgBCAFKAABNgABIAQgBSkABTcABSAEIAUvAA07AA0gBCAFLQAPOgAPIARBEGohBCAFQRBqIQULIANBCHENAgwDCyAEIAUoAgAiAzoAACAEIANBEHY6AAIgBCADQQh2OgABIAQgBUEDaigAADYCAyAEIAVBB2opAAA3AgdBDyEBIAVBD2ooAAAhBkENIQNBEyECCyAEIAFqIAY2AgAgBCACaiEEIAUgAmohBQsgBCAFKQAANwAAIARBCGohBCAFQQhqIQULAkAgA0EEcUUNACAEIAUoAAA2AAAgBEEEaiEEIAVBBGohBQsCQCADQQJxRQ0AIAQgBS8AADsAACAEQQJqIQQgBUECaiEFCyADQQFxRQ0AIAQgBS0AADoAAAsgAAuRAwIDfwF%2BAkAgAkEhSQ0AIAAgASAC%2FAsAIAAPCwJAIAJFDQAgACABOgAAIAIgAGoiA0F%2FaiABOgAAIAJBA0kNACAAIAE6AAIgACABOgABIANBfWogAToAACADQX5qIAE6AAAgAkEHSQ0AIAAgAToAAyADQXxqIAE6AAAgAkEJSQ0AIABBACAAa0EDcSIEaiIFIAFB%2FwFxQYGChAhsIgM2AgAgBSACIARrQXxxIgFqIgJBfGogAzYCACABQQlJDQAgBSADNgIIIAUgAzYCBCACQXhqIAM2AgAgAkF0aiADNgIAIAFBGUkNACAFIAM2AhggBSADNgIUIAUgAzYCECAFIAM2AgwgAkFwaiADNgIAIAJBbGogAzYCACACQWhqIAM2AgAgAkFkaiADNgIAIAEgBUEEcUEYciICayIBQSBJDQAgA61CgYCAgBB%2BIQYgBSACaiECA0AgAiAGNwMAIAJBGGogBjcDACACQRBqIAY3AwAgAkEIaiAGNwMAIAJBIGohAiABQWBqIgFBH0sNAAsLIAALsQEBAn8gACEBAkACQCAAQQNxRQ0AIAAhASAALQAARQ0BIABBAWoiAUEDcUUNACABLQAARQ0BIABBAmoiAUEDcUUNACABLQAARQ0BIABBA2oiAUEDcUUNACABLQAARQ0BIABBBGohAQsgAUF8aiEBA0AgAUEEaiIBKAIAIgJBf3MgAkH%2F%2Fft3anFBgIGChHhxRQ0ACyACQf8BcUUNAANAIAFBAWoiAS0AAA0ACwsgASAAawvyAgEDfyACQQBHIQMCQAJAAkACQCAAQQNxRQ0AIAJFDQACQCAALQAAIAFB%2FwFxRw0AIAAhBCACIQUMAwsgAkF%2FaiIFQQBHIQMgAEEBaiIEQQNxRQ0BIAVFDQEgBC0AACABQf8BcUYNAiACQX5qIgVBAEchAyAAQQJqIgRBA3FFDQEgBUUNASAELQAAIAFB%2FwFxRg0CIAJBfWoiBUEARyEDIABBA2oiBEEDcUUNASAFRQ0BIAQtAAAgAUH%2FAXFGDQIgAEEEaiEEIAJBfGoiBUEARyEDDAELIAIhBSAAIQQLIANFDQELAkAgBC0AACABQf8BcUYNACAFQQRJDQAgAUH%2FAXFBgYKECGwhAANAIAQoAgAgAHMiAkF%2FcyACQf%2F9%2B3dqcUGAgYKEeHENASAEQQRqIQQgBUF8aiIFQQNLDQALCyAFRQ0AIAFB%2FwFxIQIDQAJAIAQtAAAgAkcNACAEDwsgBEEBaiEEIAVBf2oiBQ0ACwtBAAsEACAACwwAIAAgARDigYCAAAsYAAJAIAANAEEADwsgACABQQAQ5YGAgAALtgIBAX9BASEDAkAgAEUNAAJAIAFB%2FwBLDQAgACABOgAAQQEPCwJAAkBBACgCnLiAgAANAAJAIAFBgH9xQYC%2FA0YNAEEAQRk2Aoi4gIAADAILIAAgAToAAEEBDwsCQCABQf8PSw0AIAAgAUE%2FcUGAAXI6AAEgACABQQZ2QcABcjoAAEECDwsCQAJAIAFBgLADSQ0AIAFBgEBxQYDAA0cNAQsgACABQT9xQYABcjoAAiAAIAFBDHZB4AFyOgAAIAAgAUEGdkE%2FcUGAAXI6AAFBAw8LAkAgAUGAgHxqQf%2F%2FP0sNACAAIAFBP3FBgAFyOgADIAAgAUESdkHwAXI6AAAgACABQQZ2QT9xQYABcjoAAiAAIAFBDHZBP3FBgAFyOgABQQQPC0EAQRk2Aoi4gIAAC0F%2FIQMLIAMLjwECAX4BfwJAIAC9IgJCNIinQf8PcSIDQf8PRg0AAkAgAw0AAkAgAEQAAAAAAAAAAGINACABQQA2AgAgAA8LIABEAAAAAAAA8EOiIAEQ5oGAgAAhACABIAEoAgBBQGo2AgAgAA8LIAEgA0GCeGo2AgAgAkL%2F%2F%2F%2F%2F%2F%2F%2F%2Fh4B%2Fg0KAgICAgICA8D%2BEvyEACyAAC5IBAQN8RAAAAAAAAPA%2FIAAgAKIiAkQAAAAAAADgP6IiA6EiBEQAAAAAAADwPyAEoSADoSACIAIgAiACRJAVyxmgAfo%2BokR3UcEWbMFWv6CiRExVVVVVVaU%2FoKIgAiACoiIDIAOiIAIgAkTUOIi%2B6fqovaJExLG0vZ7uIT6gokStUpyAT36SvqCioKIgACABoqGgoAumCgYBfwF%2BAn8DfAF%2FAXwjgICAgABBMGsiAiSAgICAAAJAAkACQAJAIAC9IgNCIIinIgRB%2F%2F%2F%2F%2FwdxIgVB%2BtS9gARLDQAgBEH%2F%2Fz9xQfvDJEYNAQJAIAVB%2FLKLgARLDQACQCADQgBTDQAgASAARAAAQFT7Ifm%2FoCIARDFjYhphtNC9oCIGOQMAIAEgACAGoUQxY2IaYbTQvaA5AwhBASEEDAULIAEgAEQAAEBU%2ByH5P6AiAEQxY2IaYbTQPaAiBjkDACABIAAgBqFEMWNiGmG00D2gOQMIQX8hBAwECwJAIANCAFMNACABIABEAABAVPshCcCgIgBEMWNiGmG04L2gIgY5AwAgASAAIAahRDFjYhphtOC9oDkDCEECIQQMBAsgASAARAAAQFT7IQlAoCIARDFjYhphtOA9oCIGOQMAIAEgACAGoUQxY2IaYbTgPaA5AwhBfiEEDAMLAkAgBUG7jPGABEsNAAJAIAVBvPvXgARLDQAgBUH8ssuABEYNAgJAIANCAFMNACABIABEAAAwf3zZEsCgIgBEypSTp5EO6b2gIgY5AwAgASAAIAahRMqUk6eRDum9oDkDCEEDIQQMBQsgASAARAAAMH982RJAoCIARMqUk6eRDuk9oCIGOQMAIAEgACAGoUTKlJOnkQ7pPaA5AwhBfSEEDAQLIAVB%2B8PkgARGDQECQCADQgBTDQAgASAARAAAQFT7IRnAoCIARDFjYhphtPC9oCIGOQMAIAEgACAGoUQxY2IaYbTwvaA5AwhBBCEEDAQLIAEgAEQAAEBU%2ByEZQKAiAEQxY2IaYbTwPaAiBjkDACABIAAgBqFEMWNiGmG08D2gOQMIQXwhBAwDCyAFQfrD5IkESw0BCyABIAAgAESDyMltMF%2FkP6JEAAAAAAAAOEOgRAAAAAAAADjDoCIGRAAAQFT7Ifm%2FoqAiByAGRDFjYhphtNA9oiIIoSIAOQMAIAVBFHYiCSAAvUI0iKdB%2Fw9xa0ERSCEFAkACQCAGmUQAAAAAAADgQWNFDQAgBqohBAwBC0GAgICAeCEECwJAIAUNACABIAcgBkQAAGAaYbTQPaIiAKEiCiAGRHNwAy6KGaM7oiAHIAqhIAChoSIIoSIAOQMAAkAgCSAAvUI0iKdB%2Fw9xa0EyTg0AIAohBwwBCyABIAogBkQAAAAuihmjO6IiAKEiByAGRMFJICWag3s5oiAKIAehIAChoSIIoSIAOQMACyABIAcgAKEgCKE5AwgMAQsCQCAFQYCAwP8HSQ0AIAEgACAAoSIAOQMAIAEgADkDCEEAIQQMAQsCQAJAIANC%2F%2F%2F%2F%2F%2F%2F%2F%2FweDQoCAgICAgICwwQCEvyIAmUQAAAAAAADgQWNFDQAgAKohBAwBC0GAgICAeCEECyACIAS3IgY5AxACQAJAIAAgBqFEAAAAAAAAcEGiIgCZRAAAAAAAAOBBY0UNACAAqiEEDAELQYCAgIB4IQQLIAIgBLciBjkDGCACIAAgBqFEAAAAAAAAcEGiIgA5AyACQAJAIABEAAAAAAAAAABhDQBBAiEJDAELIAJBEGpBCHIhBEECIQkDQCAJQX9qIQkgBCsDACEAIARBeGohBCAARAAAAAAAAAAAYQ0ACwsgAkEQaiACIAVBFHZB6ndqIAlBAWpBARDrgYCAACEEIAIrAwAhAAJAIANCf1UNACABIACaOQMAIAEgAisDCJo5AwhBACAEayEEDAELIAEgADkDACABIAIrAwg5AwgLIAJBMGokgICAgAAgBAv4AQICfwF8I4CAgIAAQRBrIgEkgICAgAACQAJAIAC9QiCIp0H%2F%2F%2F%2F%2FB3EiAkH7w6T%2FA0sNAEQAAAAAAADwPyEDIAJBnsGa8gNJDQEgAEQAAAAAAAAAABDngYCAACEDDAELAkAgAkGAgMD%2FB0kNACAAIAChIQMMAQsCQAJAAkACQCAAIAEQ6IGAgABBA3EOAwABAgMLIAErAwAgASsDCBDngYCAACEDDAMLIAErAwAgASsDCEEBEO2BgIAAmiEDDAILIAErAwAgASsDCBDngYCAAJohAwwBCyABKwMAIAErAwhBARDtgYCAACEDCyABQRBqJICAgIAAIAML7QEBAn8jgICAgABBEGsiASSAgICAAAJAAkAgAL1CIIinQf%2F%2F%2F%2F8HcSICQfvDpP8DSw0AIAJBgIDA8gNJDQEgAEQAAAAAAAAAAEEAEO2BgIAAIQAMAQsCQCACQYCAwP8HSQ0AIAAgAKEhAAwBCwJAAkACQAJAIAAgARDogYCAAEEDcQ4DAAECAwsgASsDACABKwMIQQEQ7YGAgAAhAAwDCyABKwMAIAErAwgQ54GAgAAhAAwCCyABKwMAIAErAwhBARDtgYCAAJohAAwBCyABKwMAIAErAwgQ54GAgACaIQALIAFBEGokgICAgAAgAAvFIQQKfwJ8En8EfCOAgICAAEGwBGsiBSSAgICAAEEAIQYgAkF9akEYbSIHQQAgB0EAShsiCEFobCACaiEJAkAgBEECdEGwm4CAAGooAgAiCiADQX9qIgtqIgJBAEgNACAIIAtrIQwgCiADaiIHQQFxIQ0CQCACRQ0AIAdBfnEhDiAIIANrQQJ0QcibgIAAaiEHIAVBwAJqIQJBACEGA0BEAAAAAAAAAAAhD0QAAAAAAAAAACEQAkAgDCAGaiIRQQBIDQAgB0F8aigCALchEAsgAiAQOQMAAkAgEUF%2FSA0AIAcoAgC3IQ8LIAJBCGogDzkDACACQRBqIQIgB0EIaiEHIA4gBkECaiIGRw0ACyAMIAZqIQwLIA1FDQACQAJAIAxBAE4NAEQAAAAAAAAAACEQDAELIAxBAnRBwJuAgABqKAIAtyEQCyAFQcACaiAGQQN0aiAQOQMACyAJQWhqIRJBACECIApBACAKQQBKGyENIANBfnEhESADQQFxIRMgA0EDdCAFQcACampBcGohDgNAIAIhDAJAAkAgA0EBTg0ARAAAAAAAAAAAIRAMAQtBACEHRAAAAAAAAAAAIRACQCALRQ0AIA4hAiAAIQYDQCAGQQhqKwMAIAIrAwCiIAYrAwAgAkEIaisDAKIgEKCgIRAgAkFwaiECIAZBEGohBiARIAdBAmoiB0cNAAsLIBNFDQAgACAHQQN0aisDACAFQcACaiAMIAtqIAdrQQN0aisDAKIgEKAhEAsgBSAMQQN0aiAQOQMAIA5BCGohDiAMQQFqIQIgDCANRw0ACyADQX5xIREgA0EBcSEUIApBf3MhFUEvIAlrIRZBMCAJayEXIApBAnQgBUHgA2pqQXxqIRggBUHAAmpBeGohGSAFQeADakF8aiEaIAVB4ANqQXBqIRsgBUFwaiEcIAlBZ2ohHSAKIQwCQANAIAUgDEEDdCICaisDACEQAkAgDEEBSCITDQAgDEEBcSEeQQAhBwJAAkAgDEEBRw0AIAwhAgwBCyAMQX5xIQ0gHCACaiECQQAhByAFQeADaiEGA0ACQAJAIBBEAAAAAAAAcD6iIg%2BZRAAAAAAAAOBBY0UNACAPqiEODAELQYCAgIB4IQ4LAkACQCAOtyIPRAAAAAAAAHDBoiAQoCIQmUQAAAAAAADgQWNFDQAgEKohDgwBC0GAgICAeCEOCyAGIA42AgACQAJAIAJBCGorAwAgD6AiEEQAAAAAAABwPqIiD5lEAAAAAAAA4EFjRQ0AIA%2BqIQ4MAQtBgICAgHghDgsCQAJAIA63Ig9EAAAAAAAAcMGiIBCgIhCZRAAAAAAAAOBBY0UNACAQqiEODAELQYCAgIB4IQ4LIAZBBGogDjYCACACKwMAIA%2BgIRAgBkEIaiEGIAJBcGohAiANIAdBAmoiB0cNAAsgDCAHayECCyAeRQ0AIAdBAnQhBgJAAkAgEEQAAAAAAABwPqIiD5lEAAAAAAAA4EFjRQ0AIA%2BqIQcMAQtBgICAgHghBwsgBUHgA2ogBmohBgJAAkAgB7ciD0QAAAAAAABwwaIgEKAiEJlEAAAAAAAA4EFjRQ0AIBCqIQcMAQtBgICAgHghBwsgBiAHNgIAIAJBA3QgBWpBeGorAwAgD6AhEAsCQAJAIBAgEhDsgYCAACIQRAAAAAAAAMA%2FopxEAAAAAAAAIMCiIBCgIhCZRAAAAAAAAOBBY0UNACAQqiEfDAELQYCAgIB4IR8LIBAgH7ehIRACQAJAAkACQAJAIBJBAUgiIA0AIAxBAnQgBUHgA2pqQXxqIgIgAigCACICIAIgF3UiAiAXdGsiBjYCACAGIBZ1ISEgAiAfaiEfDAELIBINASAMQQJ0IAVB4ANqakF8aigCAEEXdSEhCyAhQQFIDQIMAQtBAiEhIBBEAAAAAAAA4D9mDQBBACEhDAELAkACQCATRQ0AQQAhBgwBCyAMQQFxISJBACENQQAhBgJAIAxBAUYNACAMQX5xIR5BACENIAVB4ANqIQJBACEGA0AgAigCACEHQf%2F%2F%2FwchDgJAAkAgBg0AQYCAgAghDiAHDQBBASEODAELIAIgDiAHazYCAEEAIQ4LIAJBBGoiEygCACEHQf%2F%2F%2FwchBgJAAkAgDkUNAEGAgIAIIQYgBw0AQQAhBgwBCyATIAYgB2s2AgBBASEGCyACQQhqIQIgHiANQQJqIg1HDQALCyAiRQ0AIAVB4ANqIA1BAnRqIg4oAgAhAkH%2F%2F%2F8HIQcCQCAGDQBBgICACCEHIAINAEEAIQYMAQsgDiAHIAJrNgIAQQEhBgsCQCAgDQBB%2F%2F%2F%2FAyECAkACQCAdDgIBAAILQf%2F%2F%2FwEhAgsgDEECdCAFQeADampBfGoiByAHKAIAIAJxNgIACyAfQQFqIR8gIUECRw0ARAAAAAAAAPA%2FIBChIRBBAiEhIAZFDQAgEEQAAAAAAADwPyASEOyBgIAAoSEQCwJAIBBEAAAAAAAAAABiDQACQCAMIApMDQAgDCAKayICQQNxIQdBACEGIAwhDgJAIAwgFWpBA0kNACACQXxxIQ0gGyAMQQJ0aiECQQAhBiAMIQ4DQCACKAIAIAJBBGooAgAgAkEIaigCACACQQxqKAIAIAZycnJyIQYgAkFwaiECIA5BfGohDiANQXxqIg0NAAsLAkAgB0UNACAaIA5BAnRqIQIDQCACKAIAIAZyIQYgAkF8aiECIAdBf2oiBw0ACwsgBkUNACAFQeADaiAMQQJ0akF8aiECIBIhCQNAIAxBf2ohDCAJQWhqIQkgAigCACEGIAJBfGohAiAGRQ0ADAQLCyAYIQIgDCEOA0AgDkEBaiEOIAIoAgAhBiACQXxqIQIgBkUNAAsgGSADIAxqQQN0aiENA0AgBUHAAmogDCADaiITQQN0aiAMQQFqIgwgCGpBAnRBwJuAgABqKAIAtzkDAAJAAkAgA0EBTg0ARAAAAAAAAAAAIRAMAQtBACEHRAAAAAAAAAAAIRACQCALRQ0AIA0hAiAAIQYDQCAGQQhqKwMAIAIrAwCiIAYrAwAgAkEIaisDAKIgEKCgIRAgAkFwaiECIAZBEGohBiARIAdBAmoiB0cNAAsLIBRFDQAgACAHQQN0aisDACAFQcACaiATIAdrQQN0aisDAKIgEKAhEAsgBSAMQQN0aiAQOQMAIA1BCGohDSAMIA5IDQALIA4hDAwBCwsCQAJAIBBBGCAJaxDsgYCAACIQRAAAAAAAAHBBZkUNACAMQQJ0IQYCQAJAIBBEAAAAAAAAcD6iIg%2BZRAAAAAAAAOBBY0UNACAPqiECDAELQYCAgIB4IQILIAVB4ANqIAZqIQYCQAJAIAK3RAAAAAAAAHDBoiAQoCIQmUQAAAAAAADgQWNFDQAgEKohBwwBC0GAgICAeCEHCyAGIAc2AgAgDEEBaiEMDAELAkACQCAQmUQAAAAAAADgQWNFDQAgEKohAgwBC0GAgICAeCECCyASIQkLIAVB4ANqIAxBAnRqIAI2AgALAkAgDEEASA0ARAAAAAAAAPA%2FIAkQ7IGAgAAhEAJAAkAgDEEBcUUNACAMIQIMAQsgBSAMQQN0aiAQIAVB4ANqIAxBAnRqKAIAt6I5AwAgDEF%2FaiECIBBEAAAAAAAAcD6iIRALAkAgDEUNACACQQFqIQcgBUHgA2ogAkF%2FaiIGQQJ0aiECIAUgBkEDdGohBgNAIAYgEEQAAAAAAABwPqIiDyACKAIAt6I5AwAgBkEIaiAQIAJBBGooAgC3ojkDACACQXhqIQIgBkFwaiEGIA9EAAAAAAAAcD6iIRAgB0F%2BaiIHDQALCyAMQQBIDQAgBSAMQQN0aiERIAwhAgNAIAwgAiINayEORAAAAAAAAAAAIRBBACECQQAhBgJAA0AgAkGQsYCAAGorAwAgESACaisDAKIgEKAhECAGIApODQEgAkEIaiECIAYgDkkhByAGQQFqIQYgBw0ACwsgBUGgAWogDkEDdGogEDkDACARQXhqIREgDUF%2FaiECIA1BAEoNAAsLAkACQAJAAkACQAJAAkAgBA4EAQICAAYLRAAAAAAAAAAAISMgDEEBSA0EIAxBf2ohESAFQaABaiAMQQN0aiICKwMAIQ8CQAJAIAxBAXENACAPIRAgDCECDAELIAVBoAFqIBFBA3RqIgYgBisDACIkIA%2BgIhA5AwAgAiAPICQgEKGgOQMAIBEhAgsCQCARRQ0AIAJBAWohBiACQQN0IAVBoAFqakFwaiECA0AgAiACKwMAIiUgAkEIaiIHKwMAIiYgEKAiD6AiJDkDACACQRBqIBAgJiAPoaA5AwAgByAPICUgJKGgOQMAIAJBcGohAiAkIRAgBkF%2BaiIGQQFLDQALCyAMQQJIDQQgDEEBaiEGIAVBoAFqIBFBA3RqIQIgBUGgAWogDEEDdGorAwAhEANAIAIgAisDACIkIBCgIg85AwAgAkEIaiAQICQgD6GgOQMAIAJBeGohAiAPIRAgBkF%2FaiIGQQJLDQALIAxBAkgNBCAMQX5qIQcgEUEDcSIGDQJEAAAAAAAAAAAhIwwDCwJAAkAgDEEATg0ARAAAAAAAAAAAIRAMAQsCQAJAIAxBAWpBA3EiBw0ARAAAAAAAAAAAIRAgDCEGDAELIAVBoAFqIAxBA3RqIQJEAAAAAAAAAAAhECAMIQYDQCAGQX9qIQYgECACKwMAoCEQIAJBeGohAiAHQX9qIgcNAAsLIAxBA0kNACAGQQFqIQcgBkEDdCAFQaABampBaGohAgNAIBAgAkEYaisDAKAgAkEQaisDAKAgAkEIaisDAKAgAisDAKAhECACQWBqIQIgB0F8aiIHDQALCyABIBCaIBAgIRs5AwAMBAsCQAJAIAxBAE4NAEQAAAAAAAAAACEQDAELAkACQCAMQQFqQQNxIgcNAEQAAAAAAAAAACEQIAwhBgwBCyAFQaABaiAMQQN0aiECRAAAAAAAAAAAIRAgDCEGA0AgBkF%2FaiEGIBAgAisDAKAhECACQXhqIQIgB0F%2FaiIHDQALCyAMQQNJDQAgBkEBaiEHIAZBA3QgBUGgAWpqQWhqIQIDQCAQIAJBGGorAwCgIAJBEGorAwCgIAJBCGorAwCgIAIrAwCgIRAgAkFgaiECIAdBfGoiBw0ACwsgASAQmiAQICEbOQMAIAUrA6ABIBChIRBBASECAkAgDEEBSA0AIAxBA3EhBgJAIAxBf2pBA0kNACAMQXxxIREgBUGgAWpBIGohAkEAIQcDQCAQIAJBaGorAwCgIAJBcGorAwCgIAJBeGorAwCgIAIrAwCgIRAgAkEgaiECIBEgB0EEaiIHRw0ACyAHQQFqIQILIAZFDQAgBUGgAWogAkEDdGohAgNAIBAgAisDAKAhECACQQhqIQIgBkF%2FaiIGDQALCyABIBCaIBAgIRs5AwgMAwsgBUGgAWogDEEDdGohAkQAAAAAAAAAACEjA0AgDEF%2FaiEMICMgAisDAKAhIyACQXhqIQIgBkF%2FaiIGDQALCyAHQQNJDQAgDEEEaiEGIAxBA3QgBUGgAWpqQWhqIQIDQCAjIAJBGGorAwCgIAJBEGorAwCgIAJBCGorAwCgIAIrAwCgISMgAkFgaiECIAZBfGoiBkEFSg0ACwsgBSsDoAEhEAJAICENACABIBA5AwAgASAjOQMQIAEgBSsDqAE5AwgMAQsgASAQmjkDACABICOaOQMQIAEgBSsDqAGaOQMICyAFQbAEaiSAgICAACAfQQdxC64BAAJAAkAgAUGACEgNACAARAAAAAAAAOB%2FoiEAAkAgAUH%2FD08NACABQYF4aiEBDAILIABEAAAAAAAA4H%2BiIQAgAUH9FyABQf0XSRtBgnBqIQEMAQsgAUGBeEoNACAARAAAAAAAAGADoiEAAkAgAUG4cE0NACABQckHaiEBDAELIABEAAAAAAAAYAOiIQAgAUHwaCABQfBoSxtBkg9qIQELIAAgAUH%2FB2qtQjSGv6ILmgEBA3wgACAAoiIDIAMgA6KiIANEfNXPWjrZ5T2iROucK4rm5Vq%2BoKIgAyADRH3%2BsVfjHcc%2BokTVYcEZoAEqv6CiRKb4EBEREYE%2FoKAhBCADIACiIQUCQCACDQAgBSADIASiRElVVVVVVcW%2FoKIgAKAPCyAAIAMgAUQAAAAAAADgP6IgBCAFoqGiIAGhIAVESVVVVVVVxT%2BioKELAgALDgAQ7oGAgAAQ0oGAgAALCwAgACABEAQQ7wELCgAgABCkARDvAQsJACAAEAUQ7wELCQAgABAGEO8BCw0AIAAgASACEAcQ7wELCwAgACABEAgQ7wELCQAgABAJEO8BCwkAIAAQChDvAQsNACAAIAEgAhALEO8BCwsAIAAgARAMEO8BCw8AIAAgASACIAMQDRDvAQsNACAAIAEgAhAOEO8BCwkAIAAQDxDvAQsJACAAEBAQ7wELCQAgABAREO8BCw0AIAAgASACEBIQ7wELCwAgACABEBMQ7wELDwAgACABIAIgAxAUEO8BCw0AIAAgASACEBUQ7wELCwAgACABEBYQ7wELDQAgACABIAIQFxDvAQsLACAAIAEQGBDvAQsLACAAIAEQGRDvAQsNACAAIAEgAhAaEO8BCwsAIAAgARAbEO8BCwkAIAAQHBDvAQsJACAAEB0Q7wELCQAgABAeEO8BCwkAIAAQHxDvAQsNACAAIAEgAhAgEO8BCwsAIAAgARAhEO8BCwkAIAAQIhDvAQsJACAAECMQ7wELCQAgABAkEO8BCwkAIAAQJRDvAQsJACAAECYQ7wELCQAgABAnEO8BCw8AIAAgASACIAMQKBDvAQsJACAAECkQ7wELCQAgABAqEO8BCxEAIAAgASACIAMgBBArEO8BCwsAIAAgARAsEO8BCwkAIAAQLRDvAQsJACAAEC4Q7wELEQAgACABIAIgAyAEEC8Q7wELDQAgACABIAIQMBDvAQsLACAAIAEQMRDvAQsTACAAIAEgAiADIAQgBRAyEO8BCw8AIAAgASACIAMQMxDvAQsNACAAIAEgAhA0EO8BCwkAIAAQNRDvAQsJACAAEDYQ7wELCQAgABA3EO8BCxEAIAAgASACIAMgBBA4EO8BCw0AIAAgASACEDkQ7wELCwAgACABEDoQ7wELEQAgACABIAIgAyAEEDsQ7wELDQAgACABIAIQPBDvAQsLACAAIAEQPRDvAQsRACAAIAEgAiADIAQQPhDvAQsNACAAIAEgAhA%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ByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIHVucmVhY2hhYmxlAEFkZHJlc3MgaW4gdXNlAEJyb2tlbiBwaXBlAEkvTyBlcnJvcgBObyBzdWNoIGRldmljZSBvciBhZGRyZXNzAE5vIHN1Y2ggZGV2aWNlAE5vdCBhIGRpcmVjdG9yeQBJcyBhIGRpcmVjdG9yeQBUZXh0IGZpbGUgYnVzeQBFeGVjIGZvcm1hdCBlcnJvcgBJbnZhbGlkIGFyZ3VtZW50AEFyZ3VtZW50IGxpc3QgdG9vIGxvbmcAU3ltYm9saWMgbGluayBsb29wAEZpbGVuYW1lIHRvbyBsb25nAFRvbyBtYW55IG9wZW4gZmlsZXMgaW4gc3lzdGVtAE5vIGZpbGUgZGVzY3JpcHRvcnMgYXZhaWxhYmxlAEJhZCBmaWxlIGRlc2NyaXB0b3IATm8gY2hpbGQgcHJvY2VzcwBCYWQgYWRkcmVzcwBGaWxlIHRvbyBsYXJnZQBUb28gbWFueSBsaW5rcwBObyBsb2NrcyBhdmFpbGFibGUAUmVzb3VyY2UgZGVhZGxvY2sgd291bGQgb2NjdXIAU3RhdGUgbm90IHJlY292ZXJhYmxlAFByZXZpb3VzIG93bmVyIGRpZWQAT3BlcmF0aW9uIGNhbmNlbGVkAEZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZABObyBtZXNzYWdlIG9mIGRlc2lyZWQgdHlwZQBJZGVudGlmaWVyIHJlbW92ZWQATGluayBoYXMgYmVlbiBzZXZlcmVkAFByb3RvY29sIGVycm9yAEJhZCBtZXNzYWdlAE5vdCBhIHNvY2tldABEZXN0aW5hdGlvbiBhZGRyZXNzIHJlcXVpcmVkAE1lc3NhZ2UgdG9vIGxhcmdlAFByb3RvY29sIHdyb25nIHR5cGUgZm9yIHNvY2tldABQcm90b2NvbCBub3QgYXZhaWxhYmxlAFByb3RvY29sIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABPcGVyYXRpb24gYWxyZWFkeSBpbiBwcm9ncmVzcwBPcGVyYXRpb24gaW4gcHJvZ3Jlc3MAU3RhbGUgZmlsZSBoYW5kbGUAUXVvdGEgZXhjZWVkZWQATXVsdGlob3AgYXR0ZW1wdGVkAENhcGFiaWxpdGllcyBpbnN1ZmZpY2llbnQAAAAAAAAAdQJOANYB4gS5BBgBjgXtAhYE8gCXAwEDOAWvAYIBTwMvBB4A1AWiABIDHgPCAd4DCACsBQABZALxAWUFNAKMAs8CLQNMBOMFnwL4BBwFCAWxAksFFQJ4AFICPAPxA%2BQAwwN9BMwAqgN5BSQCbgFtAyIEqwREAPsBrgCDA2AA5QEHBJQEXgQrAFgBOQGSAMIFmwFDAkYB9gUAAAAAAAAZAAoAGRkZAAAAAAUAAAAAAAAJAAAAAAsAAAAAAAAAABkAEQoZGRkDCgcAARsJCxgAAAkGCwAACwAGGQAAABkZGQAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAZAAoNGRkZAA0AAAIACQ4AAAAJAA4AAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAEwAAAAATAAAAAAkMAAAAAAAMAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAA8AAAAEDwAAAAAJEAAAAAAAEAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAAAAAAAARAAAAABEAAAAACRIAAAAAABIAABIAABoAAAAaGhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAABoaGgAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAABcAAAAAFwAAAAAJFAAAAAAAFAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAAAAAAAAAAAAVAAAAABUAAAAACRYAAAAAABYAABYAADAxMjM0NTY3ODlBQkNERUYDAAAABAAAAAQAAAAGAAAAg%2FmiAERObgD8KRUA0VcnAN009QBi28AAPJmVAEGQQwBjUf4Au96rALdhxQA6biQA0k1CAEkG4AAJ6i4AHJLRAOsd%2FgApsRwA6D6nAPU1ggBEuy4AnOmEALQmcABBfl8A1pE5AFODOQCc9DkAi1%2BEACj5vQD4HzsA3v%2BXAA%2BYBQARL%2B8AClqLAG0fbQDPfjYACcsnAEZPtwCeZj8ALepfALondQDl68cAPXvxAPc5BwCSUooA%2B2vqAB%2BxXwAIXY0AMANWAHv8RgDwq2sAILzPADb0mgDjqR0AXmGRAAgb5gCFmWUAoBRfAI1AaACA2P8AJ3NNAAYGMQDKVhUAyahzAHviYABrjMAAGcRHAM1nwwAJ6NwAWYMqAIt2xACmHJYARK%2FdABlX0QClPgUABQf%2FADN%2BPwDCMugAmE%2FeALt9MgAmPcMAHmvvAJ%2F4XgA1HzoAf%2FLKAPGHHQB8kCEAaiR8ANVu%2BgAwLXcAFTtDALUUxgDDGZ0ArcTCACxNQQAMAF0Ahn1GAONxLQCbxpoAM2IAALTSfAC0p5cAN1XVANc%2B9gCjEBgATXb8AGSdKgBw16sAY3z4AHqwVwAXFecAwElWADvW2QCnhDgAJCPLANaKdwBaVCMAAB%2B5APEKGwAZzt8AnzH%2FAGYeagCZV2EArPtHAH5%2F2AAiZbcAMuiJAOa%2FYADvxM0AbDYJAF0%2F1AAW3tcAWDveAN6bkgDSIigAKIboAOJYTQDGyjIACOMWAOB9ywAXwFAA8x2nABjgWwAuEzQAgxJiAINIAQD1jlsArbB%2FAB7p8gBISkMAEGfTAKrd2ACuX0IAamHOAAoopADTmbQABqbyAFx3fwCjwoMAYTyIAIpzeACvjFoAb9e9AC2mYwD0v8sAjYHvACbBZwBVykUAytk2ACio0gDCYY0AEsl3AAQmFAASRpsAxFnEAMjFRABNspEAABfzANRDrQApSeUA%2FdUQAAC%2B%2FAAelMwAcM7uABM%2B9QDs8YAAs%2BfDAMf4KACTBZQAwXE%2BAC4JswALRfMAiBKcAKsgewAutZ8AR5LCAHsyLwAMVW0AcqeQAGvnHwAxy5YAeRZKAEF54gD034kA6JSXAOLmhACZMZcAiO1rAF9fNgC7%2FQ4ASJq0AGekbABxckIAjV0yAJ8VuAC85QkAjTElAPd0OQAwBRwADQwBAEsIaAAs7lgAR6qQAHTnAgC91iQA932mAG5IcgCfFu8AjpSmALSR9gDRU1EAzwryACCYMwD1S34AsmNoAN0%2BXwBAXQMAhYl%2FAFVSKQA3ZMAAbdgQADJIMgBbTHUATnHUAEVUbgALCcEAKvVpABRm1QAnB50AXQRQALQ72wDqdsUAh%2FkXAElrfQAdJ7oAlmkpAMbMrACtFFQAkOJqAIjZiQAsclAABKS%2BAHcHlADzMHAAAPwnAOpxqABmwkkAZOA9AJfdgwCjP5cAQ5T9AA2GjAAxQd4AkjmdAN1wjAAXt%2BcACN87ABU3KwBcgKAAWoCTABARkgAP6NgAbICvANv%2FSwA4kA8AWRh2AGKlFQBhy7sAx4m5ABBAvQDS8gQASXUnAOu29gDbIrsAChSqAIkmLwBkg3YACTszAA6UGgBROqoAHaPCAK%2FtrgBcJhIAbcJNAC16nADAVpcAAz%2BDAAnw9gArQIwAbTGZADm0BwAMIBUA2MNbAPWSxADGrUsATsqlAKc3zQDmqTYAq5KUAN1CaAAZY94AdozvAGiLUgD82zcArqGrAN8VMQAArqEADPvaAGRNZgDtBbcAKWUwAFdWvwBH%2FzoAavm5AHW%2B8wAok98Aq4AwAGaM9gAEyxUA%2BiIGANnkHQA9s6QAVxuPADbNCQBOQukAE76kADMjtQDwqhoAT2WoANLBpQALPw8AW3jNACP5dgB7iwQAiRdyAMamUwBvbuIA7%2BsAAJtKWADE2rcAqma6AHbPzwDRAh0AsfEtAIyZwQDDrXcAhkjaAPddoADGgPQArPAvAN3smgA%2FXLwA0N5tAJDHHwAq27YAoyU6AACvmgCtU5MAtlcEACkttABLgH4A2genAHaqDgB7WaEAFhIqANy3LQD65f0Aidv%2BAIm%2B%2FQDkdmwABqn8AD6AcACFbhUA%2FYf%2FACg%2BBwBhZzMAKhiGAE296gCz568Aj21uAJVnOQAxv1sAhNdIADDfFgDHLUMAJWE1AMlwzgAwy7gAv2z9AKQAogAFbOQAWt2gACFvRwBiEtIAuVyEAHBhSQBrVuAAmVIBAFBVNwAe1bcAM%2FHEABNuXwBdMOQAhS6pAB2ywwChMjYACLekAOqx1AAW9yEAj2nkACf%2FdwAMA4AAjUAtAE%2FNoAAgpZkAs6LTAC9dCgC0%2BUIAEdrLAH2%2B0ACb28EAqxe9AMqigQAIalwALlUXACcAVQB%2FFPAA4QeGABQLZACWQY0Ah77eANr9KgBrJbYAe4k0AAXz%2FgC5v54AaGpPAEoqqABPxFoALfi8ANdamAD0x5UADU2NACA6pgCkV18AFD%2BxAIA4lQDMIAEAcd2GAMnetgC%2FYPUATWURAAEHawCMsKwAssDQAFFVSAAe%2Bw4AlXLDAKMGOwDAQDUABtx7AOBFzABOKfoA1srIAOjzQQB8ZN4Am2TYANm%2BMQCkl8MAd1jUAGnjxQDw2hMAujo8AEYYRgBVdV8A0r31AG6SxgCsLl0ADkTtABw%2BQgBhxIcAKf3pAOfW8wAifMoAb5E1AAjgxQD%2F140AbmriALD9xgCTCMEAfF10AGutsgDNbp0APnJ7AMYRagD3z6kAKXPfALXJugC3AFEA4rINAHS6JADlfWAAdNiKAA0VLACBGAwAfmaUAAEpFgCfenYA%2Ff2%2BAFZF7wDZfjYA7NkTAIu6uQDEl%2FwAMagnAPFuwwCUxTYA2KhWALSotQDPzA4AEoktAG9XNAAsVokAmc7jANYguQBrXqoAPiqcABFfzAD9C0oA4fT7AI47bQDihiwA6dSEAPy0qQDv7tEALjXJAC85YQA4IUQAG9nIAIH8CgD7SmoALxzYAFO0hABOmYwAVCLMACpV3ADAxtYACxmWABpwuABplWQAJlpgAD9S7gB%2FEQ8A9LURAPzL9QA0vC0ANLzuAOhdzADdXmAAZ46bAJIz7wDJF7gAYVibAOFXvABRg8YA2D4QAN1xSAAtHN0ArxihACEsRgBZ89cA2XqYAJ5UwABPhvoAVgb8AOV5rgCJIjYAOK0iAGeT3ABV6KoAgiY4AMrnmwBRDaQAmTOxAKnXDgBpBUgAZbLwAH%2BIpwCITJcA%2BdE2ACGSswB7gkoAmM8hAECf3ADcR1UA4XQ6AGfrQgD%2Bnd8AXtRfAHtnpAC6rHoAVfaiACuIIwBBulUAWW4IACEqhgA5R4MAiePmAOWe1ABJ%2B0AA%2F1bpABwPygDFWYoAlPorANPBxQAPxc8A21quAEfFhgCFQ2IAIYY7ACx5lAAQYYcAKkx7AIAsGgBDvxIAiCaQAHg8iQCoxOQA5dt7AMQ6wgAm9OoA92eKAA2SvwBloysAPZOxAL18CwCkUdwAJ91jAGnh3QCalBkAqCmVAGjOKAAJ7bQARJ8gAE6YygBwgmMAfnwjAA%2B5MgCn9Y4AFFbnACHxCAC1nSoAb35NAKUZUQC1%2BasAgt%2FWAJbdYQAWNgIAxDqfAIOioQBy7W0AOY16AIK4qQBrMlwARidbAAA07QDSAHcA%2FPRVAAFZTQDgcYAAAAAAAAAAAAAAAABA%2ByH5PwAAAAAtRHQ%2BAAAAgJhG%2BDwAAABgUcx4OwAAAICDG%2FA5AAAAQCAlejgAAACAIoLjNgAAAAAd82k1AXwCAAAAAQAAAAUAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAUAAAAUHAAAAAAAAAAAAAAAAAAAAgAAAAAAAAD%2F%2F%2F%2F%2FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYGAAA\";\n\n\nlet $c5a61c35cbd537f5$export$130be424786e852f = null;\nfunction $c5a61c35cbd537f5$export$2cd8252107eb640b() {\n    return new Promise(async (resolve, reject)=>{\n        (0, $X9A9e$loadFromDataUri)((0, (/*@__PURE__*/$parcel$interopDefault($3b9d45a30e932e6f$exports))), {}).then((asylModule)=>{\n            $c5a61c35cbd537f5$export$130be424786e852f = asylModule;\n            (0, $485e585505f5c80a$export$2e2bcd8739ae039).bind($c5a61c35cbd537f5$export$130be424786e852f);\n            (0, $baf50d9434a9dd81$export$2e2bcd8739ae039).bind($c5a61c35cbd537f5$export$130be424786e852f);\n            (0, $8d9a8566653c0099$export$2e2bcd8739ae039).bind($c5a61c35cbd537f5$export$130be424786e852f);\n            (0, $f4e62a7eed23d321$export$2e2bcd8739ae039).bind($c5a61c35cbd537f5$export$130be424786e852f);\n            (0, $3514beae8516eb55$export$2e2bcd8739ae039).bind($c5a61c35cbd537f5$export$130be424786e852f);\n            resolve();\n        }).catch(reject);\n    });\n}\n\n\nexport {$c5a61c35cbd537f5$export$130be424786e852f as module, $c5a61c35cbd537f5$export$2cd8252107eb640b as init, $485e585505f5c80a$export$2e2bcd8739ae039 as Vec2, $baf50d9434a9dd81$export$2e2bcd8739ae039 as Vec4, $8d9a8566653c0099$export$2e2bcd8739ae039 as Rect, $f4e62a7eed23d321$export$2e2bcd8739ae039 as Mat3, $3514beae8516eb55$export$2e2bcd8739ae039 as Mat4};\n//# sourceMappingURL=froxel-math.m.js.map\n","\nimport { loadFromDataUri } from 'asyl';\n\nimport Vec2 from './vec2';\nexport { default as Vec2 } from './vec2';\nimport Vec4 from './vec4';\nexport { default as Vec4 } from './vec4';\n\nimport Rect from './rect';\nexport { default as Rect } from './rect';\n\nimport Mat3 from './mat3';\nexport { default as Mat3 } from './mat3';\nimport Mat4 from './mat4';\nexport { default as Mat4 } from './mat4';\n\nexport let module = null;\n\n//@ts-ignore\nimport froxel_math from 'data-url:./froxel-math.wasm';\n\n/**\n * Initializes the WebAssembly module for the froxel-math package.\n */\nexport function init () : Promise<void>\n{\n\treturn new Promise<void> (async (resolve, reject) =>\n\t{\n\t\tloadFromDataUri(froxel_math, { })\n\t\t.then(asylModule =>\n\t\t{\n\t\t\tmodule = asylModule;\n\n\t\t\tVec2.bind(module);\n\t\t\tVec4.bind(module);\n\n\t\t\tRect.bind(module);\n\n\t\t\tMat3.bind(module);\n\t\t\tMat4.bind(module);\n\n\t\t\tresolve();\n\t\t})\n\t\t.catch(reject);\n\t});\n}\n","\nimport { Module } from \"asyl\";\n\nlet m: Module = null;\n\n/**\n * 2D Vector.\n */\nexport default class Vec2\n{\n\t/**\n\t * Address of underlying vec2.\n\t */\n\taddr: number;\n\n\t/**\n\t * Underlying vector data.\n\t */\n\tdata: Float32Array;\n\n\t/**\n\t * Binds the specified Asyl module to the class.\n\t */\n\tstatic bind (module: Module) : void {\n\t\tm = module;\n\t}\n\n\t/**\n\t * Allocates a new vector with the specified coordinates.\n\t */\n\tstatic alloc (x:number=0, y:number=0) : Vec2 {\n\t\treturn new Vec2(m.vec2_alloc2f(x, y));\n\t}\n\n\t/**\n\t * Constructs the vector with the specified coordinates.\n\t */\n\tprivate constructor (addr: number) {\n\t\tthis.addr = addr;\n\t\tthis.data = m.mapFloat32Array(addr, 2);\n\t}\n\n\t/**\n\t * Destroys the instance.\n\t */\n\tdtor() {\n\t\tm.vec2_dtor(this.addr);\n\t}\n\n\t/**\n\t * Returns a new vector with the same coordinates.\n\t */\n\tclone() : Vec2 {\n\t\treturn new Vec2(m.vec2_clone(this.addr));\n\t}\n\n\t/**\n\t * Sets the coordinates of the vector from a Vec2 object.\n\t */\n\tset (v: Vec2) : Vec2;\n\t/**\n\t * Sets the coordinates of the vector.\n\t */\n\tset (x: number, y: number) : Vec2;\n\n\tset (x: Vec2|number, y: number = null) : Vec2\n\t{\n\t\tif (y === null)\n\t\t\tm.vec2_set1v(this.addr, (x as Vec2).addr);\n\t\telse\n\t\t\tm.vec2_set2f(this.addr, x, y);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the X-coordinate of the vector.\n\t */\n\tsetX (x: number) : Vec2 {\n\t\tthis.data[0] = x;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the Y-coordinate of the vector.\n\t */\n\tsetY (y: number) : Vec2 {\n\t\tthis.data[1] = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the value of the X-coordinate.\n\t */\n\tx() : number {\n\t\treturn this.data[0];\n\t}\n\n\t/**\n\t * Returns the value of the Y-coordinate.\n\t */\n\ty() : number {\n\t\treturn this.data[1];\n\t}\n\n\t/**\n\t * Sets the coordinates of the vector to zero.\n\t */\n\tzero() : Vec2 {\n\t\tm.vec2_zero(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the vector coordinates are zero.\n\t */\n\tiszero() : boolean {\n\t\treturn m.vec2_iszero(this.addr);\n\t}\n\n\t/**\n\t * Returns true if the coordinates of the vector have the same values as the given Vec2.\n\t */\n\tequals (v: Vec2) : boolean;\n\t/**\n\t * Returns true if the coordinates of the vector have the same values as the given ones.\n\t */\n\tequals (x: number, y: number) : boolean;\n\n\tequals (x: Vec2|number, y: number=null) : boolean\n\t{\n\t\tif (y === null)\n\t\t\treturn m.vec2_equals1v(this.addr, (x as Vec2).addr);\n\n\t\treturn m.vec2_equals2f(this.addr, x, y);\n\t}\n\n\t/**\n\t * Returns true if the difference between the coordinates is less than the specified epsilon.\n\t */\n\talmost (v: Vec2, epsilon: number) : boolean;\n\t/**\n\t * Returns true if the difference between the coordinates is less than the specified epsilon.\n\t */\n\talmost (x: number, y: number, epsilon: number) : boolean;\n\n\talmost (x: Vec2|number, y: number=null, epsilon: number=null) : boolean\n\t{\n\t\tif (epsilon === null)\n\t\t\treturn m.vec2_almost1v(this.addr, (x as Vec2).addr, y);\n\n\t\treturn m.vec2_almost2f(this.addr, x, y, epsilon);\n\t}\n\n\t/**\n\t * Negates the vector, that is changing the sign of each component in the vector.\n\t */\n\tneg() : Vec2 {\n\t\tm.vec2_neg(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the vector by changing each component to its reciprocal.\n\t */\n\tinv() : Vec2 {\n\t\tm.vec2_inv(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Changes the components of the vector to their absolute value.\n\t */\n\tabs() : Vec2 {\n\t\tm.vec2_abs(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the coordinates of the given Vec2 to the vector.\n\t */\n\ttranslate (v: Vec2) : Vec2;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\ttranslate (dx: number, dy: number) : Vec2;\n\n\ttranslate (dx: Vec2|number, dy: number=null) : Vec2\n\t{\n\t\tif (dy === null)\n\t\t\tm.vec2_translate1v(this.addr, (dx as Vec2).addr);\n\t\telse\n\t\t\tm.vec2_translate2f(this.addr, dx, dy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Rotates the vector by the specified angle (in radians) using the specified (optional) origin point.\n\t */\n\trotate (angle: number, cx: number=0, cy: number=0) : Vec2\n\t{\n\t\tm.vec2_rotate3f(this.addr, angle, cx, cy);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the coordinates of the given Vec2 to the vector.\n\t */\n\tadd (v: Vec2) : Vec2;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\tadd (dx: number, dy: number) : Vec2;\n\n\tadd (dx: Vec2|number, dy: number=null)\n\t{\n\t\tif (dy === null)\n\t\t\tm.vec2_add1v(this.addr, (dx as Vec2).addr);\n\t\telse\n\t\t\tm.vec2_add2f(this.addr, dx, dy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of the given Vec2 from the vector.\n\t */\n\tsub (v: Vec2) : Vec2;\n\t/**\n\t * Subtracts the given delta values from the vector.\n\t */\n\tsub (dx: number, dy: number) : Vec2;\n\n\tsub (dx: Vec2|number, dy: number=null)\n\t{\n\t\tif (dy === null)\n\t\t\tm.vec2_sub1v(this.addr, (dx as Vec2).addr);\n\t\telse\n\t\t\tm.vec2_sub2f(this.addr, dx, dy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Scales each components of the vector by the respective component of the given one.\n\t */\n\tscale (v: Vec2) : Vec2;\n\t/**\n\t * Scales both components of the vector by the given factor.\n\t */\n\tscale (factor: number) : Vec2;\n\t/**\n\t * Scales each components of the vector by the given factors.\n\t */\n\tscale (fx: number, fy: number) : Vec2;\n\n\tscale (fx: Vec2|number, fy: number=null) : Vec2\n\t{\n\t\tif (fy === null)\n\t\t{\n\t\t\tif (fx instanceof Vec2)\n\t\t\t\tm.vec2_scale1v(this.addr, fx.addr);\n\t\t\telse\n\t\t\t\tm.vec2_scale1f(this.addr, fx);\n\t\t}\n\t\telse\n\t\t\tm.vec2_scale2f(this.addr, fx, fy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Performs `floor` on the components of the vector.\n\t */\n\tfloor() : Vec2 {\n\t\tm.vec2_floor(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Performs `ceil` on the components of the vector.\n\t */\n\tceil() : Vec2 {\n\t\tm.vec2_ceil(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the vector components to their integer parts.\n\t */\n\ttrunc() : Vec2 {\n\t\tm.vec2_trunc(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the vector components to their fractional parts.\n\t */\n\tfract() : Vec2 {\n\t\tm.vec2_fract(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the dot product of the vectors.\n\t */\n\tdot (v: Vec2) : number;\n\t/**\n\t * Returns the dot product of the vector and the given values.\n\t */\n\tdot (x: number, y: number) : number;\n\n\tdot (x: Vec2|number, y: number=null) : number\n\t{\n\t\tif (y === null)\n\t\t\treturn m.vec2_dot1v(this.addr, (x as Vec2).addr);\n\n\t\treturn m.vec2_dot2f(this.addr, x, y);\n\t}\n\n\t/**\n\t * Returns the squared magnitude of the vector.\n\t */\n\tmag2() : number {\n\t\treturn m.vec2_mag2(this.addr);\n\t}\n\n\t/**\n\t * Returns the magnitude of the vector.\n\t */\n\tmag() : number {\n\t\treturn m.vec2_mag(this.addr);\n\t}\n\n\t/**\n\t * Normalizes the vector by dividing each component by the vector magnitude to obtain a unit vector.\n\t */\n\tunit() : Vec2 {\n\t\tm.vec2_unit(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its major-axis, that is the component with the maximum absolute value.\n\t */\n\tmajor() : Vec2 {\n\t\tm.vec2_major(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its minor-axis, that is the component with the minimum absolute value.\n\t */\n\tminor() : Vec2 {\n\t\tm.vec2_minor(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its sign-vector representation.\n\t */\n\tsign() : Vec2 {\n\t\tm.vec2_sign(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the string representation of the coordinates of the vector.\n\t */\n\ttoString() : string\n\t{\n\t\treturn `(${this.x()}, ${this.y()})`;\n\t}\n};\n","\nimport { Module } from \"asyl\";\n\nlet m: Module = null;\n\n/**\n * 4D Vector.\n */\nexport default class Vec4\n{\n\t/**\n\t * Address of underlying vec4.\n\t */\n\taddr: number;\n\n\t/**\n\t * Underlying vector data.\n\t */\n\tdata: Float32Array;\n\n\t/**\n\t * Binds the specified Asyl module to the class.\n\t */\n\tstatic bind (module: Module) : void {\n\t\tm = module;\n\t}\n\n\t/**\n\t * Allocates a new vector with the specified coordinates.\n\t */\n\tstatic alloc (x:number=0, y:number=0, z:number=0, w:number=0) : Vec4 {\n\t\treturn new Vec4(m.vec4_alloc4f(x, y, z, w));\n\t}\n\n\t/**\n\t * Constructs the vector with the specified coordinates.\n\t */\n\tprivate constructor (addr: number) {\n\t\tthis.addr = addr;\n\t\tthis.data = m.mapFloat32Array(addr, 4);\n\t}\n\n\t/**\n\t * Destroys the instance.\n\t */\n\tdtor() {\n\t\tm.vec4_dtor(this.addr);\n\t}\n\n\t/**\n\t * Returns a new vector with the same coordinates.\n\t */\n\tclone() : Vec4 {\n\t\treturn new Vec4(m.vec4_clone(this.addr));\n\t}\n\n\t/**\n\t * Sets the coordinates of the vector from a Vec4 object.\n\t */\n\tset (v: Vec4) : Vec4;\n\t/**\n\t * Sets the coordinates of the vector.\n\t */\n\tset (x: number, y: number, z: number, w: number) : Vec4;\n\n\tset (x: Vec4|number, y: number = null, z: number = null, w: number = null) : Vec4\n\t{\n\t\tif (y === null) {\n\t\t\tm.vec4_set1v(this.addr, (x as Vec4).addr);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.vec4_set4f(this.addr, x, y, z, w);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the X-coordinate of the vector.\n\t */\n\tsetX (x: number) : Vec4 {\n\t\tthis.data[0] = x;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the Y-coordinate of the vector.\n\t */\n\tsetY (y: number) : Vec4 {\n\t\tthis.data[1] = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the Z-coordinate of the vector.\n\t */\n\tsetZ (z: number) : Vec4 {\n\t\tthis.data[2] = z;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the W-coordinate of the vector.\n\t */\n\tsetW (w: number) : Vec4 {\n\t\tthis.data[3] = w;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the value of the X-coordinate.\n\t */\n\tx() : number {\n\t\treturn this.data[0];\n\t}\n\n\t/**\n\t * Returns the value of the Y-coordinate.\n\t */\n\ty() : number {\n\t\treturn this.data[1];\n\t}\n\n\t/**\n\t * Returns the value of the Z-coordinate.\n\t */\n\tz() : number {\n\t\treturn this.data[2];\n\t}\n\n\t/**\n\t * Returns the value of the W-coordinate.\n\t */\n\tw() : number {\n\t\treturn this.data[3];\n\t}\n\n\t/**\n\t * Sets the coordinates of the vector to zero.\n\t */\n\tzero() : Vec4 {\n\t\tm.vec4_zero(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the vector coordinates are zero.\n\t */\n\tiszero() : boolean {\n\t\treturn m.vec4_iszero(this.addr);\n\t}\n\n\t/**\n\t * Returns true if the coordinates of the vector have the same values as the given Vec4.\n\t */\n\tequals (v: Vec4) : boolean;\n\t/**\n\t * Returns true if the coordinates of the vector have the same values as the given ones.\n\t */\n\tequals (x: number, y: number) : boolean;\n\t/**\n\t * Returns true if the coordinates of the vector have the same values as the given ones.\n\t */\n\tequals (x: number, y: number, z:number, w:number) : boolean;\n\n\tequals (x: Vec4|number, y: number=null, z: number = null, w: number = null) : boolean\n\t{\n\t\tif (y === null)\n\t\t\treturn m.vec4_equals1v(this.addr, (x as Vec4).addr);\n\n\t\tif (z === null)\n\t\t\treturn m.vec4_equals2f(this.addr, x, y);\n\n\t\treturn m.vec4_equals4f(this.addr, x, y, z, w);\n\t}\n\n\t/**\n\t * Returns true if the difference between the coordinates is less than the specified epsilon.\n\t */\n\talmost (v: Vec4, epsilon: number) : boolean;\n\t/**\n\t * Returns true if the difference between the coordinates is less than the specified epsilon.\n\t */\n\talmost (x: number, y: number, epsilon: number) : boolean;\n\t/**\n\t * Returns true if the difference between the coordinates is less than the specified epsilon.\n\t */\n\talmost (x: number, y: number, z: number, w: number, epsilon: number) : boolean;\n\n\talmost (x: Vec4|number, y: number=null, z:number=null, w:number=null, epsilon: number=null) : boolean\n\t{\n\t\tif (z === null)\n\t\t\treturn m.vec4_almost1v(this.addr, (x as Vec4).addr, y);\n\n\t\tif (w === null)\n\t\t\treturn m.vec4_almost2f(this.addr, x, y, epsilon);\n\n\t\treturn m.vec4_almost4f(this.addr, x, y, z, w, epsilon);\n\t}\n\n\t/**\n\t * Negates the vector, that is changing the sign of each component in the vector.\n\t */\n\tneg() : Vec4 {\n\t\tm.vec4_neg(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the vector by changing each component to its reciprocal.\n\t */\n\tinv() : Vec4 {\n\t\tm.vec4_inv(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Changes the components of the vector to their absolute value.\n\t */\n\tabs() : Vec4 {\n\t\tm.vec4_abs(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the coordinates of the given Vec4 to the vector.\n\t */\n\ttranslate (v: Vec4) : Vec4;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\ttranslate (dx: number, dy: number) : Vec4;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\ttranslate (dx: number, dy: number, dz: number, dw: number) : Vec4;\n\n\ttranslate (dx: Vec4|number, dy: number=null, dz: number=null, dw: number=null) : Vec4\n\t{\n\t\tif (dy === null) {\n\t\t\tm.vec4_translate1v(this.addr, (dx as Vec4).addr);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (dz === null) {\n\t\t\tm.vec4_translate2f(this.addr, dx, dy);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.vec4_translate4f(this.addr, dx, dy, dz, dw);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the coordinates of the given Vec4 to the vector.\n\t */\n\tadd (v: Vec4) : Vec4;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\tadd (dx: number, dy: number) : Vec4;\n\t/**\n\t * Adds the given delta values to the vector.\n\t */\n\tadd (dx: number, dy: number, dz: number, dw: number) : Vec4;\n\n\tadd (dx: Vec4|number, dy: number=null, dz: number=null, dw: number=null)\n\t{\n\t\tif (dy === null) {\n\t\t\tm.vec4_add1v(this.addr, (dx as Vec4).addr);\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tif (dz === null) {\n\t\t\tm.vec4_add2f(this.addr, dx, dy);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.vec4_add4f(this.addr, dx, dy, dz, dw);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Subtracts the coordinates of the given Vec4 from the vector.\n\t */\n\tsub (v: Vec4) : Vec4;\n\t/**\n\t * Subtracts the given delta values from the vector.\n\t */\n\tsub (dx: number, dy: number) : Vec4;\n\t/**\n\t * Subtracts the given delta values from the vector.\n\t */\n\tsub (dx: number, dy: number, dz: number, dw: number) : Vec4;\n\n\tsub (dx: Vec4|number, dy: number=null, dz: number=null, dw: number=null)\n\t{\n\t\tif (dy === null) {\n\t\t\tm.vec4_sub1v(this.addr, (dx as Vec4).addr);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (dz === null) {\n\t\t\tm.vec4_sub2f(this.addr, dx, dy);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.vec4_sub4f(this.addr, dx, dy, dz, dw);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Scales each components of the vector by the respective component of the given one.\n\t */\n\tscale (v: Vec4) : Vec4;\n\t/**\n\t * Scales both components of the vector by the given factor.\n\t */\n\tscale (factor: number) : Vec4;\n\t/**\n\t * Scales each components of the vector by the given factors.\n\t */\n\tscale (fx: number, fy: number) : Vec4;\n\t/**\n\t * Scales each components of the vector by the given factors.\n\t */\n\tscale (fx: number, fy: number, fz: number, fw: number) : Vec4;\n\n\tscale (fx: Vec4|number, fy: number=null, fz: number=null, fw: number=null) : Vec4\n\t{\n\t\tif (fy === null)\n\t\t{\n\t\t\tif (fx instanceof Vec4)\n\t\t\t\tm.vec4_scale1v(this.addr, fx.addr);\n\t\t\telse\n\t\t\t\tm.vec4_scale1f(this.addr, fx);\n\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tif (fz === null) {\n\t\t\tm.vec4_scale2f(this.addr, fx, fy);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.vec4_scale4f(this.addr, fx, fy, fz, fw);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Performs `floor` on the components of the vector.\n\t */\n\tfloor() : Vec4 {\n\t\tm.vec4_floor(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Performs `ceil` on the components of the vector.\n\t */\n\tceil() : Vec4 {\n\t\tm.vec4_ceil(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the vector components to their integer parts.\n\t */\n\ttrunc() : Vec4 {\n\t\tm.vec4_trunc(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the vector components to their fractional parts.\n\t */\n\tfract() : Vec4 {\n\t\tm.vec4_fract(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the dot product of the vectors.\n\t */\n\tdot (v: Vec4) : number;\n\t/**\n\t * Returns the dot product of the vector and the given values.\n\t */\n\tdot (x: number, y: number) : number;\n\t/**\n\t * Returns the dot product of the vector and the given values.\n\t */\n\tdot (x: number, y: number, z: number, w: number) : number;\n\n\tdot (x: Vec4|number, y: number=null, z: number=null, w: number=null) : number\n\t{\n\t\tif (y === null)\n\t\t\treturn m.vec4_dot1v(this.addr, (x as Vec4).addr);\n\n\t\tif (z === null)\n\t\t\treturn m.vec4_dot2f(this.addr, x, y);\n\n\t\treturn m.vec4_dot4f(this.addr, x, y, z, w);\n\t}\n\n\t/**\n\t * Returns the squared magnitude of the vector.\n\t */\n\tmag2() : number {\n\t\treturn m.vec4_mag2(this.addr);\n\t}\n\n\t/**\n\t * Returns the magnitude of the vector.\n\t */\n\tmag() : number {\n\t\treturn m.vec4_mag(this.addr);\n\t}\n\n\t/**\n\t * Normalizes the vector by dividing each component by the vector magnitude to obtain a unit vector.\n\t */\n\tunit() : Vec4 {\n\t\tm.vec4_unit(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its major-axis, that is the component with the maximum absolute value.\n\t */\n\tmajor() : Vec4 {\n\t\tm.vec4_major(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its minor-axis, that is the component with the minimum absolute value.\n\t */\n\tminor() : Vec4 {\n\t\tm.vec4_minor(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vector to its sign-vector representation.\n\t */\n\tsign() : Vec4 {\n\t\tm.vec4_sign(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the string representation of the coordinates of the vector.\n\t */\n\ttoString() : string\n\t{\n\t\treturn `(${this.x()}, ${this.y()}, ${this.z()}, ${this.w()})`;\n\t}\n};\n","\nimport { Module } from \"asyl\";\nimport Vec2 from './vec2';\n\nlet m: Module = null;\n\n/**\n * Rectangle.\n */\nexport default class Rect\n{\n\t/**\n\t * Address of underlying Rect.\n\t */\n\taddr: number;\n\n\t/**\n\t * Underlying vector data.\n\t */\n\tdata: Float32Array;\n\n\t/**\n\t * Binds the specified Asyl module to the class.\n\t */\n\tstatic bind (module: Module) : void {\n\t\tm = module;\n\t}\n\n\t/**\n\t * Allocates a new rectangle of zero size.\n\t */\n\tstatic alloc() : Rect;\n\t/**\n\t * Allocates a new rectangle with the specified size.\n\t */\n\tstatic alloc (width: number, height: number, topLeft?: boolean) : Rect;\n\t/**\n\t * Allocates a new rectangle with the specified coordinates.\n\t */\n\tstatic alloc (x1: number, y1: number, x2: number, y2: number) : Rect;\n\n\tstatic alloc (x1: number=null, y1: number=null, x2: number|boolean=false, y2: number=null) : Rect\n\t{\n\t\tif (x1 === null)\n\t\t\treturn new Rect(m.rect_alloc4f(0, 0, 0, 0));\n\n\t\tif (y2 === null)\n\t\t\treturn new Rect(m.rect_alloc2f(x1, y1, x2));\n\n\t\treturn new Rect(m.rect_alloc4f(x1, y1, x2, y2));\n\t}\n\n\t/**\n\t * Constructs the rectangle object.\n\t */\n\tprivate constructor (addr: number) {\n\t\tthis.addr = addr;\n\t\tthis.data = m.mapFloat32Array(addr, 6);\n\t}\n\n\t/**\n\t * Destroys the instance.\n\t */\n\tdtor() : void {\n\t\tm.rect_dtor(this.addr);\n\t}\n\n\t/**\n\t * Returns a clone of the rectangle.\n\t */\n\tclone() : Rect {\n\t\treturn new Rect(m.rect_clone(this.addr));\n\t}\n\n\t/**\n\t * Sets all coordinates of the rectangle to zero.\n\t */\n\tzero() : Rect {\n\t\tm.rect_zero(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets all coordinates of the rectangle to `null` for subsequent use with `extend`.\n\t */\n\treset() : Rect {\n\t\tm.rect_reset(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle to contain the specified vector coordinates.\n\t */\n\textend (v: Vec2) : Rect;\n\t/**\n\t * Extends the rectangle to contain the specified point.\n\t */\n\textend (x: number, y: number) : Rect;\n\n\textend (x: Vec2|number, y: number=null) : Rect\n\t{\n\t\tif (y === null)\n\t\t\tm.rect_extend1v(this.addr, (x as Vec2).addr);\n\t\telse\n\t\t\tm.rect_extend2f(this.addr, x, y);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the rectangle by the vector coordinates.\n\t */\n\ttranslate (v: Vec2) : Rect;\n\t/**\n\t * Translates the rectangle by the given deltas.\n\t */\n\ttranslate (dx: number, dy: number) : Rect;\n\n\ttranslate (dx: Vec2|number, dy: number=null) : Rect\n\t{\n\t\tif (dy === null)\n\t\t\tm.rect_translate1v(this.addr, (dx as Vec2).addr);\n\t\telse\n\t\t\tm.rect_translate2f(this.addr, dx, dy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the center of the rectangle to the specified position.\t \n\t * @param normalized - When `true` the parameters `x` and `y` are treated as normalized ranging from 0 to 1 (inclusive).\n\t * !centerAt (x: number, y: number, normalized?: false) : Rect;\n\t */\n\tcenter (x: number, y: number, normalized: boolean=false) : Rect\n\t{\n\t\tm.rect_center(this.addr, x, y, normalized);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies the coordinates from the specified rectangle.\n\t */\n\tset (r: Rect) : Rect;\n\t/**\n\t * Sets the coordinates of the rectangle.\n\t */\n\tset (x1: number, y1: number, x2: number, y2: number) : Rect;\n\n\tset (x1: Rect|number, y1: number=null, x2?: number, y2?: number) : Rect\n\t{\n\t\tif (y1 === null)\n\t\t\tm.rect_set1r(this.addr, (x1 as Rect).addr);\n\t\telse\n\t\t\tm.rect_set4f(this.addr, x1, y1, x2, y2);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns `true` if the given rectangle coordinates are equal.\n\t */\n\tequals (r: Rect) : boolean;\n\t/**\n\t * \tReturns `true` if the coordinates are equal.\n\t */\n\tequals (x1: number, y1: number, x2: number, y2: number) : boolean;\n\t\n\tequals (x1: Rect|number, y1: number=null, x2?: number, y2?: number) : boolean\n\t{\n\t\tif (y1 === null)\n\t\t\treturn m.rect_equals1r(this.addr, (x1 as Rect).addr);\n\n\t\treturn m.rect_equals4f(this.addr, x1, y1, x2, y2);\n\t}\n\n\t/**\n\t * Returns `true` if the rectangle contains the given one.\n\t */\n\tcontains (r: Rect) : boolean;\n\t/**\n\t * Returns `true` if the rectangle contains the given one describes by the (x1, y1) to (x2, y2) coordinates.\n\t */\n\tcontains (x1: number, y1: number, x2: number, y2: number) : boolean;\n\t/**\n\t * Returns `true` if the rectangle contains the vector given coordinates.\n\t */\n\tcontains (v: Vec2, epsilon?: number) : boolean;\n\t/**\n\t * Returns `true` if the rectangle contains the given coordinates.\n\t */\n\tcontains (x: number, y: number, epsilon?: number) : boolean;\n\n\tcontains (x1: Rect|Vec2|number, y1: number=0, x2: number=0, y2: number=null) : boolean\n\t{\n\t\tif (x1 instanceof Rect)\n\t\t\treturn m.rect_contains1r(this.addr, x1.addr);\n\n\t\tif (x1 instanceof Vec2)\n\t\t\treturn m.rect_contains1v(this.addr, x1.addr, x2);\n\n\t\tif (y2 === null)\n\t\t\treturn m.rect_contains2f(this.addr, x1, y1, x2);\n\n\t\treturn m.rect_contains4f(this.addr, x1, y1, x2, y2);\n\t}\n\n\t/**\n\t * Sets the coordinates of the rectangle to the union of it and the given one.\n\t */\n\tunion (r: Rect) : Rect;\n\t/**\n\t * Sets the coordinates of the rectangle to the union of it and the given one.\n\t */\n\tunion (x1: number, y1: number, x2: number, y2: number) : Rect;\n\t\n\tunion (x1: Rect|number, y1: number=null, x2?: number, y2?: number) : Rect\n\t{\n\t\tif (y1 === null)\n\t\t\tm.rect_union1r(this.addr, (x1 as Rect).addr);\n\t\telse\n\t\t\tm.rect_union4f(this.addr, x1, y1, x2, y2);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns `true` if the rectangles intersect.\n\t */\n\tintersects (r: Rect) : Rect;\n\t/**\n\t * Returns `true` if the rectangle and the given coordinates intersect.\n\t */\n\tintersects (x1: number, y1: number, x2: number, y2: number) : Rect;\n\n\tintersects (x1: Rect|number, y1: number=null, x2?: number, y2?: number) : Rect\n\t{\n\t\tif (y1 === null)\n\t\t\tm.rect_intersects1r(this.addr, (x1 as Rect).addr);\n\t\telse\n\t\t\tm.rect_intersects4f(this.addr, x1, y1, x2, y2);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the coordinates of the rectangle to the intersection of it and the given one.\n\t */\n\tintersection (r: Rect) : boolean;\n\t/**\n\t * Sets the coordinates of the rectangle to the intersection of it and the given one.\n\t */\n\tintersection (x1: number, y1: number, x2: number, y2: number) : boolean;\n\n\tintersection (x1: Rect|number, y1: number=null, x2?: number, y2?: number) : boolean\n\t{\n\t\tif (y1 === null)\n\t\t\treturn m.rect_intersection1r(this.addr, (x1 as Rect).addr);\n\n\t\treturn m.rect_intersection4f(this.addr, x1, y1, x2, y2);\n\t}\n\n\t/**\n\t * Resizes the rectangle to the given size using its center or top-left corner as reference.\n\t * @param topLeft - When `true` reference will be top-left corner, set to `false` to use the center.\n\t * @param normalized - When `true` the `width` and `height` will be treated as normalized values ranging from 0 to 1 (inclusive).\n\t */\n\tresize (width: number, height: number, topLeft: boolean=false, normalized: boolean=false) : Rect\n\t{\n\t\tm.rect_resize (this.addr, width, height, topLeft, normalized);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resizes the rectangle using the specified deltas, relative to its center or top-left corner.\n\t * @param topLeft - When `true` reference will be top-left corner, set to `false` to use the center.\n\t */\n\tresizeBy (dWidth: number, dHeight: number, topLeft: boolean=false) : Rect\n\t{\n\t\tm.rect_resizeBy (this.addr, dWidth, dHeight, topLeft);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the value of the X1 coordinate.\n\t */\n\tx1() : number {\n\t\treturn this.data[0];\n\t}\n\n\t/**\n\t * Returns the value of the Y1 coordinate.\n\t */\n\ty1() : number {\n\t\treturn this.data[1];\n\t}\n\n\n\t/**\n\t * Returns the value of the X2 coordinate.\n\t */\n\tx2() : number {\n\t\treturn this.data[2];\n\t}\n\n\t/**\n\t * Returns the value of the Y2 coordinate.\n\t */\n\ty2() : number {\n\t\treturn this.data[3];\n\t}\n\n\t/**\n\t * Returns the value of the center X coordinate.\n\t */\n\tcx() : number {\n\t\treturn this.data[4];\n\t}\n\n\t/**\n\t * Returns the value of the center Y coordinate.\n\t */\n\tcy() : number {\n\t\treturn this.data[5];\n\t}\n\n\t/**\n\t * Returns the width of the rectangle.\n\t */\n\twidth() : number {\n\t\treturn m.rect_width (this.addr);\n\t}\n\n\t/**\n\t * Returns the height of the rectangle.\t \n\t */\n\theight() : number {\n\t\treturn m.rect_height (this.addr);\n\t}\n\n\t/**\n\t * Returns `true` if the rectangle is a right rectangle, that is: x1 < x2 and y1 < y2.\n\t */\n\tisRight() : boolean {\n\t\treturn m.rect_isRight (this.addr);\n\t}\n\n\t/**\n\t * Returns the area of the rectangle.\n\t * @param strict - Indicates if the area is returned only if the rectangle is a right rectangle.\n\t */\n\tarea (strict?: boolean) : number {\n\t\treturn m.rect_area (this.addr, strict);\n\t}\n\n\t/**\n\t * Performs `floor` on the coordinates of the rectangle.\n\t */\n\tfloor() : Rect {\n\t\tm.rect_floor (this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Performs `ceil` on the coordinates of the rectangle.\n\t */\n\tceil() : Rect {\n\t\tm.rect_ceil (this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the rectangle coordinates to their integer parts.\n\t */\n\ttrunc() : Rect {\n\t\tm.rect_trunc (this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Truncates the rectangle coordinates to their fractional parts.\n\t */\n\tfract() : Rect {\n\t\tm.rect_fract (this.addr);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Returns the string representation of the rectangle.\n\t */\n\ttoString() : string\n\t{\n\t\treturn `(${this.x1()}, ${this.y1()}, ${this.x2()}, ${this.y2()})`;\n\t}\n};\n","\nimport { Module } from \"asyl\";\n\nlet m: Module = null;\n\n/**\n * 3x3 Matrix.\n */\nexport default class Mat3\n{\n\t/**\n\t * Address of underlying mat3 object.\n\t */\n\taddr: number;\n\n\t/**\n\t * Underlying vector data.\n\t */\n\tdata: Float32Array;\n\n\t/**\n\t * Binds the specified Asyl module to the class.\n\t */\n\tstatic bind (module: Module) : void {\n\t\tm = module;\n\t}\n\n\t/**\n\t * Allocates a new matrix.\n\t */\n\tstatic alloc() : Mat3\n\t{\n\t\treturn new Mat3(m.mat3_alloc());\n\t}\n\n\t/**\n\t * Constructs the matrix object.\n\t */\n\tprivate constructor (addr: number) {\n\t\tthis.addr = addr;\n\t\tthis.data = m.mapFloat32Array(addr, 9);\n\t}\n\n\t/**\n\t * Destroys the instance.\n\t */\n\tdtor() : void {\n\t\tm.mat3_dtor(this.addr);\n\t}\n\n\t/**\n\t * Returns a clone of the matrix.\n\t */\n\tclone() : Mat3 {\n\t\treturn new Mat3(m.mat3_clone(this.addr));\n\t}\n\n\t/**\n\t * Sets all components of the matrix to the given value.\n\t */\n\tfill (value: number) : Mat3 {\n\t\tm.mat3_fill1f(this.addr, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the diagonal of the matrix to the specified value.\n\t */\n\tset (value: number) : Mat3;\n\t/**\n\t * Copies all the components from the specified matrix.\n\t */\n\tset (matrix: Mat3) : Mat3;\n\t/**\n\t * Sets a column of the matrix.\n\t */\n\tset (col: number, a0: number, a1: number, a2: number) : Mat3;\n\n\tset (value: Mat3|number, a0: number=null, a1: number=null, a2: number=null) : Mat3\n\t{\n\t\tif (value instanceof Mat3) {\n\t\t\tm.mat3_set1m(this.addr, value.addr);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (a0 === null) {\n\t\t\tm.mat3_set1f(this.addr, value);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.mat3_set1i3f(this.addr, value, a0, a1, a2);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a column of the matrix.\n\t */\n\tcol (col: number, a0: number, a1: number, a2: number) : Mat3\n\t{\n\t\tm.mat3_col1i3f(this.addr, col, a0, a1, a2);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a row of the matrix.\n\t */\n\trow (row: number, a0: number, a1: number, a2: number) : Mat3\n\t{\n\t\tm.mat3_row1i3f(this.addr, row, a0, a1, a2);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets all components of the matrix to zero, and the diagonal to ones.\n\t */\n\tidentity() : Mat3\n\t{\n\t\tm.mat3_identity(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Scales all the components of the matrix by the specified factor.\n\t */\n\tscale (f: number) : Mat3;\n\t/**\n\t * Appends a `scale` matrix constructed with the specified factors.\n\t */\n\tscale (sx: number, sy: number) : Mat3;\n\n\tscale (sx: number, sy: number=null) : Mat3\n\t{\n\t\tif (sy === null)\n\t\t\tm.mat3_scale1f(this.addr, sx);\n\t\telse\n\t\t\tm.mat3_scale2f(this.addr, sx, sy);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transposes the matrix.\n\t */\n\ttranspose() : Mat3\n\t{\n\t\tm.mat3_transpose(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the determinant of the matrix.\n\t */\n\tdet() : number\n\t{\n\t\treturn m.mat3_det(this.addr);\n\t}\n\n\t/**\n\t * Appends the given matrix by using matrix multiplication.\n\t */\n\tappend (matrix: Mat3) : Mat3\n\t{\n\t\tm.mat3_append1m(this.addr, matrix.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a translation matrix constructed with the specified deltas.\n\t */\n\ttranslate (dx: number, dy: number) : Mat3\n\t{\n\t\tm.mat3_translate2f(this.addr, dx, dy);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a rotation matrix constructed for the specified angle (in radians).\n\t */\n\trotate (angle: number) : Mat3\n\t{\n\t\tm.mat3_rotate1f(this.addr, angle);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the string representation of the matrix.\n\t */\n\ttoString() : string\n\t{\n\t\treturn '[' + Array.from(this.data).join(', ') + ']';\n\t}\n};\n","\nimport { Module } from \"asyl\";\n\nlet m: Module = null;\n\n/**\n * 4x4 Matrix.\n */\nexport default class Mat4\n{\n\t/**\n\t * Address of underlying mat4 object.\n\t */\n\taddr: number;\n\n\t/**\n\t * Underlying vector data.\n\t */\n\tdata: Float32Array;\n\n\t/**\n\t * Binds the specified Asyl module to the class.\n\t */\n\tstatic bind (module: Module) : void {\n\t\tm = module;\n\t}\n\n\t/**\n\t * Allocates a new matrix.\n\t */\n\tstatic alloc() : Mat4\n\t{\n\t\treturn new Mat4(m.mat4_alloc());\n\t}\n\n\t/**\n\t * Constructs the matrix object.\n\t */\n\tprivate constructor (addr: number) {\n\t\tthis.addr = addr;\n\t\tthis.data = m.mapFloat32Array(addr, 16);\n\t}\n\n\t/**\n\t * Destroys the instance.\n\t */\n\tdtor() : void {\n\t\tm.mat4_dtor(this.addr);\n\t}\n\n\t/**\n\t * Returns a clone of the matrix.\n\t */\n\tclone() : Mat4 {\n\t\treturn new Mat4(m.mat4_clone(this.addr));\n\t}\n\n\t/**\n\t * Sets all components of the matrix to the given value.\n\t */\n\tfill (value: number) : Mat4 {\n\t\tm.mat4_fill1f(this.addr, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the diagonal of the matrix to the specified value.\n\t */\n\tset (value: number) : Mat4;\n\t/**\n\t * Copies all the components from the specified matrix.\n\t */\n\tset (matrix: Mat4) : Mat4;\n\t/**\n\t * Sets a column of the matrix.\n\t */\n\tset (col: number, a0: number, a1: number, a2: number, a3: number) : Mat4;\n\n\tset (value: Mat4|number, a0: number=null, a1: number=null, a2: number=null, a3: number=null) : Mat4\n\t{\n\t\tif (value instanceof Mat4) {\n\t\t\tm.mat4_set1m(this.addr, value.addr);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (a0 === null) {\n\t\t\tm.mat4_set1f(this.addr, value);\n\t\t\treturn this;\n\t\t}\n\n\t\tm.mat4_set1i4f(this.addr, value, a0, a1, a2, a3);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a column of the matrix.\n\t */\n\tcol (col: number, a0: number, a1: number, a2: number, a3: number) : Mat4\n\t{\n\t\tm.mat4_col1i4f(this.addr, col, a0, a1, a2, a3);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a row of the matrix.\n\t */\n\trow (row: number, a0: number, a1: number, a2: number, a3: number) : Mat4\n\t{\n\t\tm.mat4_row1i4f(this.addr, row, a0, a1, a2, a3);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets all components of the matrix to zero, and the diagonal to ones.\n\t */\n\tidentity() : Mat4\n\t{\n\t\tm.mat4_identity(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Scales all the components of the matrix by the specified factor.\n\t */\n\tscale (f: number) : Mat4;\n\t/**\n\t * Appends a `scale` matrix constructed with the specified factors.\n\t */\n\tscale (sx: number, sy: number, sz: number) : Mat4;\n\n\tscale (sx: number, sy: number=null, sz: number=null) : Mat4\n\t{\n\t\tif (sy === null)\n\t\t\tm.mat4_scale1f(this.addr, sx);\n\t\telse\n\t\t\tm.mat4_scale3f(this.addr, sx, sy, sz);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transposes the matrix.\n\t */\n\ttranspose() : Mat4\n\t{\n\t\tm.mat4_transpose(this.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the determinant of the matrix.\n\t */\n\tdet() : number\n\t{\n\t\treturn m.mat4_det(this.addr);\n\t}\n\n\t/**\n\t * Appends the given matrix by using matrix multiplication.\n\t */\n\tappend (matrix: Mat4) : Mat4\n\t{\n\t\tm.mat4_append1m(this.addr, matrix.addr);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a translation matrix constructed with the specified deltas.\n\t */\n\ttranslate (dx: number, dy: number, dz: number) : Mat4\n\t{\n\t\tm.mat4_translate3f(this.addr, dx, dy, dz);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the X-axis.\n\t */\n\trotateX (angle: number) : Mat4\n\t{\n\t\tm.mat4_rotateX(this.addr, angle);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the Y-axis.\n\t */\n\trotateY (angle: number) : Mat4\n\t{\n\t\tm.mat4_rotateY(this.addr, angle);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends a rotation matrix constructed for the specified angle (radians) along the Z-axis.\n\t */\n\trotateZ (angle: number) : Mat4\n\t{\n\t\tm.mat4_rotateZ(this.addr, angle);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the string representation of the matrix.\n\t */\n\ttoString() : string\n\t{\n\t\treturn '[' + Array.from(this.data).join(', ') + ']';\n\t}\n};\n","module.exports = \"224052483937a0bf\";"],"names":["loadFromDataUri","$X9A9e$loadFromDataUri","$485e585505f5c80a$var$m","$485e585505f5c80a$export$2e2bcd8739ae039","bind","module","alloc","x","y","vec2_alloc2f","constructor","addr","data","mapFloat32Array","dtor","vec2_dtor","clone","vec2_clone","set","vec2_set1v","vec2_set2f","setX","setY","zero","vec2_zero","iszero","vec2_iszero","equals","vec2_equals1v","vec2_equals2f","almost","epsilon","vec2_almost1v","vec2_almost2f","neg","vec2_neg","inv","vec2_inv","abs","vec2_abs","translate","dx","dy","vec2_translate1v","vec2_translate2f","rotate","angle","cx","cy","vec2_rotate3f","add","vec2_add1v","vec2_add2f","sub","vec2_sub1v","vec2_sub2f","scale","fx","fy","vec2_scale1v","vec2_scale1f","vec2_scale2f","floor","vec2_floor","ceil","vec2_ceil","trunc","vec2_trunc","fract","vec2_fract","dot","vec2_dot1v","vec2_dot2f","mag2","vec2_mag2","mag","vec2_mag","unit","vec2_unit","major","vec2_major","minor","vec2_minor","sign","vec2_sign","toString","$baf50d9434a9dd81$var$m","$baf50d9434a9dd81$export$2e2bcd8739ae039","z","w","vec4_alloc4f","vec4_dtor","vec4_clone","vec4_set1v","vec4_set4f","setZ","setW","vec4_zero","vec4_iszero","vec4_equals1v","vec4_equals2f","vec4_equals4f","vec4_almost1v","vec4_almost2f","vec4_almost4f","vec4_neg","vec4_inv","vec4_abs","dz","dw","vec4_translate1v","vec4_translate2f","vec4_translate4f","vec4_add1v","vec4_add2f","vec4_add4f","vec4_sub1v","vec4_sub2f","vec4_sub4f","fz","fw","vec4_scale1v","vec4_scale1f","vec4_scale2f","vec4_scale4f","vec4_floor","vec4_ceil","vec4_trunc","vec4_fract","vec4_dot1v","vec4_dot2f","vec4_dot4f","vec4_mag2","vec4_mag","vec4_unit","vec4_major","vec4_minor","vec4_sign","$8d9a8566653c0099$var$m","$8d9a8566653c0099$export$2e2bcd8739ae039","x1","y1","x2","y2","rect_alloc4f","rect_alloc2f","rect_dtor","rect_clone","rect_zero","reset","rect_reset","extend","rect_extend1v","rect_extend2f","rect_translate1v","rect_translate2f","center","normalized","rect_center","rect_set1r","rect_set4f","rect_equals1r","rect_equals4f","contains","rect_contains1r","rect_contains1v","rect_contains2f","rect_contains4f","union","rect_union1r","rect_union4f","intersects","rect_intersects1r","rect_intersects4f","intersection","rect_intersection1r","rect_intersection4f","resize","width","height","topLeft","rect_resize","resizeBy","dWidth","dHeight","rect_resizeBy","rect_width","rect_height","isRight","rect_isRight","area","strict","rect_area","rect_floor","rect_ceil","rect_trunc","rect_fract","$f4e62a7eed23d321$var$m","$f4e62a7eed23d321$export$2e2bcd8739ae039","mat3_alloc","mat3_dtor","mat3_clone","fill","value","mat3_fill1f","a0","a1","a2","mat3_set1m","mat3_set1f","mat3_set1i3f","col","mat3_col1i3f","row","mat3_row1i3f","identity","mat3_identity","sx","sy","mat3_scale1f","mat3_scale2f","transpose","mat3_transpose","det","mat3_det","append","matrix","mat3_append1m","mat3_translate2f","mat3_rotate1f","Array","from","join","$3514beae8516eb55$var$m","$3514beae8516eb55$export$2e2bcd8739ae039","mat4_alloc","mat4_dtor","mat4_clone","mat4_fill1f","a3","mat4_set1m","mat4_set1f","mat4_set1i4f","mat4_col1i4f","mat4_row1i4f","mat4_identity","sz","mat4_scale1f","mat4_scale3f","mat4_transpose","mat4_det","mat4_append1m","mat4_translate3f","rotateX","mat4_rotateX","rotateY","mat4_rotateY","rotateZ","mat4_rotateZ","$3b9d45a30e932e6f$exports","$c5a61c35cbd537f5$export$130be424786e852f","$c5a61c35cbd537f5$export$2cd8252107eb640b","Promise","resolve","reject","a","__esModule","default","then","asylModule","catch","init","Vec2","Vec4","Rect","Mat3","Mat4"],"version":3,"file":"froxel-math.m.js.map"}